name: Build & Evaluate (in Docker)
on:
  push:
    branches:
      - "main"
  pull_request:
  merge_group:

permissions:
  contents: write
  packages: write

jobs:
  core-docker-img:
    name: Build Docker image for core library
    runs-on: namespace-profile-leanmlir-docker-cached 
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/opencompl/lean-mlir
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ github.sha }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  bitwuzla-docker-img:
    name: Build Docker image for Bitwuzla
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: "./bv-evaluation"
          push: true
          tags: ghcr.io/opencompl/bitwuzla:latest
          outputs: type=docker,dest=${{ runner.temp }}/bitwuzla.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-tools:
    name: tools, scaling, and auto-generated stmts
    runs-on: ubuntu-latest # Run on GH-provided runner
    needs: core-docker-img
    container: "ghcr.io/opencompl/lean-mlir:${{ github.sha }}"
    defaults:
      run:
        working-directory: /code/lean-mlir
    steps:
      - name: Compile `mlirnatural` Executable üßê
        run: |
          lake -R build mlirnatural

      - name: Compile `opt` Executable üßê
        run: |
          lake -R build opt

#      This broke the build during a recent update
#      - name: LLVM opt round trip test
#        run: |
#          lake exec opt test/LLVMDialect/InstCombine/bb0.mlir

      - name: Compile Alive Scaling
        run: |
          lake -R build SSA.Projects.InstCombine.ScalingTest

      - name: Check for changes in AliveStatements
        run: |
          lake build AliveExamples
          (cd SSA/Projects/InstCombine/; ./update_alive_statements.py)
          bash -c '! git diff | grep .'  # iff git diff is empty, 'grep .' fails, '!' inverts the failure, and in the forced bash