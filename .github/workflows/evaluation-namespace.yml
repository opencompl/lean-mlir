name: Evaluation (Namespace)
on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: write

jobs:
  eval-build:
    name: Build Lean-MLIR
    runs-on: namespace-profile-lean-mlir-default
    steps:
      - name: Checkout code
        uses: namespacelabs/nscloud-checkout-action@v7

      - name: Cache `.elan` folders
        id: cache-lean
        uses: actions/cache@v4
        with:
          path: |
            ~/.elan
          key: ${{ runner.os }}-elan-${{ hashFiles('lean-toolchain') }}
          restore-keys: |
            ${{ runner.os }}-elan-${{ hashFiles('lean-toolchain') }}

      - name: Install Elan & Lean
        if: steps.cache-lean.outputs.cache-hit != 'true'
        run: |
          set -o pipefail
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- --default-toolchain none -y
          ~/.elan/bin/lean --version

      - name: Make lake available
        run: |
          echo "$HOME/.elan/bin" >> $GITHUB_PATH

      - name: Cache `.lake` folders
        id: cache-lake
        uses: actions/cache@v4
        with:
          path: |
            .lake/packages
            .lake/build
            */.lake
          key: ${{ runner.os }}-lake-packages-${{ hashFiles('lake-manifest.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-lake-packages-${{ hashFiles('lake-manifest.json') }}-${{ github.sha }}
            ${{ runner.os }}-lake-packages-${{ hashFiles('lake-manifest.json') }}

      - name: Build Lean-MLIR & Mathlib
        # We build Mathlib from scratch as this reduces the build artifacts that are stored in the cache. Previous experiments
        # led to savings from avoiding a full Mathlib cache in the order of a couple hundred MBs.
        run: |
          lake -R build
