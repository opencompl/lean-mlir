error: build failed
⚠ [2443/2457] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2447/2457] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2451/2457] Replayed SSA.Experimental.Bits.AutoStructs.Basic
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:99:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:102:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:104:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:106:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:109:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:111:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:113:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:116:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:127:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:164:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:335:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:408:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:443:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:477:6: declaration uses 'sorry'
⚠ [2453/2457] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:24:38: structure ... :=' has been deprecated in favor of 'structure ... where'.
note: this linter can be disabled with `set_option linter.deprecated false`
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:511:59: structure ... :=' has been deprecated in favor of 'structure ... where'.
note: this linter can be disabled with `set_option linter.deprecated false`
✖ [2457/2457] Building SSA.Projects.InstCombine.tests.LLVM.gorhshiftedhmasks
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/MD4Lean/.lake/build/lib:././.lake/packages/UnicodeBasic/.lake/build/lib:././.lake/packages/BibtexQuery/.lake/build/lib:././.lake/packages/doc-gen4/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/lfrenot/.elan/toolchains/leanprover--lean4---nightly-2024-10-15/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.c --json
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:56:17: theorem extracted_1 (x : BitVec 32) :
  x <<< 3 &&& 15#32 ||| x <<< 5 &&& 60#32 = x <<< 3 &&& 8#32 ||| x <<< 5 &&& 32#32 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:46:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:101:17: theorem extracted_1 (x : BitVec 32) :
  (x &&& 7#32) <<< 3 ||| x <<< 2 &&& 28#32 = x <<< 3 &&& 56#32 ||| x <<< 2 &&& 28#32 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:91:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:153:17: theorem extracted_1 (x : BitVec 32) :
  ((if ((x &&& 2#32) <<< 6).sshiftRight 6 = x &&& 2#32 then none
        else if (x &&& 2#32) <<< 6 >>> 6 = x &&& 2#32 then none else some ((x &&& 2#32) <<< 6)).bind
      fun a =>
      (if ((x &&& 4#32) <<< 6).sshiftRight 6 = x &&& 4#32 then none
          else if (x &&& 4#32) <<< 6 >>> 6 = x &&& 4#32 then none else some ((x &&& 4#32) <<< 6)).bind
        fun x_1 => some ((x &&& 2#32) >>> 1 ||| (x &&& 4#32) >>> 1 ||| (a ||| x_1))) ⊑
    some (x >>> 1 &&& 1#32 ||| x >>> 1 &&& 2#32 ||| x <<< 6 &&& 384#32) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:143:8: declaration uses 'sorry'
error: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:206:64: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:271:17: theorem extracted_1 (x : BitVec 32) :
  ((if ((x &&& 96#32) <<< 6).sshiftRight 6 = x &&& 96#32 then none
        else if (x &&& 96#32) <<< 6 >>> 6 = x &&& 96#32 then none else some ((x &&& 96#32) <<< 6)).bind
      fun a => some ((x &&& 96#32) >>> 1 ||| x >>> 1 &&& 15#32 ||| (a ||| x <<< 6 &&& 1920#32))) ⊑
    some (x >>> 1 &&& 48#32 ||| x >>> 1 &&& 15#32 ||| x <<< 6 &&& 8064#32) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:261:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:308:17: theorem extracted_1 (x : BitVec 32) :
  some (x &&& 255#32 ||| (x &&& 255#32) <<< 8) ⊑
    (if ((x &&& 255#32) <<< 8).sshiftRight 8 = x &&& 255#32 then none
        else if (x &&& 255#32) <<< 8 >>> 8 = x &&& 255#32 then none else some ((x &&& 255#32) <<< 8)).bind
      fun y' => some (x &&& 255#32 ||| y') := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:298:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:345:17: theorem extracted_1 (x : BitVec 32) :
  some (x &&& 255#32 ||| (x &&& 255#32) <<< 7) ⊑
    (if ((x &&& 255#32) <<< 7).sshiftRight 7 = x &&& 255#32 then none
        else if (x &&& 255#32) <<< 7 >>> 7 = x &&& 255#32 then none else some ((x &&& 255#32) <<< 7)).bind
      fun y' => some (x &&& 255#32 ||| y') := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:335:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:382:17: theorem extracted_1 (x : BitVec 37) :
  some (x &&& 255#37 ||| (x &&& 255#37) <<< 8) ⊑
    (if ((x &&& 255#37) <<< 8).sshiftRight 8 = x &&& 255#37 then none
        else if (x &&& 255#37) <<< 8 >>> 8 = x &&& 255#37 then none else some ((x &&& 255#37) <<< 8)).bind
      fun y' => some (x &&& 255#37 ||| y') := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:372:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:423:17: theorem extracted_1 (x : BitVec 32) :
  some ((x &&& 255#32) * 65537#32 ||| (x &&& 255#32) <<< 8) ⊑
    (if
            signExtend 64 (x &&& 255#32) * 65537#64 < signExtend 64 (twoPow 32 31) ∨
              twoPow 64 31 ≤ signExtend 64 (x &&& 255#32) * 65537#64 then
          none
        else
          if twoPow 64 31 <<< 1 ≤ (setWidth 64 x &&& 255#64) * 65537#64 then none
          else some ((x &&& 255#32) * 65537#32)).bind
      fun a =>
      (if ((x &&& 255#32) <<< 8).sshiftRight 8 = x &&& 255#32 then none
          else if (x &&& 255#32) <<< 8 >>> 8 = x &&& 255#32 then none else some ((x &&& 255#32) <<< 8)).bind
        fun y' => some (a ||| y') := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:413:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:464:17: theorem extracted_1 (x : BitVec 32) :
  some ((x &&& 255#32) * 65535#32 ||| (x &&& 255#32) <<< 8) ⊑
    (if
            signExtend 64 (x &&& 255#32) * 65535#64 < signExtend 64 (twoPow 32 31) ∨
              twoPow 64 31 ≤ signExtend 64 (x &&& 255#32) * 65535#64 then
          none
        else
          if twoPow 64 31 <<< 1 ≤ (setWidth 64 x &&& 255#64) * 65535#64 then none
          else some ((x &&& 255#32) * 65535#32)).bind
      fun a =>
      (if ((x &&& 255#32) <<< 8).sshiftRight 8 = x &&& 255#32 then none
          else if (x &&& 255#32) <<< 8 >>> 8 = x &&& 255#32 then none else some ((x &&& 255#32) <<< 8)).bind
        fun y' => some (a ||| y') := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gorhshiftedhmasks.lean:454:8: declaration uses 'sorry'
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gorhshiftedhmasks
error: build failed
