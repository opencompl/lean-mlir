⚠ [46/2519] Replayed Mathlib.Logic.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:155:8: `dec_em'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:159:8: `em'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:304:8: `or_congr_left'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:307:8: `or_congr_right'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:320:8: `imp_or'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:359:8: `xor_iff_not_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:418:8: `eqRec_heq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:515:8: `forall_true_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:536:8: `exists_apply_eq_apply'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:543:6: `exists_apply_eq_apply2'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:552:6: `exists_apply_eq_apply3'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:579:8: `forall_apply_eq_imp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:582:8: `forall_eq_apply_imp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:642:8: `forall_prop_congr'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:715:6: `Classical.choose_eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:851:8: `dite_eq_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:855:8: `ite_eq_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [62/2519] Replayed Mathlib.Algebra.NeZero
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:44:6: `zero_ne_one'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:46:6: `one_ne_zero'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:48:6: `two_ne_zero'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:50:6: `three_ne_zero'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:52:6: `four_ne_zero'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [65/2519] Replayed Mathlib.Logic.ExistsUnique
warning: ././.lake/packages/mathlib/././Mathlib/Logic/ExistsUnique.lean:109:16: `exists_unique_eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [70/2519] Replayed Mathlib.Logic.Function.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:83:8: `Function.Injective.eq_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:92:8: `Function.Injective.ne_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:122:8: `Function.Injective.of_comp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:168:8: `Function.Surjective.of_comp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:242:8: `Function.Bijective.of_comp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:546:8: `Function.update_comp_eq_of_forall_ne'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:557:8: `Function.update_comp_eq_of_injective'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:654:8: `Function.extend_apply'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:686:8: `Function.Injective.surjective_comp_right'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [88/2519] Replayed Mathlib.Data.Nat.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:89:6: `Nat.succ_pos'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:280:16: `Nat.sub_eq_of_eq_add'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:282:16: `Nat.eq_sub_of_add_eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:285:16: `Nat.lt_sub_iff_add_lt'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:287:16: `Nat.sub_lt_iff_lt_add'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:370:6: `Nat.mul_lt_mul''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:415:6: `Nat.le_div_iff_mul_le'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:417:6: `Nat.div_lt_iff_lt_mul'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:451:16: `Nat.mul_div_cancel_left'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:503:16: `Nat.div_le_of_le_mul'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:517:16: `Nat.div_le_self'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:628:6: `Nat.one_le_pow'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:634:6: `Nat.one_lt_pow'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:643:6: `Nat.one_lt_two_pow'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:726:6: `Nat.leRec_succ'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:770:6: `Nat.leRecOn_succ'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:877:6: `Nat.decreasingInduction_succ'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:1066:6: `Nat.mod_add_div'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:1068:6: `Nat.div_add_mod'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:1158:6: `Nat.mul_add_mod'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Nat/Defs.lean:1175:6: `Nat.dvd_sub'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [90/2519] Replayed Mathlib.Control.Combinators
warning: ././.lake/packages/mathlib/././Mathlib/Control/Combinators.lean:35:4: `Monad.mapM'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Control/Combinators.lean:57:4: `Monad.sequence'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [92/2519] Replayed Mathlib.Logic.IsEmpty
warning: ././.lake/packages/mathlib/././Mathlib/Logic/IsEmpty.lean:36:9: `Fin.isEmpty'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [226/2519] Replayed Mathlib.Data.Prod.PProd
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/PProd.lean:35:8: `PProd.forall'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/PProd.lean:38:8: `PProd.exists'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [227/2519] Replayed Mathlib.Data.Bool.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Data/Bool/Basic.lean:156:8: `Bool.eq_true_of_not_eq_false'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Bool/Basic.lean:159:8: `Bool.eq_false_of_not_eq_true'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [229/2519] Replayed Mathlib.Logic.Function.Iterate
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Iterate.lean:160:8: `Function.iterate_succ'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Iterate.lean:163:8: `Function.iterate_succ_apply'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [231/2519] Replayed Mathlib.Data.Prod.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:31:8: `Prod.forall'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:34:8: `Prod.exists'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:51:8: `Prod.map_apply'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:54:8: `Prod.map_fst'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:57:8: `Prod.map_snd'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [232/2519] Replayed Mathlib.Data.Sigma.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Data/Sigma/Basic.lean:90:6: `Sigma.exists'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Sigma/Basic.lean:93:6: `Sigma.forall'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [240/2519] Replayed Mathlib.Data.FunLike.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Data/FunLike/Basic.lean:187:8: `DFunLike.ext'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [245/2519] Replayed Mathlib.Logic.Relation
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:351:8: `Relation.TransGen.head'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:354:8: `Relation.TransGen.tail'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:444:8: `Relation.TransGen.lift'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:453:6: `Relation.TransGen.closed'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:523:8: `Relation.ReflTransGen.lift'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [246/2519] Replayed Mathlib.Logic.Unique
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Unique.lean:131:18: `Unique.subsingleton_unique'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Unique.lean:259:9: `Unique.subtypeEq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [253/2519] Replayed Mathlib.Data.Quot
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:563:18: `Quotient.liftOn'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:567:14: `Quotient.surjective_liftOn'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:578:18: `Quotient.liftOn₂'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:644:8: `Quotient.hrecOn'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:657:8: `Quotient.hrecOn₂'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:669:8: `Quotient.map'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:679:8: `Quotient.map₂'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:684:8: `Quotient.exact'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:688:8: `Quotient.sound'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:692:18: `Quotient.eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:696:18: `Quotient.eq''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:705:8: `Quotient.out_eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:708:8: `Quotient.mk_out'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [257/2519] Replayed Mathlib.Tactic.Lift
warning: ././.lake/packages/mathlib/././Mathlib/Tactic/Lift.lean:49:9: `PiSubtype.canLift'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [413/2519] Replayed Mathlib.Algebra.Group.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Defs.lean:802:33: `pow_succ'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Defs.lean:807:6: `pow_mul_comm'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Defs.lean:816:6: `pow_three'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Defs.lean:839:6: `pow_mul'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [447/2519] Replayed Mathlib.Data.List.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Data/List/Defs.lean:241:9: `List.decidableChain'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [478/2519] Replayed Mathlib.Control.Applicative
warning: ././.lake/packages/mathlib/././Mathlib/Control/Applicative.lean:34:8: `Applicative.pure_seq_eq_map'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [479/2519] Replayed Mathlib.Control.Traversable.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Basic.lean:139:8: `ApplicativeTransformation.preserves_map'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [626/2519] Replayed Mathlib.Algebra.GroupWithZero.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/GroupWithZero/Defs.lean:110:8: `mul_left_inj'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/GroupWithZero/Defs.lean:113:8: `mul_right_inj'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [627/2519] Replayed Mathlib.Algebra.Ring.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Ring/Defs.lean:233:6: `add_sq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [632/2519] Replayed Mathlib.Algebra.Group.Invertible.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:97:8: `invOf_mul_self'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:103:8: `mul_invOf_self'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:109:8: `invOf_mul_cancel_left'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:120:8: `mul_invOf_cancel_left'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:131:8: `invOf_mul_cancel_right'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:142:8: `mul_invOf_cancel_right'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:198:8: `invOf_one'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [1207/2519] Replayed Mathlib.Control.Traversable.Lemmas
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Lemmas.lean:87:8: `Traversable.naturality'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Lemmas.lean:102:8: `Traversable.traverse_eq_map_id'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Lemmas.lean:108:8: `Traversable.traverse_map'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Lemmas.lean:113:8: `Traversable.map_traverse'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [2464/2519] Replayed Mathlib.Data.List.EditDistance.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Data/List/EditDistance/Defs.lean:214:8: `suffixLevenshtein_nil'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [2504/2519] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2508/2519] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2509/2519] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:24:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:27:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:34:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:41:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:52:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:56:8: declaration uses 'sorry'
⚠ [2514/2519] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:55:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:128:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:163:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:197:6: declaration uses 'sorry'
⚠ [2515/2519] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
✖ [2519/2519] Building SSA.Projects.InstCombine.tests.LLVM.gxor
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/tcg40/.elan/toolchains/leanprover--lean4---nightly-2024-10-30/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gxor.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gxor.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gxor.c --json
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:35:17: theorem extracted_1 (e✝ : IntW 1) : LLVM.xor e✝ (const? 0) ⊑ e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:31:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:59:17: theorem extracted_1 (e✝ : IntW 32) : LLVM.xor e✝ (const? 0) ⊑ e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:55:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:83:17: theorem extracted_1 (e✝ : IntW 1) : LLVM.xor e✝ e✝ ⊑ const? 0 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:79:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:107:17: theorem extracted_1 (e✝ : IntW 32) : LLVM.xor e✝ e✝ ⊑ const? 0 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:103:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:133:17: theorem extracted_1 (e✝ : IntW 32) : LLVM.xor e✝ (LLVM.xor (const? (-1)) e✝) ⊑ const? (-1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:129:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:160:17: theorem extracted_1 (e✝ : IntW 32) :
  LLVM.xor (LLVM.or e✝ (const? 123)) (const? 123) ⊑ LLVM.and e✝ (const? (-124)) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:156:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:185:17: theorem extracted_1 (e✝ : IntW 8) : LLVM.xor (LLVM.xor e✝ (const? 17)) (const? 17) ⊑ e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:181:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:217:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.and e✝¹ (const? 7)) (LLVM.and e✝ (const? 128)) ⊑
    LLVM.or (LLVM.and e✝¹ (const? 7)) (LLVM.and e✝ (const? 128)) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:213:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:247:17: theorem extracted_1 (e✝ : IntW 8) :
  LLVM.xor (LLVM.and e✝ (const? 3)) (const? 4) ⊑ LLVM.or (LLVM.and e✝ (const? 3)) (const? 4) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:243:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:277:17: theorem extracted_1 (e✝ : IntW 8) :
  LLVM.xor (LLVM.or e✝ (const? 12)) (const? 4) ⊑ LLVM.or (LLVM.and e✝ (const? (-13))) (const? 8) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:273:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:305:17: theorem extracted_1 (e✝ : IntW 32) : sub (const? 123) (LLVM.xor e✝ (const? (-1))) ⊑ add e✝ (const? 124) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:301:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:329:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) : LLVM.xor (LLVM.xor e✝¹ e✝) e✝¹ ⊑ e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:325:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:357:17: theorem extracted_1 (e✝ : IntW 1) : LLVM.xor (zext 32 (LLVM.xor e✝ (const? 1))) (const? 1) ⊑ zext 32 e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:353:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:387:17: theorem extracted_1 (e✝ : IntW 1) :
  LLVM.xor (zext 32 (LLVM.xor e✝ (const? 1))) (const? 2) ⊑ LLVM.xor (zext 32 e✝) (const? 3) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:383:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:414:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.and (LLVM.xor e✝¹ (const? (-1))) e✝) e✝ ⊑ LLVM.and e✝ e✝¹ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:410:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:442:17: theorem extracted_1 (e✝ : IntW 32) :
  LLVM.xor (add e✝ (const? (-2147483647))) (const? (-2147483648)) ⊑ add e✝ (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:438:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:470:17: theorem extracted_1 (e✝ : IntW 32) :
  LLVM.xor (sub (const? (-2147483647)) e✝) (const? (-2147483648)) ⊑ sub (const? 1) e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:466:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:500:17: theorem extracted_1 (e✝ : IntW 1) :
  LLVM.xor (select e✝ (const? 1000) (const? 10)) (const? 123) ⊑ select e✝ (const? 915) (const? 113) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:496:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:533:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.udiv (const? 42) e✝¹) (LLVM.or (LLVM.udiv (const? 42) e✝¹) (LLVM.udiv (const? 42) e✝)) ⊑
    LLVM.and (LLVM.udiv (const? 42) e✝) (LLVM.xor (LLVM.udiv (const? 42) e✝¹) (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:529:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:566:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.or (LLVM.udiv (const? 42) e✝¹) (LLVM.udiv (const? 42) e✝)) (LLVM.udiv (const? 42) e✝) ⊑
    LLVM.and (LLVM.udiv (const? 42) e✝¹) (LLVM.xor (LLVM.udiv (const? 42) e✝) (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:562:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:599:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.or (LLVM.udiv (const? 42) e✝¹) (LLVM.udiv (const? 42) e✝)) (LLVM.udiv (const? 42) e✝¹) ⊑
    LLVM.and (LLVM.udiv (const? 42) e✝) (LLVM.xor (LLVM.udiv (const? 42) e✝¹) (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:595:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:632:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.udiv (const? 42) e✝¹) (LLVM.or (LLVM.udiv (const? 42) e✝) (LLVM.udiv (const? 42) e✝¹)) ⊑
    LLVM.and (LLVM.udiv (const? 42) e✝) (LLVM.xor (LLVM.udiv (const? 42) e✝¹) (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:628:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:665:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.udiv (const? 42) e✝¹) (LLVM.and (LLVM.udiv (const? 42) e✝¹) (LLVM.udiv (const? 42) e✝)) ⊑
    LLVM.and (LLVM.udiv (const? 42) e✝¹) (LLVM.xor (LLVM.udiv (const? 42) e✝) (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:661:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:698:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.and (LLVM.udiv (const? 42) e✝¹) (LLVM.udiv (const? 42) e✝)) (LLVM.udiv (const? 42) e✝) ⊑
    LLVM.and (LLVM.udiv (const? 42) e✝) (LLVM.xor (LLVM.udiv (const? 42) e✝¹) (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:694:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:731:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.and (LLVM.udiv (const? 42) e✝¹) (LLVM.udiv (const? 42) e✝)) (LLVM.udiv (const? 42) e✝¹) ⊑
    LLVM.and (LLVM.udiv (const? 42) e✝¹) (LLVM.xor (LLVM.udiv (const? 42) e✝) (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:727:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:764:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.udiv (const? 42) e✝¹) (LLVM.and (LLVM.udiv (const? 42) e✝) (LLVM.udiv (const? 42) e✝¹)) ⊑
    LLVM.and (LLVM.udiv (const? 42) e✝¹) (LLVM.xor (LLVM.udiv (const? 42) e✝) (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:760:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:793:17: theorem extracted_1 (e✝ e✝¹ e✝² : IntW 4) :
  LLVM.xor (LLVM.or e✝² e✝¹) (LLVM.or e✝² e✝) ⊑ LLVM.and (LLVM.xor e✝¹ e✝) (LLVM.xor e✝² (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:789:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:822:17: theorem extracted_1 (e✝ e✝¹ e✝² : IntW 4) :
  LLVM.xor (LLVM.or e✝² e✝¹) (LLVM.or e✝¹ e✝) ⊑ LLVM.and (LLVM.xor e✝² e✝) (LLVM.xor e✝¹ (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:818:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:851:17: theorem extracted_1 (e✝ e✝¹ e✝² : IntW 4) :
  LLVM.xor (LLVM.or e✝² e✝¹) (LLVM.or e✝ e✝²) ⊑ LLVM.and (LLVM.xor e✝¹ e✝) (LLVM.xor e✝² (const? (-1))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:847:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:883:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  shl (add (LLVM.xor e✝¹ (const? 1073741823)) e✝) (const? 2) ⊑
    shl (add e✝ (LLVM.xor e✝¹ (const? (-1)))) (const? 2) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:879:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:913:17: theorem extracted_1 (e✝ : IntW 8) :
  LLVM.xor (shl e✝ (const? 7)) (const? (-128)) ⊑ shl (LLVM.xor e✝ (const? (-1))) (const? 7) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:909:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:943:17: theorem extracted_1 (e✝ : IntW 8) :
  LLVM.xor (lshr e✝ (const? 5)) (const? 7) ⊑ lshr (LLVM.xor e✝ (const? (-1))) (const? 5) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:939:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:973:17: theorem extracted_1 (e✝ : IntW 8) :
  ashr (LLVM.xor e✝ (const? (-1))) (const? 5) ⊑ LLVM.xor (ashr e✝ (const? 5)) (const? (-1)) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:969:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1004:17: theorem extracted_1 (e✝ e✝¹ : IntW 33) :
  LLVM.xor (LLVM.and (LLVM.udiv (const? 42) e✝¹) (LLVM.xor e✝ (const? (-1)))) e✝ ⊑
    LLVM.or e✝ (LLVM.udiv (const? 42) e✝¹) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1000:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1035:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.udiv (const? 42) e✝¹) (LLVM.and (LLVM.xor (LLVM.udiv (const? 42) e✝¹) (const? (-1))) e✝) ⊑
    LLVM.or (LLVM.udiv (const? 42) e✝¹) e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1031:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1068:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) :
  LLVM.xor (LLVM.udiv (const? 42) e✝¹)
      (LLVM.and (LLVM.udiv (const? 42) e✝) (LLVM.xor (LLVM.udiv (const? 42) e✝¹) (const? (-1)))) ⊑
    LLVM.or (LLVM.udiv (const? 42) e✝¹) (LLVM.udiv (const? 42) e✝) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1064:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1101:17: theorem extracted_1 (e✝ e✝¹ : IntW 8) :
  LLVM.xor (LLVM.udiv (const? 42) e✝¹) (LLVM.or (LLVM.xor (LLVM.udiv (const? 42) e✝¹) (const? (-1))) e✝) ⊑
    LLVM.xor (LLVM.and (LLVM.udiv (const? 42) e✝¹) e✝) (const? (-1)) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1097:8: declaration uses 'sorry'
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1106:31: Expected `Except.ok`, found Except.error TransformError.unsupportedType
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1118:30: Expected `Except.ok`, found Except.error TransformError.unsupportedType
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1130:33: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1130:33: tactic 'rfl' failed, the left-hand side
  ⟦?m.699501⟧
is not definitionally equal to the right-hand side
  Option ?m.699499
xor_orn_commute2_before xor_orn_commute2_after : Com InstCombine.LLVM ?m.699500 EffectKind.pure ?m.699501
⊢ ⟦?m.699501⟧ = Option ?m.699499
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1131:9: tactic 'unfold' failed, local variable 'xor_orn_commute2_before' has no definition
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1139:31: Expected `Except.ok`, found Except.error TransformError.unsupportedType
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1152:30: Expected `Except.ok`, found Except.error TransformError.unsupportedType
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1165:33: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1165:33: tactic 'rfl' failed, the left-hand side
  ⟦?m.701307⟧
is not definitionally equal to the right-hand side
  Option ?m.701305
xor_orn_commute3_before xor_orn_commute3_after : Com InstCombine.LLVM ?m.701306 EffectKind.pure ?m.701307
⊢ ⟦?m.701307⟧ = Option ?m.701305
error: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1166:9: tactic 'unfold' failed, local variable 'xor_orn_commute3_before' has no definition
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1198:17: theorem extracted_1 (e✝ : IntW 32) :
  LLVM.xor (ashr (const? (-3)) e✝) (lshr (const? 5) e✝) ⊑ ashr (const? (-8)) e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1194:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1227:17: theorem extracted_1 (e✝ : IntW 32) :
  LLVM.xor (lshr (const? 5) e✝) (ashr (const? (-3)) e✝) ⊑ ashr (const? (-8)) e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1223:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1256:17: theorem extracted_1 (e✝ : IntW 32) :
  LLVM.xor (lshr (const? (-3)) e✝) (lshr (const? 5) e✝) ⊑ lshr (const? (-8)) e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1252:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1285:17: theorem extracted_1 (e✝ : IntW 32) :
  LLVM.xor (ashr (const? (-3)) e✝) (ashr (const? (-5)) e✝) ⊑ lshr (const? 6) e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1281:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1317:17: theorem extracted_1 (e✝ e✝¹ e✝² : IntW 4) :
  LLVM.xor (LLVM.and e✝² e✝¹) (LLVM.and (LLVM.xor e✝² (const? (-1))) e✝) ⊑
    LLVM.or (LLVM.and e✝² e✝¹) (LLVM.and e✝ (LLVM.xor e✝² (const? (-1)))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1313:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1349:17: theorem extracted_1 (e✝ e✝¹ e✝² : IntW 4) :
  LLVM.xor (LLVM.and e✝² e✝¹) (LLVM.and (LLVM.xor e✝² (const? (-1))) e✝) ⊑
    LLVM.or (LLVM.and e✝² e✝¹) (LLVM.and e✝ (LLVM.xor e✝² (const? (-1)))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1345:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1373:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) : LLVM.xor (LLVM.or e✝¹ e✝) e✝¹ ⊑ e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1369:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1397:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) : LLVM.xor e✝¹ (LLVM.or e✝¹ e✝) ⊑ e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1393:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1421:17: theorem extracted_1 (e✝ e✝¹ : IntW 32) : LLVM.xor e✝¹ (LLVM.or e✝¹ e✝) ⊑ e✝ := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1417:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1455:17: theorem extracted_1 (e✝ : IntW 32) (e✝¹ : IntW 1) :
  add (LLVM.or (select e✝¹ (const? 0) (const? 4)) (shl e✝ (const? 4))) (const? 4) ⊑
    add (LLVM.or (select e✝¹ (const? 0) (const? 4)) (shl e✝ (const? 4))) (const? 4)
      { «nsw» := true, «nuw» := true } := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gxor.lean:1451:8: declaration uses 'sorry'
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gxor
error: build failed
