⚠ [49/2462] Replayed Mathlib.Logic.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:155:8: `dec_em'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:159:8: `em'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:304:8: `or_congr_left'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:307:8: `or_congr_right'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:320:8: `imp_or'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:359:8: `xor_iff_not_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:418:8: `eqRec_heq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:511:8: `forall_true_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:532:8: `exists_apply_eq_apply'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:539:6: `exists_apply_eq_apply2'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:548:6: `exists_apply_eq_apply3'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:575:8: `forall_apply_eq_imp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:578:8: `forall_eq_apply_imp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:638:8: `forall_prop_congr'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:711:6: `Classical.choose_eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:847:8: `dite_eq_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Basic.lean:851:8: `ite_eq_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [66/2462] Replayed Mathlib.Algebra.NeZero
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:44:6: `zero_ne_one'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:46:6: `one_ne_zero'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:48:6: `two_ne_zero'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:50:6: `three_ne_zero'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/NeZero.lean:52:6: `four_ne_zero'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [69/2462] Replayed Mathlib.Logic.ExistsUnique
warning: ././.lake/packages/mathlib/././Mathlib/Logic/ExistsUnique.lean:109:16: `exists_unique_eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [74/2462] Replayed Mathlib.Logic.Function.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:78:8: `Function.Injective.eq_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:87:8: `Function.Injective.ne_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:117:8: `Function.Injective.of_comp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:163:8: `Function.Surjective.of_comp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:237:8: `Function.Bijective.of_comp_iff'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:541:8: `Function.update_comp_eq_of_forall_ne'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:552:8: `Function.update_comp_eq_of_injective'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:649:8: `Function.extend_apply'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Basic.lean:681:8: `Function.Injective.surjective_comp_right'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [94/2462] Replayed Mathlib.Control.Combinators
warning: ././.lake/packages/mathlib/././Mathlib/Control/Combinators.lean:35:4: `Monad.mapM'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Control/Combinators.lean:57:4: `Monad.sequence'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [96/2462] Replayed Mathlib.Logic.IsEmpty
warning: ././.lake/packages/mathlib/././Mathlib/Logic/IsEmpty.lean:36:9: `Fin.isEmpty'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [229/2462] Replayed Mathlib.Data.Prod.PProd
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/PProd.lean:35:8: `PProd.forall'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/PProd.lean:38:8: `PProd.exists'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [230/2462] Replayed Mathlib.Data.Bool.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Data/Bool/Basic.lean:156:8: `Bool.eq_true_of_not_eq_false'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Bool/Basic.lean:159:8: `Bool.eq_false_of_not_eq_true'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [232/2462] Replayed Mathlib.Logic.Function.Iterate
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Iterate.lean:160:8: `Function.iterate_succ'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Function/Iterate.lean:163:8: `Function.iterate_succ_apply'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [234/2462] Replayed Mathlib.Data.Prod.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:31:8: `Prod.forall'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:34:8: `Prod.exists'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:51:8: `Prod.map_apply'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:54:8: `Prod.map_fst'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Prod/Basic.lean:57:8: `Prod.map_snd'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [235/2462] Replayed Mathlib.Data.Sigma.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Data/Sigma/Basic.lean:90:6: `Sigma.exists'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Sigma/Basic.lean:93:6: `Sigma.forall'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [239/2462] Replayed Mathlib.Data.FunLike.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Data/FunLike/Basic.lean:187:8: `DFunLike.ext'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [244/2462] Replayed Mathlib.Logic.Relation
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:351:8: `Relation.TransGen.head'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:354:8: `Relation.TransGen.tail'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:444:8: `Relation.TransGen.lift'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:453:6: `Relation.TransGen.closed'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Relation.lean:523:8: `Relation.ReflTransGen.lift'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [245/2462] Replayed Mathlib.Logic.Unique
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Unique.lean:131:18: `Unique.subsingleton_unique'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Logic/Unique.lean:259:9: `Unique.subtypeEq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [252/2462] Replayed Mathlib.Data.Quot
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:558:18: `Quotient.liftOn'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:562:14: `Quotient.surjective_liftOn'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:573:18: `Quotient.liftOn₂'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:639:8: `Quotient.hrecOn'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:652:8: `Quotient.hrecOn₂'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:664:8: `Quotient.map'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:674:8: `Quotient.map₂'_mk''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:679:8: `Quotient.exact'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:683:8: `Quotient.sound'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:687:18: `Quotient.eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:692:18: `Quotient.eq''` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:701:8: `Quotient.out_eq'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Data/Quot.lean:704:8: `Quotient.mk_out'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [256/2462] Replayed Mathlib.Tactic.Lift
warning: ././.lake/packages/mathlib/././Mathlib/Tactic/Lift.lean:49:9: `PiSubtype.canLift'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [409/2462] Replayed Mathlib.Algebra.Group.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Defs.lean:735:33: `pow_succ'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Defs.lean:740:6: `pow_mul_comm'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Defs.lean:749:6: `pow_three'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Defs.lean:772:6: `pow_mul'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [443/2462] Replayed Mathlib.Data.List.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Data/List/Defs.lean:241:9: `List.decidableChain'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [474/2462] Replayed Mathlib.Control.Applicative
warning: ././.lake/packages/mathlib/././Mathlib/Control/Applicative.lean:34:8: `Applicative.pure_seq_eq_map'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [475/2462] Replayed Mathlib.Control.Traversable.Basic
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Basic.lean:139:8: `ApplicativeTransformation.preserves_map'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [618/2462] Replayed Mathlib.Algebra.GroupWithZero.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/GroupWithZero/Defs.lean:110:8: `mul_left_inj'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/GroupWithZero/Defs.lean:113:8: `mul_right_inj'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [624/2462] Replayed Mathlib.Algebra.Group.Invertible.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:97:8: `invOf_mul_self'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:103:8: `mul_invOf_self'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:109:8: `invOf_mul_cancel_left'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:120:8: `mul_invOf_cancel_left'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:131:8: `invOf_mul_cancel_right'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:142:8: `mul_invOf_cancel_right'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Algebra/Group/Invertible/Defs.lean:198:8: `invOf_one'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [1184/2462] Replayed Mathlib.Control.Traversable.Lemmas
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Lemmas.lean:87:8: `Traversable.naturality'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Lemmas.lean:102:8: `Traversable.traverse_eq_map_id'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Lemmas.lean:108:8: `Traversable.traverse_map'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
warning: ././.lake/packages/mathlib/././Mathlib/Control/Traversable/Lemmas.lean:113:8: `Traversable.map_traverse'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [2407/2462] Replayed Mathlib.Data.List.EditDistance.Defs
warning: ././.lake/packages/mathlib/././Mathlib/Data/List/EditDistance/Defs.lean:214:8: `suffixLevenshtein_nil'` is missing a doc-string, please add one.
Declarations whose name ends with a `'` are expected to contain an explanation for the presence of a `'` in their doc-string. This may consist of discussion of the difference relative to the unprimed version, or an explanation as to why no better naming scheme is possible.
note: this linter can be disabled with `set_option linter.docPrime false`
⚠ [2447/2462] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2451/2462] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2452/2462] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:24:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:27:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:34:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:41:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:52:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:56:8: declaration uses 'sorry'
⚠ [2457/2462] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:55:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:128:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:163:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:197:6: declaration uses 'sorry'
⚠ [2458/2462] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
✖ [2462/2462] Building SSA.Projects.InstCombine.tests.LLVM.gselecthfactorize
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/MD4Lean/.lake/build/lib:././.lake/packages/UnicodeBasic/.lake/build/lib:././.lake/packages/BibtexQuery/.lake/build/lib:././.lake/packages/doc-gen4/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/lfrenot/.elan/toolchains/leanprover--lean4---nightly-2024-10-17/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.c --json
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:19:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:20:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:30:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:31:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:37:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:37:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.2873⟧
is not definitionally equal to the right-hand side
  Option ?m.2871
logic_and_logic_or_1_before logic_and_logic_or_1_after : Com InstCombine.LLVM ?m.2872 EffectKind.pure ?m.2873
⊢ ⟦?m.2873⟧ = Option ?m.2871
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:55:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:56:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:66:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:67:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:73:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:73:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.5803⟧
is not definitionally equal to the right-hand side
  Option ?m.5801
logic_and_logic_or_2_before logic_and_logic_or_2_after : Com InstCombine.LLVM ?m.5802 EffectKind.pure ?m.5803
⊢ ⟦?m.5803⟧ = Option ?m.5801
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:91:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:92:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:102:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:103:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:109:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:109:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.8721⟧
is not definitionally equal to the right-hand side
  Option ?m.8719
logic_and_logic_or_3_before logic_and_logic_or_3_after : Com InstCombine.LLVM ?m.8720 EffectKind.pure ?m.8721
⊢ ⟦?m.8721⟧ = Option ?m.8719
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:127:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:128:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:138:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:139:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:145:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:145:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.11603⟧
is not definitionally equal to the right-hand side
  Option ?m.11601
logic_and_logic_or_4_before logic_and_logic_or_4_after : Com InstCombine.LLVM ?m.11602 EffectKind.pure ?m.11603
⊢ ⟦?m.11603⟧ = Option ?m.11601
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:163:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:164:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:174:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:175:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:181:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:181:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.14521⟧
is not definitionally equal to the right-hand side
  Option ?m.14519
logic_and_logic_or_5_before logic_and_logic_or_5_after : Com InstCombine.LLVM ?m.14520 EffectKind.pure ?m.14521
⊢ ⟦?m.14521⟧ = Option ?m.14519
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:199:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:200:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:210:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:211:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:217:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:217:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.17451⟧
is not definitionally equal to the right-hand side
  Option ?m.17449
logic_and_logic_or_6_before logic_and_logic_or_6_after : Com InstCombine.LLVM ?m.17450 EffectKind.pure ?m.17451
⊢ ⟦?m.17451⟧ = Option ?m.17449
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:235:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:236:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:246:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:247:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:253:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:253:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.20321⟧
is not definitionally equal to the right-hand side
  Option ?m.20319
logic_and_logic_or_7_before logic_and_logic_or_7_after : Com InstCombine.LLVM ?m.20320 EffectKind.pure ?m.20321
⊢ ⟦?m.20321⟧ = Option ?m.20319
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:271:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:272:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:282:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:283:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:289:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:289:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.23251⟧
is not definitionally equal to the right-hand side
  Option ?m.23249
logic_and_logic_or_8_before logic_and_logic_or_8_after : Com InstCombine.LLVM ?m.23250 EffectKind.pure ?m.23251
⊢ ⟦?m.23251⟧ = Option ?m.23249
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:307:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:308:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:318:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:319:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:325:41: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:325:41: tactic 'rfl' failed, the left-hand side
  ⟦?m.26116⟧
is not definitionally equal to the right-hand side
  Option ?m.26114
and_logic_and_logic_or_1_before and_logic_and_logic_or_1_after : Com InstCombine.LLVM ?m.26115 EffectKind.pure ?m.26116
⊢ ⟦?m.26116⟧ = Option ?m.26114
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:343:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:344:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:354:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:355:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:361:41: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:361:41: tactic 'rfl' failed, the left-hand side
  ⟦?m.29029⟧
is not definitionally equal to the right-hand side
  Option ?m.29027
and_logic_and_logic_or_2_before and_logic_and_logic_or_2_after : Com InstCombine.LLVM ?m.29028 EffectKind.pure ?m.29029
⊢ ⟦?m.29029⟧ = Option ?m.29027
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:379:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:380:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:390:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:391:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:397:41: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:397:41: tactic 'rfl' failed, the left-hand side
  ⟦?m.31930⟧
is not definitionally equal to the right-hand side
  Option ?m.31928
and_logic_and_logic_or_3_before and_logic_and_logic_or_3_after : Com InstCombine.LLVM ?m.31929 EffectKind.pure ?m.31930
⊢ ⟦?m.31930⟧ = Option ?m.31928
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:415:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:416:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:426:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:427:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:433:41: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:433:41: tactic 'rfl' failed, the left-hand side
  ⟦?m.34783⟧
is not definitionally equal to the right-hand side
  Option ?m.34781
and_logic_and_logic_or_4_before and_logic_and_logic_or_4_after : Com InstCombine.LLVM ?m.34782 EffectKind.pure ?m.34783
⊢ ⟦?m.34783⟧ = Option ?m.34781
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:451:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:452:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:462:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:463:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:469:41: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:469:41: tactic 'rfl' failed, the left-hand side
  ⟦?m.37696⟧
is not definitionally equal to the right-hand side
  Option ?m.37694
and_logic_and_logic_or_5_before and_logic_and_logic_or_5_after : Com InstCombine.LLVM ?m.37695 EffectKind.pure ?m.37696
⊢ ⟦?m.37696⟧ = Option ?m.37694
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:487:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:488:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:498:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:504:41: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:504:41: tactic 'rfl' failed, the left-hand side
  ⟦?m.40560⟧
is not definitionally equal to the right-hand side
  Option ?m.40558
and_logic_and_logic_or_6_before and_logic_and_logic_or_6_after : Com InstCombine.LLVM ?m.40559 EffectKind.pure ?m.40560
⊢ ⟦?m.40560⟧ = Option ?m.40558
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:522:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:523:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:533:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:534:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:540:41: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:540:41: tactic 'rfl' failed, the left-hand side
  ⟦?m.43449⟧
is not definitionally equal to the right-hand side
  Option ?m.43447
and_logic_and_logic_or_7_before and_logic_and_logic_or_7_after : Com InstCombine.LLVM ?m.43448 EffectKind.pure ?m.43449
⊢ ⟦?m.43449⟧ = Option ?m.43447
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:558:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:559:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:569:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:575:41: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:575:41: tactic 'rfl' failed, the left-hand side
  ⟦?m.46285⟧
is not definitionally equal to the right-hand side
  Option ?m.46283
and_logic_and_logic_or_8_before and_logic_and_logic_or_8_after : Com InstCombine.LLVM ?m.46284 EffectKind.pure ?m.46285
⊢ ⟦?m.46285⟧ = Option ?m.46283
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:593:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:603:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:609:35: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:609:35: tactic 'rfl' failed, the left-hand side
  ⟦?m.49100⟧
is not definitionally equal to the right-hand side
  Option ?m.49098
and_and_logic_or_1_before and_and_logic_or_1_after : Com InstCombine.LLVM ?m.49099 EffectKind.pure ?m.49100
⊢ ⟦?m.49100⟧ = Option ?m.49098
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:627:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:637:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:643:35: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:643:35: tactic 'rfl' failed, the left-hand side
  ⟦?m.51811⟧
is not definitionally equal to the right-hand side
  Option ?m.51809
and_and_logic_or_2_before and_and_logic_or_2_after : Com InstCombine.LLVM ?m.51810 EffectKind.pure ?m.51811
⊢ ⟦?m.51811⟧ = Option ?m.51809
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:661:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:662:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:672:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:673:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:679:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:679:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.54653⟧
is not definitionally equal to the right-hand side
  Option ?m.54651
logic_or_logic_and_1_before logic_or_logic_and_1_after : Com InstCombine.LLVM ?m.54652 EffectKind.pure ?m.54653
⊢ ⟦?m.54653⟧ = Option ?m.54651
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:697:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:698:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:708:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:709:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:715:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:715:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.57507⟧
is not definitionally equal to the right-hand side
  Option ?m.57505
logic_or_logic_and_2_before logic_or_logic_and_2_after : Com InstCombine.LLVM ?m.57506 EffectKind.pure ?m.57507
⊢ ⟦?m.57507⟧ = Option ?m.57505
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:733:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:734:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:744:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:745:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:751:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:751:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.60361⟧
is not definitionally equal to the right-hand side
  Option ?m.60359
logic_or_logic_and_3_before logic_or_logic_and_3_after : Com InstCombine.LLVM ?m.60360 EffectKind.pure ?m.60361
⊢ ⟦?m.60361⟧ = Option ?m.60359
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:769:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:770:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:780:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:781:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:787:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:787:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.63155⟧
is not definitionally equal to the right-hand side
  Option ?m.63153
logic_or_logic_and_4_before logic_or_logic_and_4_after : Com InstCombine.LLVM ?m.63154 EffectKind.pure ?m.63155
⊢ ⟦?m.63155⟧ = Option ?m.63153
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:805:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:806:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:816:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:817:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:823:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:823:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.65997⟧
is not definitionally equal to the right-hand side
  Option ?m.65995
logic_or_logic_and_5_before logic_or_logic_and_5_after : Com InstCombine.LLVM ?m.65996 EffectKind.pure ?m.65997
⊢ ⟦?m.65997⟧ = Option ?m.65995
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:841:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:842:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:852:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:853:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:859:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:859:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.68851⟧
is not definitionally equal to the right-hand side
  Option ?m.68849
logic_or_logic_and_6_before logic_or_logic_and_6_after : Com InstCombine.LLVM ?m.68850 EffectKind.pure ?m.68851
⊢ ⟦?m.68851⟧ = Option ?m.68849
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:877:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:878:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:888:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:889:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:895:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:895:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.71657⟧
is not definitionally equal to the right-hand side
  Option ?m.71655
logic_or_logic_and_7_before logic_or_logic_and_7_after : Com InstCombine.LLVM ?m.71656 EffectKind.pure ?m.71657
⊢ ⟦?m.71657⟧ = Option ?m.71655
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:913:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:914:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:924:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:925:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:931:37: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:931:37: tactic 'rfl' failed, the left-hand side
  ⟦?m.74499⟧
is not definitionally equal to the right-hand side
  Option ?m.74497
logic_or_logic_and_8_before logic_or_logic_and_8_after : Com InstCombine.LLVM ?m.74498 EffectKind.pure ?m.74499
⊢ ⟦?m.74499⟧ = Option ?m.74497
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:949:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:950:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:960:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:961:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:967:40: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:967:40: tactic 'rfl' failed, the left-hand side
  ⟦?m.77288⟧
is not definitionally equal to the right-hand side
  Option ?m.77286
or_logic_or_logic_and_1_before or_logic_or_logic_and_1_after : Com InstCombine.LLVM ?m.77287 EffectKind.pure ?m.77288
⊢ ⟦?m.77288⟧ = Option ?m.77286
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:985:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:986:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:996:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:997:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1003:40: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1003:40: tactic 'rfl' failed, the left-hand side
  ⟦?m.80125⟧
is not definitionally equal to the right-hand side
  Option ?m.80123
or_logic_or_logic_and_2_before or_logic_or_logic_and_2_after : Com InstCombine.LLVM ?m.80124 EffectKind.pure ?m.80125
⊢ ⟦?m.80125⟧ = Option ?m.80123
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1021:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1022:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1032:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1033:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1039:40: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1039:40: tactic 'rfl' failed, the left-hand side
  ⟦?m.82950⟧
is not definitionally equal to the right-hand side
  Option ?m.82948
or_logic_or_logic_and_3_before or_logic_or_logic_and_3_after : Com InstCombine.LLVM ?m.82949 EffectKind.pure ?m.82950
⊢ ⟦?m.82950⟧ = Option ?m.82948
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1057:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1058:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1068:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1074:40: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1074:40: tactic 'rfl' failed, the left-hand side
  ⟦?m.85690⟧
is not definitionally equal to the right-hand side
  Option ?m.85688
or_logic_or_logic_and_4_before or_logic_or_logic_and_4_after : Com InstCombine.LLVM ?m.85689 EffectKind.pure ?m.85690
⊢ ⟦?m.85690⟧ = Option ?m.85688
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1092:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1093:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1103:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1104:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1110:40: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1110:40: tactic 'rfl' failed, the left-hand side
  ⟦?m.88527⟧
is not definitionally equal to the right-hand side
  Option ?m.88525
or_logic_or_logic_and_5_before or_logic_or_logic_and_5_after : Com InstCombine.LLVM ?m.88526 EffectKind.pure ?m.88527
⊢ ⟦?m.88527⟧ = Option ?m.88525
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1128:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1129:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1139:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1140:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1146:40: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1146:40: tactic 'rfl' failed, the left-hand side
  ⟦?m.91352⟧
is not definitionally equal to the right-hand side
  Option ?m.91350
or_logic_or_logic_and_6_before or_logic_or_logic_and_6_after : Com InstCombine.LLVM ?m.91351 EffectKind.pure ?m.91352
⊢ ⟦?m.91352⟧ = Option ?m.91350
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1164:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1165:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1175:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1176:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1182:40: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1182:40: tactic 'rfl' failed, the left-hand side
  ⟦?m.94189⟧
is not definitionally equal to the right-hand side
  Option ?m.94187
or_logic_or_logic_and_7_before or_logic_or_logic_and_7_after : Com InstCombine.LLVM ?m.94188 EffectKind.pure ?m.94189
⊢ ⟦?m.94189⟧ = Option ?m.94187
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1200:40: expected i<int> or f<int>, found: true
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1201:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1211:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1217:40: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1217:40: tactic 'rfl' failed, the left-hand side
  ⟦?m.96977⟧
is not definitionally equal to the right-hand side
  Option ?m.96975
or_logic_or_logic_and_8_before or_logic_or_logic_and_8_after : Com InstCombine.LLVM ?m.96976 EffectKind.pure ?m.96977
⊢ ⟦?m.96977⟧ = Option ?m.96975
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1235:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1245:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1251:34: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1251:34: tactic 'rfl' failed, the left-hand side
  ⟦?m.99716⟧
is not definitionally equal to the right-hand side
  Option ?m.99714
or_or_logic_and_1_before or_or_logic_and_1_after : Com InstCombine.LLVM ?m.99715 EffectKind.pure ?m.99716
⊢ ⟦?m.99716⟧ = Option ?m.99714
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1269:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1279:40: cannot convert suffix of i/f to int: false
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1285:34: could not synthesize default value for parameter 'h' using tactics
error: ././././SSA/Projects/InstCombine/tests/LLVM/gselecthfactorize.lean:1285:34: tactic 'rfl' failed, the left-hand side
  ⟦?m.102395⟧
is not definitionally equal to the right-hand side
  Option ?m.102393
or_or_logic_and_2_before or_or_logic_and_2_after : Com InstCombine.LLVM ?m.102394 EffectKind.pure ?m.102395
⊢ ⟦?m.102395⟧ = Option ?m.102393
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gselecthfactorize
error: build failed
