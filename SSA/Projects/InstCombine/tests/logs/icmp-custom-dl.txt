1: "test58_d"
5: "test58_d" is empty

1: "test59"
9: "test59" has pointer type input

4: "test59" has unsupported operation: llvm.getelementptr

4: "test59" has unsupported operation: builtin.unregistered: llvm.ptrtoint

4: "test59" has unsupported operation: llvm.call

1: "test59_as1"
9: "test59_as1" has pointer type input

4: "test59_as1" has unsupported operation: llvm.getelementptr

4: "test59_as1" has unsupported operation: builtin.unregistered: llvm.ptrtoint

4: "test59_as1" has unsupported operation: llvm.call

1: "test60"
9: "test60" has pointer type input

1: "test60_as1"
9: "test60_as1" has pointer type input

1: "test60_addrspacecast"
9: "test60_addrspacecast" has pointer type input

1: "test60_addrspacecast_smaller"
9: "test60_addrspacecast_smaller" has pointer type input

1: "test60_addrspacecast_larger"
9: "test60_addrspacecast_larger" has pointer type input

1: "test61"
9: "test61" has pointer type input

4: "test61" has unsupported operation: llvm.getelementptr

4: "test61" has unsupported operation: llvm.getelementptr

1: "test61_as1"
9: "test61_as1" has pointer type input

4: "test61_as1" has unsupported operation: llvm.getelementptr

4: "test61_as1" has unsupported operation: llvm.getelementptr

1: "test62"
9: "test62" has pointer type input

4: "test62" has unsupported operation: llvm.getelementptr

4: "test62" has unsupported operation: llvm.getelementptr

1: "test62_as1"
9: "test62_as1" has pointer type input

4: "test62_as1" has unsupported operation: llvm.getelementptr

4: "test62_as1" has unsupported operation: llvm.getelementptr

1: "icmp_and_ashr_multiuse"
2: llvm.func
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.ashr
2: llvm.and
2: llvm.and
2: llvm.icmp
2: llvm.icmp
2: llvm.and
2: llvm.return

1: "icmp_and_ashr_multiuse_logical"
2: llvm.func
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.ashr
2: llvm.and
2: llvm.and
2: llvm.icmp
2: llvm.icmp
2: builtin.unregistered: llvm.select
2: llvm.return

1: "icmp_lshr_and_overshift"
2: llvm.func
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.mlir.constant
2: llvm.lshr
2: llvm.and
2: llvm.icmp
2: llvm.return

1: "icmp_ashr_and_overshift"
7: "icmp_ashr_and_overshift" is unchanged by InstCombine

1: "test71"
9: "test71" has pointer type input

1: "test71_as1"
9: "test71_as1" has pointer type input

