error: build failed
⚠ [2443/2457] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2447/2457] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2451/2457] Replayed SSA.Experimental.Bits.AutoStructs.Basic
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:99:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:102:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:104:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:106:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:109:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:111:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:113:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:116:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:127:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:164:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:335:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:408:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:443:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:477:6: declaration uses 'sorry'
⚠ [2453/2457] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:24:38: structure ... :=' has been deprecated in favor of 'structure ... where'.
note: this linter can be disabled with `set_option linter.deprecated false`
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:511:59: structure ... :=' has been deprecated in favor of 'structure ... where'.
note: this linter can be disabled with `set_option linter.deprecated false`
✖ [2457/2457] Building SSA.Projects.InstCombine.tests.LLVM.gdemorgan
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/MD4Lean/.lake/build/lib:././.lake/packages/UnicodeBasic/.lake/build/lib:././.lake/packages/BibtexQuery/.lake/build/lib:././.lake/packages/doc-gen4/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/lfrenot/.elan/toolchains/leanprover--lean4---nightly-2024-10-15/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gdemorgan.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gdemorgan.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gdemorgan.c --json
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:45:17: theorem extracted_1 (x x_1 : BitVec 43) :
  x_1 ^^^ 8796093022207#43 ||| x ^^^ 8796093022207#43 = x_1 &&& x ^^^ 8796093022207#43 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:35:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:79:17: theorem extracted_1 (x x_1 : BitVec 129) :
  x_1 ^^^ 680564733841876926926749214863536422911#129 ||| x ^^^ 680564733841876926926749214863536422911#129 =
    x_1 &&& x ^^^ 680564733841876926926749214863536422911#129 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:69:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:113:17: theorem extracted_1 (x x_1 : BitVec 477) :
  (x_1 ^^^
        390218568789499028922699653724145788218574767833121393857394619953171467352470702515038262882936496394978366390175827861930996959911035663286271#477) &&&
      (x ^^^
        390218568789499028922699653724145788218574767833121393857394619953171467352470702515038262882936496394978366390175827861930996959911035663286271#477) =
    (x_1 ||| x) ^^^
      390218568789499028922699653724145788218574767833121393857394619953171467352470702515038262882936496394978366390175827861930996959911035663286271#477 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:103:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:147:17: theorem extracted_1 (x x_1 : BitVec 129) :
  (x_1 ^^^ 680564733841876926926749214863536422911#129) &&& (x ^^^ 680564733841876926926749214863536422911#129) =
    (x_1 ||| x) ^^^ 680564733841876926926749214863536422911#129 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:137:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:181:17: theorem extracted_1 (x x_1 : BitVec 65) :
  (x_1 ^^^ 36893488147419103231#65) &&& (36893488147419103231#65 ^^^ x) =
    (x_1 ||| x) ^^^ 36893488147419103231#65 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:171:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:215:17: theorem extracted_1 (x x_1 : BitVec 66) :
  (x_1 ^^^ 73786976294838206463#66) &&& (x ^^^ 73786976294838206463#66) =
    (x_1 ||| x) ^^^ 73786976294838206463#66 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:205:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:249:17: theorem extracted_1 (x x_1 : BitVec 47) :
  (x_1 ^^^ 140737488355327#47) &&& (x ^^^ 140737488355327#47) = (x_1 ||| x) ^^^ 140737488355327#47 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:239:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:282:17: theorem extracted_1 (x x_1 : BitVec 32) :
  (x_1 ^^^ 4294967295#32) &&& (x ^^^ 4294967295#32) ^^^ 4294967295#32 = x_1 ||| x := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:272:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:316:17: theorem extracted_1 (x : BitVec 32) : (x ^^^ 4294967295#32) &&& 5#32 ^^^ 4294967295#32 = x ||| 4294967290#32 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:306:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:349:17: theorem extracted_1 (x x_1 : BitVec 32) :
  (x_1 ^^^ 4294967295#32 ||| x ^^^ 4294967295#32) ^^^ 4294967295#32 = x_1 &&& x := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:339:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:382:17: theorem extracted_1 (x x_1 : BitVec 47) :
  (x_1 ^^^ 140737488355327#47) &&& (x ^^^ 140737488355327#47) ^^^ 140737488355327#47 = x_1 ||| x := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:372:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:417:17: theorem extracted_1 (x : BitVec 61) : (x ^^^ 2305843009213693951#61) &&& 5#61 = x &&& 5#61 ^^^ 5#61 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:407:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:450:17: theorem extracted_1 (x x_1 : BitVec 71) :
  (x_1 ^^^ 2361183241434822606847#71 ||| x ^^^ 2361183241434822606847#71) ^^^ 2361183241434822606847#71 =
    x_1 &&& x := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:440:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:484:17: theorem extracted_1 (x x_1 : BitVec 8) : (x_1 ^^^ 255#8) &&& x ^^^ 255#8 = x_1 ||| x ^^^ 255#8 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:474:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:518:17: theorem extracted_1 (x x_1 : BitVec 7) : (x_1 ^^^ 127#7) &&& x ^^^ 127#7 = x_1 ||| x ^^^ 127#7 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:508:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:552:17: theorem extracted_1 (x x_1 : BitVec 117) :
  (x_1 ^^^ 166153499473114484112975882535043071#117) &&& x ^^^ 166153499473114484112975882535043071#117 =
    x_1 ||| x ^^^ 166153499473114484112975882535043071#117 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:542:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:586:17: theorem extracted_1 (x x_1 : BitVec 8) : (x_1 ^^^ 255#8 ||| x) ^^^ 255#8 = x_1 &&& (x ^^^ 255#8) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:576:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:627:17: theorem extracted_1 (x x_1 : BitVec 8) :
  (if (x_1 ^^^ 255#8) * 23#8 = 0#8 ∨ (x_1 ^^^ 255#8 ||| x) ^^^ 255#8 = intMin 8 ∧ (x_1 ^^^ 255#8) * 23#8 = 255#8 then
      none
    else some (((x_1 ^^^ 255#8 ||| x) ^^^ 255#8).sdiv ((x_1 ^^^ 255#8) * 23#8))) ⊑
    if (x_1 ^^^ 255#8) * 23#8 = 0#8 ∨ x_1 &&& (x ^^^ 255#8) = intMin 8 ∧ (x_1 ^^^ 255#8) * 23#8 = 255#8 then none
    else some ((x_1 &&& (x ^^^ 255#8)).sdiv ((x_1 ^^^ 255#8) * 23#8)) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:617:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:667:17: theorem extracted_1 (x x_1 : BitVec 8) :
  (if x * 23#8 = 0#8 ∨ (x_1 ^^^ 255#8 ||| x) ^^^ 255#8 = intMin 8 ∧ x * 23#8 = 255#8 then none
    else some (((x_1 ^^^ 255#8 ||| x) ^^^ 255#8).sdiv (x * 23#8))) ⊑
    if x * 23#8 = 0#8 ∨ x_1 &&& (x ^^^ 255#8) = intMin 8 ∧ x * 23#8 = 255#8 then none
    else some ((x_1 &&& (x ^^^ 255#8)).sdiv (x * 23#8)) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:657:8: declaration uses 'sorry'
error: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:698:91: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:745:94: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:792:94: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:837:94: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:881:17: theorem extracted_1 (x : BitVec 32) : (x ||| 15#32) ^^^ 4294967295#32 = x &&& 4294967280#32 ^^^ 4294967280#32 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:871:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:915:17: theorem extracted_1 (x x_1 : BitVec 32) :
  (x_1 &&& x ||| (x_1 ||| x) ^^^ 4294967295#32) ^^^ 4294967295#32 = x_1 ^^^ x := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:905:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:950:17: theorem extracted_1 (x x_1 : BitVec 32) :
  x_1 ^^^ x ||| (x_1 ||| x) ^^^ 4294967295#32 = x_1 &&& x ^^^ 4294967295#32 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gdemorgan.lean:940:8: declaration uses 'sorry'
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gdemorgan
error: build failed
