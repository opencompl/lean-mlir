⚠ [2488/2503] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2492/2503] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2493/2503] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:24:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:27:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:34:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:41:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:52:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:56:8: declaration uses 'sorry'
⚠ [2498/2503] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:55:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:128:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:163:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:197:6: declaration uses 'sorry'
⚠ [2499/2503] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
✖ [2503/2503] Building SSA.Projects.InstCombine.tests.LLVM.gapinthadd
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/tcg40/.elan/toolchains/leanprover--lean4---nightly-2024-10-28/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.c --json
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:35:17: theorem extracted_1 : ∀ (e : IntW 1), add (LLVM.xor e (const? 1)) (const? 1) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:31:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:59:17: theorem extracted_1 :
  ∀ (e : IntW 47), add (LLVM.xor e (const? (-70368744177664))) (const? (-70368744177664)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:55:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:83:17: theorem extracted_1 : ∀ (e : IntW 15), add (LLVM.xor e (const? (-16384))) (const? (-16384)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:79:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:110:17: theorem extracted_1 : ∀ (e : IntW 49), add (LLVM.and e (const? (-2))) (const? 1) ⊑ LLVM.or e (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:106:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:137:17: theorem extracted_1 :
  ∀ (e : IntW 4),
    add (zext 7 (LLVM.xor e (const? (-8)))) (const? (-8)) { «nsw» := true, «nuw» := false } ⊑ sext 7 e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:133:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:173:17: theorem extracted_1 :
  ∀ (e : IntW 4),
    LLVM.sdiv
        (trunc 4
          (LLVM.sdiv (zext 7 (LLVM.xor e (const? (-8))))
            (add (zext 7 (LLVM.xor e (const? (-8)))) (const? (-8)) { «nsw» := true, «nuw» := false })))
        (LLVM.xor e (const? (-8))) ⊑
      LLVM.sdiv (trunc 4 (LLVM.sdiv (zext 7 (LLVM.xor e (const? (-8)))) (sext 7 e))) (LLVM.xor e (const? (-8))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:169:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:199:17: theorem extracted_1 :
  ∀ (e : IntW 111), add (LLVM.xor e (shl (const? 1) (const? 110))) (shl (const? 1) (const? 110)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:195:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:225:17: theorem extracted_1 :
  ∀ (e : IntW 65), add (LLVM.xor e (shl (const? 1) (const? 64))) (shl (const? 1) (const? 64)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:221:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:251:17: theorem extracted_1 :
  ∀ (e : IntW 1024), add (LLVM.xor e (shl (const? 1) (const? 1023))) (shl (const? 1) (const? 1023)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:247:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:281:17: theorem extracted_1 :
  ∀ (e : IntW 128),
    add (LLVM.xor e (ashr (shl (const? 1) (const? 127)) (const? 120))) (shl (const? 1) (const? 127)) ⊑
      LLVM.xor e (const? 170141183460469231731687303715884105600) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:277:8: declaration uses 'sorry'
error: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:277:8: (kernel) deep recursion detected
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:310:17: theorem extracted_1 :
  ∀ (e : IntW 77),
    add (LLVM.and e (const? 562949953421310)) (const? 1) ⊑
      LLVM.or (LLVM.and e (const? 562949953421310)) (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:306:8: declaration uses 'sorry'
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gapinthadd
error: build failed
⚠ [2488/2503] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2492/2503] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2493/2503] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:24:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:27:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:34:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:41:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:52:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:56:8: declaration uses 'sorry'
⚠ [2498/2503] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:55:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:128:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:163:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:197:6: declaration uses 'sorry'
⚠ [2499/2503] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
✖ [2503/2503] Building SSA.Projects.InstCombine.tests.LLVM.gapinthadd
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/tcg40/.elan/toolchains/leanprover--lean4---nightly-2024-10-28/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.c --json
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:35:17: theorem extracted_1 : ∀ (e : IntW 1), add (LLVM.xor e (const? 1)) (const? 1) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:31:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:59:17: theorem extracted_1 :
  ∀ (e : IntW 47), add (LLVM.xor e (const? (-70368744177664))) (const? (-70368744177664)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:55:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:83:17: theorem extracted_1 : ∀ (e : IntW 15), add (LLVM.xor e (const? (-16384))) (const? (-16384)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:79:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:110:17: theorem extracted_1 : ∀ (e : IntW 49), add (LLVM.and e (const? (-2))) (const? 1) ⊑ LLVM.or e (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:106:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:137:17: theorem extracted_1 :
  ∀ (e : IntW 4),
    add (zext 7 (LLVM.xor e (const? (-8)))) (const? (-8)) { «nsw» := true, «nuw» := false } ⊑ sext 7 e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:133:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:173:17: theorem extracted_1 :
  ∀ (e : IntW 4),
    LLVM.sdiv
        (trunc 4
          (LLVM.sdiv (zext 7 (LLVM.xor e (const? (-8))))
            (add (zext 7 (LLVM.xor e (const? (-8)))) (const? (-8)) { «nsw» := true, «nuw» := false })))
        (LLVM.xor e (const? (-8))) ⊑
      LLVM.sdiv (trunc 4 (LLVM.sdiv (zext 7 (LLVM.xor e (const? (-8)))) (sext 7 e))) (LLVM.xor e (const? (-8))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:169:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:199:17: theorem extracted_1 :
  ∀ (e : IntW 111), add (LLVM.xor e (shl (const? 1) (const? 110))) (shl (const? 1) (const? 110)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:195:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:225:17: theorem extracted_1 :
  ∀ (e : IntW 65), add (LLVM.xor e (shl (const? 1) (const? 64))) (shl (const? 1) (const? 64)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:221:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:251:17: theorem extracted_1 :
  ∀ (e : IntW 1024), add (LLVM.xor e (shl (const? 1) (const? 1023))) (shl (const? 1) (const? 1023)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:247:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:281:17: theorem extracted_1 :
  ∀ (e : IntW 128),
    add (LLVM.xor e (ashr (shl (const? 1) (const? 127)) (const? 120))) (shl (const? 1) (const? 127)) ⊑
      LLVM.xor e (const? 170141183460469231731687303715884105600) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:277:8: declaration uses 'sorry'
error: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:277:8: (kernel) deep recursion detected
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:310:17: theorem extracted_1 :
  ∀ (e : IntW 77),
    add (LLVM.and e (const? 562949953421310)) (const? 1) ⊑
      LLVM.or (LLVM.and e (const? 562949953421310)) (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:306:8: declaration uses 'sorry'
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gapinthadd
error: build failed
⚠ [2488/2503] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2492/2503] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2493/2503] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:24:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:27:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:34:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:41:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:52:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:56:8: declaration uses 'sorry'
⚠ [2498/2503] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:55:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:128:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:163:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:197:6: declaration uses 'sorry'
⚠ [2499/2503] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
✖ [2503/2503] Building SSA.Projects.InstCombine.tests.LLVM.gapinthadd
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/tcg40/.elan/toolchains/leanprover--lean4---nightly-2024-10-28/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.c --json
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:35:17: theorem extracted_1 : ∀ (e : IntW 1), add (LLVM.xor e (const? 1)) (const? 1) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:31:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:59:17: theorem extracted_1 :
  ∀ (e : IntW 47), add (LLVM.xor e (const? (-70368744177664))) (const? (-70368744177664)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:55:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:83:17: theorem extracted_1 : ∀ (e : IntW 15), add (LLVM.xor e (const? (-16384))) (const? (-16384)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:79:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:110:17: theorem extracted_1 : ∀ (e : IntW 49), add (LLVM.and e (const? (-2))) (const? 1) ⊑ LLVM.or e (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:106:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:137:17: theorem extracted_1 :
  ∀ (e : IntW 4),
    add (zext 7 (LLVM.xor e (const? (-8)))) (const? (-8)) { «nsw» := true, «nuw» := false } ⊑ sext 7 e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:133:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:173:17: theorem extracted_1 :
  ∀ (e : IntW 4),
    LLVM.sdiv
        (trunc 4
          (LLVM.sdiv (zext 7 (LLVM.xor e (const? (-8))))
            (add (zext 7 (LLVM.xor e (const? (-8)))) (const? (-8)) { «nsw» := true, «nuw» := false })))
        (LLVM.xor e (const? (-8))) ⊑
      LLVM.sdiv (trunc 4 (LLVM.sdiv (zext 7 (LLVM.xor e (const? (-8)))) (sext 7 e))) (LLVM.xor e (const? (-8))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:169:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:199:17: theorem extracted_1 :
  ∀ (e : IntW 111), add (LLVM.xor e (shl (const? 1) (const? 110))) (shl (const? 1) (const? 110)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:195:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:225:17: theorem extracted_1 :
  ∀ (e : IntW 65), add (LLVM.xor e (shl (const? 1) (const? 64))) (shl (const? 1) (const? 64)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:221:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:251:17: theorem extracted_1 :
  ∀ (e : IntW 1024), add (LLVM.xor e (shl (const? 1) (const? 1023))) (shl (const? 1) (const? 1023)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:247:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:281:17: theorem extracted_1 :
  ∀ (e : IntW 128),
    add (LLVM.xor e (ashr (shl (const? 1) (const? 127)) (const? 120))) (shl (const? 1) (const? 127)) ⊑
      LLVM.xor e (const? 170141183460469231731687303715884105600) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:277:8: declaration uses 'sorry'
error: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:277:8: (kernel) deep recursion detected
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:310:17: theorem extracted_1 :
  ∀ (e : IntW 77),
    add (LLVM.and e (const? 562949953421310)) (const? 1) ⊑
      LLVM.or (LLVM.and e (const? 562949953421310)) (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:306:8: declaration uses 'sorry'
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gapinthadd
error: build failed
⚠ [2488/2503] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2492/2503] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2493/2503] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:24:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:27:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:34:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:41:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:52:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:56:8: declaration uses 'sorry'
⚠ [2498/2503] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:55:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:128:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:163:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:197:6: declaration uses 'sorry'
⚠ [2499/2503] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
✖ [2503/2503] Building SSA.Projects.InstCombine.tests.LLVM.gapinthadd
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/tcg40/.elan/toolchains/leanprover--lean4---nightly-2024-10-28/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gapinthadd.c --json
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:35:17: theorem extracted_1 : ∀ (e : IntW 1), add (LLVM.xor e (const? 1)) (const? 1) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:31:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:59:17: theorem extracted_1 :
  ∀ (e : IntW 47), add (LLVM.xor e (const? (-70368744177664))) (const? (-70368744177664)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:55:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:83:17: theorem extracted_1 : ∀ (e : IntW 15), add (LLVM.xor e (const? (-16384))) (const? (-16384)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:79:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:110:17: theorem extracted_1 : ∀ (e : IntW 49), add (LLVM.and e (const? (-2))) (const? 1) ⊑ LLVM.or e (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:106:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:137:17: theorem extracted_1 :
  ∀ (e : IntW 4),
    add (zext 7 (LLVM.xor e (const? (-8)))) (const? (-8)) { «nsw» := true, «nuw» := false } ⊑ sext 7 e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:133:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:173:17: theorem extracted_1 :
  ∀ (e : IntW 4),
    LLVM.sdiv
        (trunc 4
          (LLVM.sdiv (zext 7 (LLVM.xor e (const? (-8))))
            (add (zext 7 (LLVM.xor e (const? (-8)))) (const? (-8)) { «nsw» := true, «nuw» := false })))
        (LLVM.xor e (const? (-8))) ⊑
      LLVM.sdiv (trunc 4 (LLVM.sdiv (zext 7 (LLVM.xor e (const? (-8)))) (sext 7 e))) (LLVM.xor e (const? (-8))) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:169:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:199:17: theorem extracted_1 :
  ∀ (e : IntW 111), add (LLVM.xor e (shl (const? 1) (const? 110))) (shl (const? 1) (const? 110)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:195:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:225:17: theorem extracted_1 :
  ∀ (e : IntW 65), add (LLVM.xor e (shl (const? 1) (const? 64))) (shl (const? 1) (const? 64)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:221:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:251:17: theorem extracted_1 :
  ∀ (e : IntW 1024), add (LLVM.xor e (shl (const? 1) (const? 1023))) (shl (const? 1) (const? 1023)) ⊑ e := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:247:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:281:17: theorem extracted_1 :
  ∀ (e : IntW 128),
    add (LLVM.xor e (ashr (shl (const? 1) (const? 127)) (const? 120))) (shl (const? 1) (const? 127)) ⊑
      LLVM.xor e (const? 170141183460469231731687303715884105600) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:277:8: declaration uses 'sorry'
error: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:277:8: (kernel) deep recursion detected
info: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:310:17: theorem extracted_1 :
  ∀ (e : IntW 77),
    add (LLVM.and e (const? 562949953421310)) (const? 1) ⊑
      LLVM.or (LLVM.and e (const? 562949953421310)) (const? 1) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gapinthadd.lean:306:8: declaration uses 'sorry'
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gapinthadd
error: build failed
