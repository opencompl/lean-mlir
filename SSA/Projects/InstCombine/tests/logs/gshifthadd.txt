error: build failed
⚠ [2443/2457] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [2447/2457] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [2451/2457] Replayed SSA.Experimental.Bits.AutoStructs.Basic
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:99:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:102:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:104:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:106:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:109:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:111:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:113:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:116:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:127:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:164:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:335:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:408:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:443:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Basic.lean:477:6: declaration uses 'sorry'
⚠ [2453/2457] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:24:38: structure ... :=' has been deprecated in favor of 'structure ... where'.
note: this linter can be disabled with `set_option linter.deprecated false`
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:511:59: structure ... :=' has been deprecated in favor of 'structure ... where'.
note: this linter can be disabled with `set_option linter.deprecated false`
✖ [2457/2457] Building SSA.Projects.InstCombine.tests.LLVM.gshifthadd
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/MD4Lean/.lake/build/lib:././.lake/packages/UnicodeBasic/.lake/build/lib:././.lake/packages/BibtexQuery/.lake/build/lib:././.lake/packages/doc-gen4/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib LD_LIBRARY_PATH= /home/lfrenot/.elan/toolchains/leanprover--lean4---nightly-2024-10-15/bin/lean ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gshifthadd.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/LLVM/gshifthadd.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/LLVM/gshifthadd.c --json
info: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:45:17: theorem extracted_1 (x : BitVec 32) :
  (if 32#32 ≤ (x &&& 65535#32) + 5#32 then none
    else some ((6#32).sshiftRight (((x.toNat &&& 65535) + 5) % 4294967296))) ⊑
    some 0#32 := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:35:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:82:17: theorem extracted_1 (x : BitVec 32) :
  (if 32#32 ≤ (x &&& 65535#32) + 5#32 then none else some (6#32 <<< (((x.toNat &&& 65535) + 5) % 4294967296))) ⊑
    if 32#32 ≤ x &&& 65535#32 then none else some (192#32 <<< (x.toNat &&& 65535)) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:72:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:115:17: theorem extracted_1 (x : BitVec 32) :
  ((if x + 5#32 < x ∨ x + 5#32 < 5#32 then none else some (x + 5#32)).bind fun y' =>
      if 32#32 ≤ y' then none else some (6#32 <<< y'.toNat)) ⊑
    if 32#32 ≤ x then none else some (192#32 <<< x.toNat) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:105:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:147:17: theorem extracted_1 (x : BitVec 32) :
  ((if x + 1#32 < x ∨ x + 1#32 < 1#32 then none else some (x + 1#32)).bind fun y' =>
      if 1#32 <<< y'.toNat >>> y'.toNat = 1#32 then none else if 32#32 ≤ y' then none else some (1#32 <<< y'.toNat)) ⊑
    if 2#32 <<< x.toNat >>> x.toNat = 2#32 then none else if 32#32 ≤ x then none else some (2#32 <<< x.toNat) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:137:8: declaration uses 'sorry'
info: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:180:17: theorem extracted_1 (x : BitVec 32) :
  ((if x + 1#32 < x ∨ x + 1#32 < 1#32 then none else some (x + 1#32)).bind fun y' =>
      if (4294967295#32 <<< y'.toNat).sshiftRight y'.toNat = 4294967295#32 then none
      else if 32#32 ≤ y' then none else some (4294967295#32 <<< y'.toNat)) ⊑
    if (4294967294#32 <<< x.toNat).sshiftRight x.toNat = 4294967294#32 then none
    else if 32#32 ≤ x then none else some (4294967294#32 <<< x.toNat) := sorry
warning: ././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean:170:8: declaration uses 'sorry'
info: stdout:
{"severity":"information","pos":{"line":213,"column":17},"keepFullRange":false,"fileName":"././././SSA/Projects/InstCombine/tests/LLVM/gshifthadd.lean","endPos":{"line":213,"column":29},"data":"theorem extracted_1 (x : BitVec 32) :\n  ((if x + 1#32 < x ∨ x + 1#32 < 1#32 then none else some (x + 1#32)).bind fun y' =>\n      if 32#32 ≤ y' then none else some (4#32 >>> y
error: Lean exited with code 137
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.LLVM.gshifthadd
error: build failed
