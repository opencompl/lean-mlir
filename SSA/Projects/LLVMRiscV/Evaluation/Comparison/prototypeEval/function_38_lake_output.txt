⚠ [607/882] Replayed SSA.Core.Framework
warning: SSA/Core/Framework.lean:966:88: `Id.pure_eq` has been deprecated: use `Id.run_pure` instead
warning: SSA/Core/Framework.lean:967:6: `Id.bind_eq` has been deprecated: use `Id.run_bind` instead
warning: SSA/Core/Framework.lean:1372:24: `Id.pure_eq` has been deprecated: use `Id.run_pure` instead
warning: SSA/Core/Framework.lean:1372:36: `Id.bind_eq` has been deprecated: use `Id.run_bind` instead
warning: SSA/Core/Framework.lean:2279:28: `Id.pure_eq` has been deprecated: use `Id.run_pure` instead
warning: SSA/Core/Framework.lean:2286:33: `Id.pure_eq` has been deprecated: use `Id.run_pure` instead
warning: SSA/Core/Framework.lean:2286:45: `Id.bind_eq` has been deprecated: use `Id.run_bind` instead
⚠ [1002/2192] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:47:4: declaration uses 'sorry'
⚠ [1038/2192] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: SSA/Experimental/Bits/AutoStructs/ForLean.lean:108:8: declaration uses 'sorry'
warning: SSA/Experimental/Bits/AutoStructs/ForLean.lean:127:8: declaration uses 'sorry'
warning: SSA/Experimental/Bits/AutoStructs/ForLean.lean:132:8: declaration uses 'sorry'
warning: SSA/Experimental/Bits/AutoStructs/ForLean.lean:142:8: declaration uses 'sorry'
⚠ [1043/2192] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: SSA/Experimental/Bits/AutoStructs/Constructions.lean:160:40: `Array.mem_toList` has been deprecated: use `Array.mem_toList_iff` instead
warning: SSA/Experimental/Bits/AutoStructs/Constructions.lean:166:15: `Array.push_toList` has been deprecated: use `Array.toList_push` instead
warning: SSA/Experimental/Bits/AutoStructs/Constructions.lean:299:25: `List.Nodup.not_mem` has been deprecated: use `List.Nodup.notMem` instead
warning: SSA/Experimental/Bits/AutoStructs/Constructions.lean:841:8: `Set.eq_empty_of_forall_not_mem` has been deprecated: use `Set.eq_empty_of_forall_notMem` instead
⚠ [1056/2192] Replayed SSA.Projects.LLVMRiscV.LLVMAndRiscv
warning: SSA/Projects/LLVMRiscV/LLVMAndRiscv.lean:214:85: `List.get?` has been deprecated: Use `a[i]?` instead.
warning: SSA/Projects/LLVMRiscV/LLVMAndRiscv.lean:250:24: `List.get?_eq_getElem?` has been deprecated: Use `a[i]?` instead.
warning: SSA/Projects/LLVMRiscV/LLVMAndRiscv.lean:251:39: `List.get?_eq_some_iff` has been deprecated: Use `a[i]?` instead.
⚠ [1057/2192] Replayed SSA.Projects.LLVMRiscV.PeepholeRefine
warning: SSA/Projects/LLVMRiscV/PeepholeRefine.lean:53:4: declaration uses 'sorry'
⚠ [1097/2192] Replayed SSA.Projects.DCE.DCE
warning: SSA/Projects/DCE/DCE.lean:291:64: `Id.pure_eq` has been deprecated: use `Id.run_pure` instead
warning: SSA/Projects/DCE/DCE.lean:362:68: `Id.bind_eq` has been deprecated: use `Id.run_bind` instead
⚠ [1098/2192] Replayed SSA.Projects.CSE.CSE
warning: SSA/Projects/CSE/CSE.lean:59:61: `Id.pure_eq` has been deprecated: use `Id.run_pure` instead
warning: SSA/Projects/CSE/CSE.lean:59:73: `Id.bind_eq` has been deprecated: use `Id.run_bind` instead
builtin.module { 
^bb0(%0 : i64, %1 : i1):
  %2 = "builtin.unrealized_conversion_cast"(%1) : (i64) -> (!riscv.reg)
  %3 = "builtin.unrealized_conversion_cast"(%1) : (i64) -> (!riscv.reg)
  %4 = "builtin.unrealized_conversion_cast"(%0) : (i1) -> (!riscv.reg)
  %5 = "riscv.slli"(%4){shamt = 63 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %6 = "riscv.srai"(%5){shamt = 63 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %7 = "riscv.and"(%2, %6) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %8 = "riscv.li"() {immediate = -1 : i32 } : () -> (!riscv.reg)
  %9 = "riscv.xor"(%8, %6) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %10 = "riscv.and"(%9, %3) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %11 = "riscv.or"(%7, %10) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %12 = "riscv.sra"(%11, %2) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %13 = "builtin.unrealized_conversion_cast"(%12) : (!riscv.reg) -> (i64)
  %14 = "llvm.InstCombine.MOp.UnaryOp.trunc (ConcreteOrMVar.concrete 1) { nsw := true, nuw := false }"(%13) : (i64) -> (i1)
  "llvm.return"(%14) : (i1) -> ()
 }
