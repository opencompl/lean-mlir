builtin.module { 
^bb0(%0 : i64, %1 : i64):
  %2 = "builtin.unrealized_conversion_cast"(%0) : (i64) -> (!riscv.reg)
  %3 = "riscv.srl"(%2, %2) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %4 = "riscv.slt"(%2, %3) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %5 = "builtin.unrealized_conversion_cast"(%4) : (!riscv.reg) -> (i1)
  %6 = "builtin.unrealized_conversion_cast"(%5) : (i1) -> (!riscv.reg)
  %7 = "riscv.slli"(%6){immediate = -1 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %8 = "riscv.srai"(%7){immediate = -1 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %9 = "riscv.slt"(%2, %8) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %10 = "riscv.xori"(%9){immediate = 1 : si12 } : (!riscv.reg) -> (!riscv.reg)
  %11 = "builtin.unrealized_conversion_cast"(%10) : (!riscv.reg) -> (i1)
  %12 = "llvm."InstCombine.MOp.UnaryOp.trunc (ConcreteOrMVar.concrete 64) { nsw := false, nuw := false }""(%11) : (i1) -> (i64)
  %13 = "builtin.unrealized_conversion_cast"(%11) : (i1) -> (!riscv.reg)
  %14 = "riscv.andi"(%13){immediate = 1 : i12 } : (!riscv.reg) -> (!riscv.reg)
  %15 = "builtin.unrealized_conversion_cast"(%1) : (i64) -> (!riscv.reg)
  %16 = "riscv.sltu"(%14, %15) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %17 = "builtin.unrealized_conversion_cast"(%16) : (!riscv.reg) -> (i1)
  %18 = "builtin.unrealized_conversion_cast"(%17) : (i1) -> (!riscv.reg)
  %19 = "riscv.slli"(%18){immediate = -1 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %20 = "riscv.srai"(%19){immediate = -1 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %21 = "riscv.add"(%15, %20) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %22 = "builtin.unrealized_conversion_cast"(%12) : (i64) -> (!riscv.reg)
  %23 = "riscv.slt"(%21, %22) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %24 = "builtin.unrealized_conversion_cast"(%23) : (!riscv.reg) -> (i1)
  "llvm.return"(%24) : (i1) -> ()
 }
