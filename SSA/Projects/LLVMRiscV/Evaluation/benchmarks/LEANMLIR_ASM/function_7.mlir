builtin.module { 
^bb0(%0 : i64, %1 : i1, %2 : i64):
  %3 = "builtin.unrealized_conversion_cast"(%0) : (i64) -> (!riscv.reg)
  %4 = "riscv.add"(%3, %3) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %5 = "builtin.unrealized_conversion_cast"(%2) : (i64) -> (!riscv.reg)
  %6 = "riscv.xor"(%5, %5) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %7 = "builtin.unrealized_conversion_cast"(%0) : (i64) -> (!riscv.reg)
  %8 = "builtin.unrealized_conversion_cast"(%1) : (i1) -> (!riscv.reg)
  %9 = "riscv.slli"(%8){immediate = -1 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %10 = "riscv.srai"(%9){immediate = -1 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %11 = "riscv.and"(%7, %10) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %12 = "riscv.li"() {immediate = -1 : i64 } : () -> (!riscv.reg)
  %13 = "riscv.xor"(%12, %10) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %14 = "riscv.and"(%13, %6) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %15 = "riscv.or"(%11, %14) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %16 = "riscv.srl"(%15, %6) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %17 = "riscv.sltu"(%4, %16) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %18 = "builtin.unrealized_conversion_cast"(%17) : (!riscv.reg) -> (i1)
  %19 = "builtin.unrealized_conversion_cast"(%18) : (i1) -> (!riscv.reg)
  %20 = "riscv.slli"(%19){immediate = -1 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %21 = "riscv.srai"(%20){immediate = -1 : i6 } : (!riscv.reg) -> (!riscv.reg)
  %22 = "riscv.mul"(%4, %16) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %23 = "riscv.sll"(%21, %22) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %24 = "riscv.slt"(%23, %22) : (!riscv.reg, !riscv.reg) -> (!riscv.reg)
  %25 = "builtin.unrealized_conversion_cast"(%24) : (!riscv.reg) -> (i1)
  "llvm.return"(%25) : (i1) -> ()
 }
