module attributes {dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<[32, 64]> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">>} {
  llvm.mlir.global external constant @a() {addr_space = 0 : i32, alignment = 16 : i64} : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>> {
    %0 = llvm.mlir.constant("1234\00") : !llvm.array<5 x i8>
    %1 = llvm.mlir.constant("123\00") : !llvm.array<4 x i8>
    %2 = llvm.mlir.undef : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)>
    %3 = llvm.insertvalue %1, %2[0] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %4 = llvm.insertvalue %0, %3[1] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %5 = llvm.mlir.constant("12\00\00\00") : !llvm.array<5 x i8>
    %6 = llvm.mlir.constant("1\00\00\00") : !llvm.array<4 x i8>
    %7 = llvm.mlir.undef : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)>
    %8 = llvm.insertvalue %6, %7[0] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %9 = llvm.insertvalue %5, %8[1] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %10 = llvm.mlir.undef : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %11 = llvm.insertvalue %9, %10[0] : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>> 
    %12 = llvm.insertvalue %4, %11[1] : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>> 
    llvm.return %12 : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
  }
  llvm.func @strlen(!llvm.ptr) -> i64
  llvm.func @fold_strlen_A(%arg0: !llvm.ptr) {
    %0 = llvm.mlir.constant("1234\00") : !llvm.array<5 x i8>
    %1 = llvm.mlir.constant("123\00") : !llvm.array<4 x i8>
    %2 = llvm.mlir.undef : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)>
    %3 = llvm.insertvalue %1, %2[0] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %4 = llvm.insertvalue %0, %3[1] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %5 = llvm.mlir.constant("12\00\00\00") : !llvm.array<5 x i8>
    %6 = llvm.mlir.constant("1\00\00\00") : !llvm.array<4 x i8>
    %7 = llvm.mlir.undef : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)>
    %8 = llvm.insertvalue %6, %7[0] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %9 = llvm.insertvalue %5, %8[1] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %10 = llvm.mlir.undef : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %11 = llvm.insertvalue %9, %10[0] : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>> 
    %12 = llvm.insertvalue %4, %11[1] : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>> 
    %13 = llvm.mlir.addressof @a : !llvm.ptr
    %14 = llvm.mlir.constant(0 : i64) : i64
    %15 = llvm.mlir.constant(0 : i32) : i32
    %16 = llvm.mlir.constant(1 : i64) : i64
    %17 = llvm.mlir.constant(1 : i32) : i32
    %18 = llvm.mlir.constant(2 : i64) : i64
    %19 = llvm.mlir.constant(2 : i32) : i32
    %20 = llvm.mlir.constant(3 : i64) : i64
    %21 = llvm.mlir.constant(3 : i32) : i32
    %22 = llvm.mlir.constant(4 : i32) : i32
    %23 = llvm.mlir.constant(5 : i32) : i32
    %24 = llvm.mlir.constant(6 : i32) : i32
    %25 = llvm.mlir.constant(7 : i32) : i32
    %26 = llvm.mlir.constant(4 : i64) : i64
    %27 = llvm.mlir.constant(8 : i32) : i32
    %28 = llvm.mlir.constant(9 : i32) : i32
    %29 = llvm.mlir.constant(10 : i32) : i32
    %30 = llvm.mlir.constant(11 : i32) : i32
    %31 = llvm.mlir.constant(12 : i32) : i32
    %32 = llvm.mlir.constant(14 : i32) : i32
    %33 = llvm.mlir.constant(15 : i32) : i32
    %34 = llvm.mlir.constant(16 : i32) : i32
    %35 = llvm.mlir.constant(17 : i32) : i32
    %36 = llvm.mlir.constant(18 : i32) : i32
    %37 = llvm.call @strlen(%13) : (!llvm.ptr) -> i64
    llvm.store %37, %arg0 {alignment = 4 : i64} : i64, !llvm.ptr
    %38 = llvm.getelementptr %13[%14, %14, 0, %16] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %39 = llvm.call @strlen(%38) : (!llvm.ptr) -> i64
    %40 = llvm.getelementptr %arg0[%17] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %39, %40 {alignment = 4 : i64} : i64, !llvm.ptr
    %41 = llvm.getelementptr %13[%14, %14, 0, %18] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %42 = llvm.call @strlen(%41) : (!llvm.ptr) -> i64
    %43 = llvm.getelementptr %arg0[%19] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %42, %43 {alignment = 4 : i64} : i64, !llvm.ptr
    %44 = llvm.getelementptr %13[%14, %14, 0, %20] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %45 = llvm.call @strlen(%44) : (!llvm.ptr) -> i64
    %46 = llvm.getelementptr %arg0[%21] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %45, %46 {alignment = 4 : i64} : i64, !llvm.ptr
    %47 = llvm.getelementptr %13[%14, %14, 1, %14] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %48 = llvm.call @strlen(%47) : (!llvm.ptr) -> i64
    %49 = llvm.getelementptr %arg0[%22] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %48, %49 {alignment = 4 : i64} : i64, !llvm.ptr
    %50 = llvm.getelementptr %13[%14, %14, 1, %16] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %51 = llvm.call @strlen(%50) : (!llvm.ptr) -> i64
    %52 = llvm.getelementptr %arg0[%23] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %51, %52 {alignment = 4 : i64} : i64, !llvm.ptr
    %53 = llvm.getelementptr %13[%14, %14, 1, %18] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %54 = llvm.call @strlen(%53) : (!llvm.ptr) -> i64
    %55 = llvm.getelementptr %arg0[%24] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %54, %55 {alignment = 4 : i64} : i64, !llvm.ptr
    %56 = llvm.getelementptr %13[%14, %14, 1, %20] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %57 = llvm.call @strlen(%56) : (!llvm.ptr) -> i64
    %58 = llvm.getelementptr %arg0[%25] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %57, %58 {alignment = 4 : i64} : i64, !llvm.ptr
    %59 = llvm.getelementptr %13[%14, %14, 1, %26] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %60 = llvm.call @strlen(%59) : (!llvm.ptr) -> i64
    %61 = llvm.getelementptr %arg0[%27] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %60, %61 {alignment = 4 : i64} : i64, !llvm.ptr
    %62 = llvm.getelementptr %13[%14, %16, 0, %14] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %63 = llvm.call @strlen(%62) : (!llvm.ptr) -> i64
    %64 = llvm.getelementptr %arg0[%28] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %63, %64 {alignment = 4 : i64} : i64, !llvm.ptr
    %65 = llvm.getelementptr %13[%14, %16, 0, %16] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %66 = llvm.call @strlen(%65) : (!llvm.ptr) -> i64
    %67 = llvm.getelementptr %arg0[%29] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %66, %67 {alignment = 4 : i64} : i64, !llvm.ptr
    %68 = llvm.getelementptr %13[%14, %16, 0, %18] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %69 = llvm.call @strlen(%68) : (!llvm.ptr) -> i64
    %70 = llvm.getelementptr %arg0[%30] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %69, %70 {alignment = 4 : i64} : i64, !llvm.ptr
    %71 = llvm.getelementptr %13[%14, %16, 0, %20] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %72 = llvm.call @strlen(%71) : (!llvm.ptr) -> i64
    %73 = llvm.getelementptr %arg0[%31] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %72, %73 {alignment = 4 : i64} : i64, !llvm.ptr
    %74 = llvm.getelementptr %13[%14, %16, 1, %14] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %75 = llvm.call @strlen(%74) : (!llvm.ptr) -> i64
    %76 = llvm.getelementptr %arg0[%32] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %75, %76 {alignment = 4 : i64} : i64, !llvm.ptr
    %77 = llvm.getelementptr %13[%14, %16, 1, %16] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %78 = llvm.call @strlen(%77) : (!llvm.ptr) -> i64
    %79 = llvm.getelementptr %arg0[%33] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %78, %79 {alignment = 4 : i64} : i64, !llvm.ptr
    %80 = llvm.getelementptr %13[%14, %16, 1, %18] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %81 = llvm.call @strlen(%80) : (!llvm.ptr) -> i64
    %82 = llvm.getelementptr %arg0[%34] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %81, %82 {alignment = 4 : i64} : i64, !llvm.ptr
    %83 = llvm.getelementptr %13[%14, %16, 1, %20] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %84 = llvm.call @strlen(%83) : (!llvm.ptr) -> i64
    %85 = llvm.getelementptr %arg0[%35] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %84, %85 {alignment = 4 : i64} : i64, !llvm.ptr
    %86 = llvm.getelementptr %13[%14, %16, 1, %26] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %87 = llvm.call @strlen(%86) : (!llvm.ptr) -> i64
    %88 = llvm.getelementptr %arg0[%36] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %87, %88 {alignment = 4 : i64} : i64, !llvm.ptr
    llvm.return
  }
  llvm.func @fold_strlen_A_pI(%arg0: !llvm.ptr, %arg1: i64) {
    %0 = llvm.mlir.constant("1234\00") : !llvm.array<5 x i8>
    %1 = llvm.mlir.constant("123\00") : !llvm.array<4 x i8>
    %2 = llvm.mlir.undef : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)>
    %3 = llvm.insertvalue %1, %2[0] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %4 = llvm.insertvalue %0, %3[1] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %5 = llvm.mlir.constant("12\00\00\00") : !llvm.array<5 x i8>
    %6 = llvm.mlir.constant("1\00\00\00") : !llvm.array<4 x i8>
    %7 = llvm.mlir.undef : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)>
    %8 = llvm.insertvalue %6, %7[0] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %9 = llvm.insertvalue %5, %8[1] : !llvm.struct<"struct.A", (array<4 x i8>, array<5 x i8>)> 
    %10 = llvm.mlir.undef : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %11 = llvm.insertvalue %9, %10[0] : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>> 
    %12 = llvm.insertvalue %4, %11[1] : !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>> 
    %13 = llvm.mlir.addressof @a : !llvm.ptr
    %14 = llvm.mlir.constant(0 : i64) : i64
    %15 = llvm.mlir.constant(0 : i32) : i32
    %16 = llvm.mlir.constant(1 : i32) : i32
    %17 = llvm.mlir.constant(1 : i64) : i64
    %18 = llvm.mlir.constant(2 : i32) : i32
    %19 = llvm.mlir.constant(3 : i32) : i32
    %20 = llvm.getelementptr %13[%14, %14, 0, %arg1] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %21 = llvm.call @strlen(%20) : (!llvm.ptr) -> i64
    llvm.store %21, %arg0 {alignment = 4 : i64} : i64, !llvm.ptr
    %22 = llvm.getelementptr %13[%14, %14, 1, %arg1] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %23 = llvm.call @strlen(%22) : (!llvm.ptr) -> i64
    %24 = llvm.getelementptr %arg0[%16] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %23, %24 {alignment = 4 : i64} : i64, !llvm.ptr
    %25 = llvm.getelementptr %13[%14, %17, 0, %arg1] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %26 = llvm.call @strlen(%25) : (!llvm.ptr) -> i64
    %27 = llvm.getelementptr %arg0[%18] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %26, %27 {alignment = 4 : i64} : i64, !llvm.ptr
    %28 = llvm.getelementptr %13[%14, %17, 1, %arg1] : (!llvm.ptr, i64, i64, i64) -> !llvm.ptr, !llvm.array<2 x struct<"struct.A", (array<4 x i8>, array<5 x i8>)>>
    %29 = llvm.call @strlen(%28) : (!llvm.ptr) -> i64
    %30 = llvm.getelementptr %arg0[%19] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %29, %30 {alignment = 4 : i64} : i64, !llvm.ptr
    llvm.return
  }
}
