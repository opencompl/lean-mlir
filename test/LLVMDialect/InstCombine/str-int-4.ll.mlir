module attributes {dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<[32, 64]> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">>} {
  llvm.mlir.global external constant @ws("\09\0D\0A\0B\0C \00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @ws_im123("\09\0D\0A\0B\0C -123\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @ws_ip234("\09\0D\0A\0B\0C +234\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @wsplus(" +\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i0(" 0\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i8(" 8\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i9(" 9\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @ia(" a\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i08("08\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @x0x("0x\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @wsplusws0(" + 0\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i19azAZ("19azAZ\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i32min(" -2147483648\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i32min_m1(" -2147483649\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @o32min(" +020000000000\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @mo32min(" -020000000000\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @x32min(" +0x80000000\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @mx32min(" -0x80000000\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i32max(" 2147483647\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @x32max(" 0x7fffffff\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i32max_p1(" 2147483648\00") {addr_space = 0 : i32}
  llvm.mlir.global external @endptr() {addr_space = 0 : i32} : !llvm.ptr
  llvm.mlir.global external constant @i64min(" -9223372036854775808\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i64min_m1(" -9223372036854775809\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i64max(" 9223372036854775807\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i64max_p1(" 9223372036854775808\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @ui64max(" 18446744073709551615\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @ui64max_p1(" 18446744073709551616\00") {addr_space = 0 : i32}
  llvm.mlir.global external constant @i_1_2_3_(" 1 2\09\\3\0A\00") {addr_space = 0 : i32}
  llvm.func @strtol(!llvm.ptr, !llvm.ptr, i32) -> i32
  llvm.func @strtoll(!llvm.ptr, !llvm.ptr, i32) -> i64
  llvm.func @fold_strtol(%arg0: !llvm.ptr) {
    %0 = llvm.mlir.constant("\09\0D\0A\0B\0C -123\00") : !llvm.array<11 x i8>
    %1 = llvm.mlir.addressof @ws_im123 : !llvm.ptr
    %2 = llvm.mlir.addressof @endptr : !llvm.ptr
    %3 = llvm.mlir.constant(10 : i32) : i32
    %4 = llvm.mlir.constant("\09\0D\0A\0B\0C +234\00") : !llvm.array<11 x i8>
    %5 = llvm.mlir.addressof @ws_ip234 : !llvm.ptr
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.mlir.constant(" 0\00") : !llvm.array<3 x i8>
    %8 = llvm.mlir.addressof @i0 : !llvm.ptr
    %9 = llvm.mlir.constant(0 : i32) : i32
    %10 = llvm.mlir.constant(2 : i32) : i32
    %11 = llvm.mlir.constant(" 9\00") : !llvm.array<3 x i8>
    %12 = llvm.mlir.addressof @i9 : !llvm.ptr
    %13 = llvm.mlir.constant(3 : i32) : i32
    %14 = llvm.mlir.constant(" a\00") : !llvm.array<3 x i8>
    %15 = llvm.mlir.addressof @ia : !llvm.ptr
    %16 = llvm.mlir.constant(16 : i32) : i32
    %17 = llvm.mlir.constant(4 : i32) : i32
    %18 = llvm.mlir.constant("19azAZ\00") : !llvm.array<7 x i8>
    %19 = llvm.mlir.addressof @i19azAZ : !llvm.ptr
    %20 = llvm.mlir.constant(36 : i32) : i32
    %21 = llvm.mlir.constant(5 : i32) : i32
    %22 = llvm.mlir.constant(" -2147483648\00") : !llvm.array<13 x i8>
    %23 = llvm.mlir.addressof @i32min : !llvm.ptr
    %24 = llvm.mlir.constant(6 : i32) : i32
    %25 = llvm.mlir.constant(" -020000000000\00") : !llvm.array<15 x i8>
    %26 = llvm.mlir.addressof @mo32min : !llvm.ptr
    %27 = llvm.mlir.constant(7 : i32) : i32
    %28 = llvm.mlir.constant(" -0x80000000\00") : !llvm.array<13 x i8>
    %29 = llvm.mlir.addressof @mx32min : !llvm.ptr
    %30 = llvm.mlir.constant(8 : i32) : i32
    %31 = llvm.mlir.constant(9 : i32) : i32
    %32 = llvm.mlir.constant(" 2147483647\00") : !llvm.array<12 x i8>
    %33 = llvm.mlir.addressof @i32max : !llvm.ptr
    %34 = llvm.mlir.constant(" 0x7fffffff\00") : !llvm.array<12 x i8>
    %35 = llvm.mlir.addressof @x32max : !llvm.ptr
    %36 = llvm.mlir.constant(11 : i32) : i32
    %37 = llvm.call @strtol(%1, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    llvm.store %37, %arg0 {alignment = 4 : i64} : i32, !llvm.ptr
    %38 = llvm.call @strtol(%5, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %39 = llvm.getelementptr %arg0[%6] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %38, %39 {alignment = 4 : i64} : i32, !llvm.ptr
    %40 = llvm.call @strtol(%8, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %41 = llvm.getelementptr %arg0[%10] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %40, %41 {alignment = 4 : i64} : i32, !llvm.ptr
    %42 = llvm.call @strtol(%12, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %43 = llvm.getelementptr %arg0[%13] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %42, %43 {alignment = 4 : i64} : i32, !llvm.ptr
    %44 = llvm.call @strtol(%15, %2, %16) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %45 = llvm.getelementptr %arg0[%17] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %44, %45 {alignment = 4 : i64} : i32, !llvm.ptr
    %46 = llvm.call @strtol(%19, %2, %20) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %47 = llvm.getelementptr %arg0[%21] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %46, %47 {alignment = 4 : i64} : i32, !llvm.ptr
    %48 = llvm.call @strtol(%23, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %49 = llvm.getelementptr %arg0[%24] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %48, %49 {alignment = 4 : i64} : i32, !llvm.ptr
    %50 = llvm.call @strtol(%26, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %51 = llvm.getelementptr %arg0[%27] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %50, %51 {alignment = 4 : i64} : i32, !llvm.ptr
    %52 = llvm.call @strtol(%29, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %53 = llvm.getelementptr %arg0[%30] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %52, %53 {alignment = 4 : i64} : i32, !llvm.ptr
    %54 = llvm.call @strtol(%29, %2, %16) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %55 = llvm.getelementptr %arg0[%31] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %54, %55 {alignment = 4 : i64} : i32, !llvm.ptr
    %56 = llvm.call @strtol(%33, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %57 = llvm.getelementptr %arg0[%3] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %56, %57 {alignment = 4 : i64} : i32, !llvm.ptr
    %58 = llvm.call @strtol(%35, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %59 = llvm.getelementptr %arg0[%36] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %58, %59 {alignment = 4 : i64} : i32, !llvm.ptr
    llvm.return
  }
  llvm.func @call_strtol(%arg0: !llvm.ptr) {
    %0 = llvm.mlir.constant(" -2147483649\00") : !llvm.array<13 x i8>
    %1 = llvm.mlir.addressof @i32min_m1 : !llvm.ptr
    %2 = llvm.mlir.addressof @endptr : !llvm.ptr
    %3 = llvm.mlir.constant(10 : i32) : i32
    %4 = llvm.mlir.constant(" 2147483648\00") : !llvm.array<12 x i8>
    %5 = llvm.mlir.addressof @i32max_p1 : !llvm.ptr
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.mlir.constant(" +\00") : !llvm.array<3 x i8>
    %8 = llvm.mlir.addressof @wsplus : !llvm.ptr
    %9 = llvm.mlir.constant(0 : i32) : i32
    %10 = llvm.mlir.constant(2 : i32) : i32
    %11 = llvm.mlir.constant(" a\00") : !llvm.array<3 x i8>
    %12 = llvm.mlir.addressof @ia : !llvm.ptr
    %13 = llvm.mlir.constant(3 : i32) : i32
    %14 = llvm.mlir.constant(" 8\00") : !llvm.array<3 x i8>
    %15 = llvm.mlir.addressof @i8 : !llvm.ptr
    %16 = llvm.mlir.constant(8 : i32) : i32
    %17 = llvm.mlir.constant(4 : i32) : i32
    %18 = llvm.mlir.constant("0x\00") : !llvm.array<3 x i8>
    %19 = llvm.mlir.addressof @x0x : !llvm.ptr
    %20 = llvm.mlir.constant(5 : i32) : i32
    %21 = llvm.mlir.constant(" + 0\00") : !llvm.array<5 x i8>
    %22 = llvm.mlir.addressof @wsplusws0 : !llvm.ptr
    %23 = llvm.mlir.constant(6 : i32) : i32
    %24 = llvm.mlir.constant("19azAZ\00") : !llvm.array<7 x i8>
    %25 = llvm.mlir.addressof @i19azAZ : !llvm.ptr
    %26 = llvm.mlir.constant(35 : i32) : i32
    %27 = llvm.mlir.constant(7 : i32) : i32
    %28 = llvm.mlir.constant(" +020000000000\00") : !llvm.array<15 x i8>
    %29 = llvm.mlir.addressof @o32min : !llvm.ptr
    %30 = llvm.mlir.constant(" +0x80000000\00") : !llvm.array<13 x i8>
    %31 = llvm.mlir.addressof @x32min : !llvm.ptr
    %32 = llvm.mlir.constant(9 : i32) : i32
    %33 = llvm.mlir.constant("\09\0D\0A\0B\0C \00") : !llvm.array<7 x i8>
    %34 = llvm.mlir.addressof @ws : !llvm.ptr
    %35 = llvm.mlir.constant(11 : i32) : i32
    %36 = llvm.mlir.constant(12 : i32) : i32
    %37 = llvm.mlir.constant(" 0\00") : !llvm.array<3 x i8>
    %38 = llvm.mlir.addressof @i0 : !llvm.ptr
    %39 = llvm.mlir.constant(13 : i32) : i32
    %40 = llvm.mlir.constant(256 : i32) : i32
    %41 = llvm.mlir.constant(14 : i32) : i32
    %42 = llvm.call @strtol(%1, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    llvm.store %42, %arg0 {alignment = 4 : i64} : i32, !llvm.ptr
    %43 = llvm.call @strtol(%5, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %44 = llvm.getelementptr %arg0[%6] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %43, %44 {alignment = 4 : i64} : i32, !llvm.ptr
    %45 = llvm.call @strtol(%8, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %46 = llvm.getelementptr %arg0[%10] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %45, %46 {alignment = 4 : i64} : i32, !llvm.ptr
    %47 = llvm.call @strtol(%12, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %48 = llvm.getelementptr %arg0[%13] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %47, %48 {alignment = 4 : i64} : i32, !llvm.ptr
    %49 = llvm.call @strtol(%15, %2, %16) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %50 = llvm.getelementptr %arg0[%17] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %49, %50 {alignment = 4 : i64} : i32, !llvm.ptr
    %51 = llvm.call @strtol(%19, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %52 = llvm.getelementptr %arg0[%20] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %51, %52 {alignment = 4 : i64} : i32, !llvm.ptr
    %53 = llvm.call @strtol(%22, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %54 = llvm.getelementptr %arg0[%23] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %53, %54 {alignment = 4 : i64} : i32, !llvm.ptr
    %55 = llvm.call @strtol(%25, %2, %26) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %56 = llvm.getelementptr %arg0[%27] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %55, %56 {alignment = 4 : i64} : i32, !llvm.ptr
    %57 = llvm.call @strtol(%29, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %58 = llvm.getelementptr %arg0[%16] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %57, %58 {alignment = 4 : i64} : i32, !llvm.ptr
    %59 = llvm.call @strtol(%31, %2, %9) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %60 = llvm.getelementptr %arg0[%32] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %59, %60 {alignment = 4 : i64} : i32, !llvm.ptr
    %61 = llvm.call @strtol(%31, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %62 = llvm.getelementptr %arg0[%3] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %61, %62 {alignment = 4 : i64} : i32, !llvm.ptr
    %63 = llvm.call @strtol(%34, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %64 = llvm.getelementptr %arg0[%35] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %63, %64 {alignment = 4 : i64} : i32, !llvm.ptr
    %65 = llvm.getelementptr %34[%9, %23] : (!llvm.ptr, i32, i32) -> !llvm.ptr, !llvm.array<7 x i8>
    %66 = llvm.call @strtol(%65, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %67 = llvm.getelementptr %arg0[%36] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %66, %67 {alignment = 4 : i64} : i32, !llvm.ptr
    %68 = llvm.call @strtol(%38, %2, %6) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %69 = llvm.getelementptr %arg0[%39] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %68, %69 {alignment = 4 : i64} : i32, !llvm.ptr
    %70 = llvm.call @strtol(%38, %2, %40) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %71 = llvm.getelementptr %arg0[%41] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %70, %71 {alignment = 4 : i64} : i32, !llvm.ptr
    llvm.return
  }
  llvm.func @fold_strtoll(%arg0: !llvm.ptr) {
    %0 = llvm.mlir.constant("\09\0D\0A\0B\0C -123\00") : !llvm.array<11 x i8>
    %1 = llvm.mlir.addressof @ws_im123 : !llvm.ptr
    %2 = llvm.mlir.addressof @endptr : !llvm.ptr
    %3 = llvm.mlir.constant(10 : i32) : i32
    %4 = llvm.mlir.constant("\09\0D\0A\0B\0C +234\00") : !llvm.array<11 x i8>
    %5 = llvm.mlir.addressof @ws_ip234 : !llvm.ptr
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.mlir.constant(" -9223372036854775808\00") : !llvm.array<22 x i8>
    %8 = llvm.mlir.addressof @i64min : !llvm.ptr
    %9 = llvm.mlir.constant(2 : i32) : i32
    %10 = llvm.mlir.constant(" 9223372036854775807\00") : !llvm.array<21 x i8>
    %11 = llvm.mlir.addressof @i64max : !llvm.ptr
    %12 = llvm.mlir.constant(3 : i32) : i32
    %13 = llvm.call @strtoll(%1, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i64
    llvm.store %13, %arg0 {alignment = 4 : i64} : i64, !llvm.ptr
    %14 = llvm.call @strtoll(%5, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i64
    %15 = llvm.getelementptr %arg0[%6] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %14, %15 {alignment = 4 : i64} : i64, !llvm.ptr
    %16 = llvm.call @strtoll(%8, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i64
    %17 = llvm.getelementptr %arg0[%9] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %16, %17 {alignment = 4 : i64} : i64, !llvm.ptr
    %18 = llvm.call @strtoll(%11, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i64
    %19 = llvm.getelementptr %arg0[%12] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %18, %19 {alignment = 4 : i64} : i64, !llvm.ptr
    llvm.return
  }
  llvm.func @call_strtoll(%arg0: !llvm.ptr) {
    %0 = llvm.mlir.constant(" -9223372036854775809\00") : !llvm.array<22 x i8>
    %1 = llvm.mlir.addressof @i64min_m1 : !llvm.ptr
    %2 = llvm.mlir.addressof @endptr : !llvm.ptr
    %3 = llvm.mlir.constant(10 : i32) : i32
    %4 = llvm.mlir.constant(" 9223372036854775808\00") : !llvm.array<21 x i8>
    %5 = llvm.mlir.addressof @i64max_p1 : !llvm.ptr
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.mlir.constant("\09\0D\0A\0B\0C \00") : !llvm.array<7 x i8>
    %8 = llvm.mlir.addressof @ws : !llvm.ptr
    %9 = llvm.mlir.constant(2 : i32) : i32
    %10 = llvm.mlir.constant(0 : i32) : i32
    %11 = llvm.mlir.constant(6 : i32) : i32
    %12 = llvm.mlir.constant(3 : i32) : i32
    %13 = llvm.call @strtoll(%1, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i64
    llvm.store %13, %arg0 {alignment = 4 : i64} : i64, !llvm.ptr
    %14 = llvm.call @strtoll(%5, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i64
    %15 = llvm.getelementptr %arg0[%6] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %14, %15 {alignment = 4 : i64} : i64, !llvm.ptr
    %16 = llvm.call @strtoll(%8, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i64
    %17 = llvm.getelementptr %arg0[%9] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %16, %17 {alignment = 4 : i64} : i64, !llvm.ptr
    %18 = llvm.getelementptr %8[%10, %11] : (!llvm.ptr, i32, i32) -> !llvm.ptr, !llvm.array<7 x i8>
    %19 = llvm.call @strtoll(%18, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i64
    %20 = llvm.getelementptr %arg0[%12] : (!llvm.ptr, i32) -> !llvm.ptr, i64
    llvm.store %19, %20 {alignment = 4 : i64} : i64, !llvm.ptr
    llvm.return
  }
  llvm.func @call_strtol_trailing_space(%arg0: !llvm.ptr) {
    %0 = llvm.mlir.constant(" 1 2\09\\3\0A\00") : !llvm.array<9 x i8>
    %1 = llvm.mlir.addressof @i_1_2_3_ : !llvm.ptr
    %2 = llvm.mlir.addressof @endptr : !llvm.ptr
    %3 = llvm.mlir.constant(10 : i32) : i32
    %4 = llvm.mlir.constant(1 : i32) : i32
    %5 = llvm.mlir.constant(0 : i32) : i32
    %6 = llvm.mlir.constant(2 : i32) : i32
    %7 = llvm.mlir.constant(4 : i32) : i32
    %8 = llvm.mlir.constant(3 : i32) : i32
    %9 = llvm.call @strtol(%1, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %10 = llvm.getelementptr %arg0[%4] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %9, %10 {alignment = 4 : i64} : i32, !llvm.ptr
    %11 = llvm.getelementptr %1[%5, %6] : (!llvm.ptr, i32, i32) -> !llvm.ptr, !llvm.array<9 x i8>
    %12 = llvm.call @strtol(%11, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %13 = llvm.getelementptr %arg0[%6] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %12, %13 {alignment = 4 : i64} : i32, !llvm.ptr
    %14 = llvm.getelementptr %1[%5, %7] : (!llvm.ptr, i32, i32) -> !llvm.ptr, !llvm.array<9 x i8>
    %15 = llvm.call @strtol(%14, %2, %3) : (!llvm.ptr, !llvm.ptr, i32) -> i32
    %16 = llvm.getelementptr %arg0[%8] : (!llvm.ptr, i32) -> !llvm.ptr, i32
    llvm.store %15, %16 {alignment = 4 : i64} : i32, !llvm.ptr
    llvm.return
  }
}
