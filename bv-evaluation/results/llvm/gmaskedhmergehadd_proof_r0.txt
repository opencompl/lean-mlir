⚠ [665/885] Replayed SSA.Core.ErasedContext
warning: ././././SSA/Core/ErasedContext.lean:325:14: unused variable `t`
note: this linter can be disabled with `set_option linter.unusedVariables false`
⚠ [672/885] Replayed SSA.Core.Framework
warning: ././././SSA/Core/Framework.lean:1826:9: unused variable `inst`
note: this linter can be disabled with `set_option linter.unusedVariables false`
warning: ././././SSA/Core/Framework.lean:1833:75: unused variable `inst`
note: this linter can be disabled with `set_option linter.unusedVariables false`
warning: ././././SSA/Core/Framework.lean:2083:31: unused variable `x`
note: this linter can be disabled with `set_option linter.unusedVariables false`
warning: ././././SSA/Core/Framework.lean:2084:33: unused variable `x`
note: this linter can be disabled with `set_option linter.unusedVariables false`
⚠ [685/885] Replayed SSA.Core.MLIRSyntax.AST
warning: ././././SSA/Core/MLIRSyntax/AST.lean:40:4: The namespace 'SSAVal' is duplicated in the declaration 'MLIR.AST.SSAVal.SSAVal'
note: this linter can be disabled with `set_option linter.dupNamespace false`
⚠ [867/885] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [871/885] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [872/885] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:24:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:27:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:34:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:41:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:52:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:56:8: declaration uses 'sorry'
⚠ [878/885] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:55:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:128:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:163:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:197:6: declaration uses 'sorry'
⚠ [879/885] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
✖ [885/885] Building SSA.Projects.InstCombine.tests.proofs.gmaskedhmergehadd_proof
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib DYLD_LIBRARY_PATH= /Users/luisa/.elan/toolchains/leanprover--lean4---nightly-2024-10-24/bin/lean ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.c --json
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:8:104: Bitwuzla proved the goal after 75.000000ms
LeanSAT proved the goal after 76.000000ms: rewriting 0.000000ms, bitblasting 0.000000ms, SAT solving 60.429333ms, LRAT processing 0.000000ms
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:11:94: Bitwuzla proved the goal after 72.000000ms
LeanSAT proved the goal after 71.000000ms: rewriting 0.000000ms, bitblasting 0.000000ms, SAT solving 56.259959ms, LRAT processing 0.000000ms
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:14:94: Bitwuzla proved the goal after 87.000000ms
LeanSAT proved the goal after 80.000000ms: rewriting 12.145250ms, bitblasting 0.000000ms, SAT solving 61.016541ms, LRAT processing 0.000000ms
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:17:104: Bitwuzla proved the goal after 76.000000ms
LeanSAT proved the goal after 74.000000ms: rewriting 0.000000ms, bitblasting 0.000000ms, SAT solving 57.668917ms, LRAT processing 0.000000ms
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:20:104: Bitwuzla proved the goal after 75.000000ms
LeanSAT proved the goal after 76.000000ms: rewriting 0.000000ms, bitblasting 0.000000ms, SAT solving 59.044542ms, LRAT processing 0.000000ms
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:23:104: Bitwuzla proved the goal after 75.000000ms
LeanSAT proved the goal after 79.000000ms: rewriting 0.000000ms, bitblasting 0.000000ms, SAT solving 61.038291ms, LRAT processing 0.000000ms
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:26:94: Bitwuzla proved the goal after 75.000000ms
LeanSAT proved the goal after 76.000000ms: rewriting 0.000000ms, bitblasting 0.000000ms, SAT solving 61.014833ms, LRAT processing 0.000000ms
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:28:113: Bitwuzla proved the goal after 71.000000ms
LeanSAT proved the goal after 71.000000ms: rewriting 0.000000ms, bitblasting 0.000000ms, SAT solving 60.934792ms, LRAT processing 0.000000ms
error: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:41:62: None of the hypotheses are in the supported BitVec fragment.
There are two potential fixes for this:
1. If you are using custom BitVec constructs simplify them to built-in ones.
2. If your problem is using only built-in ones it might currently be out of reach.
   Consider expressing it in terms of different operations that are better supported.
info: ././././SSA/Projects/InstCombine/tests/proofs/gmaskedhmergehadd_proof.lean:41:62: [bv] [0.019908] Normalizing goal
  [Meta.Tactic.bv] Running preprocessing pipeline on:
      case h
      x x_1 : BitVec 32
      a✝ :
        ¬some ((x_1 &&& 65280#32) + (x &&& 65280#32)) ⊑
            if
                (x_1.msb && (65280#32).msb) = (x.msb && (65280#32).msb) ∧
                  ¬((x_1 &&& 65280#32) + (x &&& 65280#32)).msb = (x_1.msb && (65280#32).msb) then
              none
            else
              if
                  (x_1 &&& 65280#32) + (x &&& 65280#32) < x_1 &&& 65280#32 ∨
                    (x_1 &&& 65280#32) + (x &&& 65280#32) < x &&& 65280#32 then
                none
              else some ((x_1 &&& 65280#32) + (x &&& 65280#32))
      ⊢ False
  [Meta.Tactic.bv] Rerunning pipeline on:
      case h
      x x_1 : BitVec 32
      a✝ :
        ¬some ((x_1 &&& 65280#32) + (x &&& 65280#32)) ⊑
            if ((x_1 &&& 65280#32) + (x &&& 65280#32)).getLsbD 31 = true then none
            else
              if
                  (!((!x_1 &&& 65280#32 >ᵤ (x_1 &&& 65280#32) + (x &&& 65280#32)) &&
                        !x &&& 65280#32 >ᵤ (x_1 &&& 65280#32) + (x &&& 65280#32))) =
                    true then
                none
              else some ((x_1 &&& 65280#32) + (x &&& 65280#32))
      ⊢ False
  [Meta.Tactic.bv] Pipeline reached a fixpoint
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.proofs.gmaskedhmergehadd_proof
