⚠ [667/887] Replayed SSA.Core.ErasedContext
warning: ././././SSA/Core/ErasedContext.lean:325:14: unused variable `t`
note: this linter can be disabled with `set_option linter.unusedVariables false`
⚠ [674/887] Replayed SSA.Core.Framework
warning: ././././SSA/Core/Framework.lean:1826:9: unused variable `inst`
note: this linter can be disabled with `set_option linter.unusedVariables false`
warning: ././././SSA/Core/Framework.lean:1833:75: unused variable `inst`
note: this linter can be disabled with `set_option linter.unusedVariables false`
warning: ././././SSA/Core/Framework.lean:2083:31: unused variable `x`
note: this linter can be disabled with `set_option linter.unusedVariables false`
warning: ././././SSA/Core/Framework.lean:2084:33: unused variable `x`
note: this linter can be disabled with `set_option linter.unusedVariables false`
⚠ [687/887] Replayed SSA.Core.MLIRSyntax.AST
warning: ././././SSA/Core/MLIRSyntax/AST.lean:40:4: The namespace 'SSAVal' is duplicated in the declaration 'MLIR.AST.SSAVal.SSAVal'
note: this linter can be disabled with `set_option linter.dupNamespace false`
⚠ [869/887] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [873/887] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:340:4: declaration uses 'sorry'
⚠ [874/887] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:24:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:27:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:34:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:41:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:52:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:56:8: declaration uses 'sorry'
⚠ [880/887] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:55:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:128:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:163:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:197:6: declaration uses 'sorry'
⚠ [881/887] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
✖ [887/887] Building SSA.Projects.InstCombine.tests.proofs.g2012h08h28hudiv_ashl_proof
trace: .> LEAN_PATH=././.lake/packages/batteries/.lake/build/lib:././.lake/packages/Qq/.lake/build/lib:././.lake/packages/aesop/.lake/build/lib:././.lake/packages/proofwidgets/.lake/build/lib:././.lake/packages/Cli/.lake/build/lib:././.lake/packages/importGraph/.lake/build/lib:././.lake/packages/LeanSearchClient/.lake/build/lib:././.lake/packages/mathlib/.lake/build/lib:././.lake/packages/leanwuzla/.lake/build/lib:././.lake/build/lib DYLD_LIBRARY_PATH= /Users/luisa/.elan/toolchains/leanprover--lean4---nightly-2024-10-25/bin/lean ././././SSA/Projects/InstCombine/tests/proofs/g2012h08h28hudiv_ashl_proof.lean -R ./././. -o ././.lake/build/lib/SSA/Projects/InstCombine/tests/proofs/g2012h08h28hudiv_ashl_proof.olean -i ././.lake/build/lib/SSA/Projects/InstCombine/tests/proofs/g2012h08h28hudiv_ashl_proof.ilean -c ././.lake/build/ir/SSA/Projects/InstCombine/tests/proofs/g2012h08h28hudiv_ashl_proof.c --json
info: ././././SSA/Projects/InstCombine/tests/proofs/g2012h08h28hudiv_ashl_proof.lean:7:74: Bitwuzla proved the goal after 73.000000ms
LeanSAT proved the goal after 2365.000000ms: rewriting 0.000000ms, bitblasting 17.829417ms, SAT solving 1508.776125ms, LRAT trimming 387.612208ms, LRAT checking 388.630708ms
info: ././././SSA/Projects/InstCombine/tests/proofs/g2012h08h28hudiv_ashl_proof.lean:9:83: Bitwuzla proved the goal after 75.000000ms
LeanSAT proved the goal after 2690.000000ms: rewriting 0.000000ms, bitblasting 45.711958ms, SAT solving 1838.915334ms, LRAT trimming 333.005542ms, LRAT checking 403.522917ms
error: ././././SSA/Projects/InstCombine/tests/proofs/g2012h08h28hudiv_ashl_proof.lean:11:75: The SAT solver timed out while solving the problem.
Consider increasing the timeout with `set_option sat.timeout <sec>`.
If solving your problem relies inherently on using associativity or commutativity, consider enabling the `bv.ac_nf` option.
info: ././././SSA/Projects/InstCombine/tests/proofs/g2012h08h28hudiv_ashl_proof.lean:11:75: [Meta.Tactic.bv] Running preprocessing pipeline on:
    case h
    x : BitVec 80
    a✝ : ¬x >>> 2 / 100#80 = x / 400#80
    ⊢ False
[Meta.Tactic.bv] Rerunning pipeline on:
    case h
    x : BitVec 80
    a✝ : (!x >>> 2 / 100#80 == x / 400#80) = true
    ⊢ False
[Meta.Tactic.bv] Pipeline reached a fixpoint
[Meta.Tactic.bv] New atom of width 80: x
[Meta.Tactic.bv] Reflected bv logical expression: !(((>> 2 var0) /ᵤ 0x00000000000000000064#80) == (var0 /ᵤ 0x00000000000000000190#80))
[bv] [11.168754] Preparing LRAT reflection term
  [bv] [0.116338] Bitblasting BVLogicalExpr to AIG
  [Meta.Tactic.bv] AIG has 231725 nodes.
  [sat] [0.100255] Converting AIG to CNF
  [sat] [10.952082] Obtaining external proof certificate
    [sat] [0.252891] Serializing SAT problem to DIMACS file
    [sat] [10.698535] Running SAT solver
error: Lean exited with code 1
Some required builds logged failures:
- SSA.Projects.InstCombine.tests.proofs.g2012h08h28hudiv_ashl_proof
