⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [887/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 930.926859 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 4994.588604 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 189.308138 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 315.547390 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 213.643139 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 14.375829 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      6 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (32#8 >ₛ x✝¹ <<< 5#8 &&& 192#8)).toNat
     c := ↑(ofBool (1#8 >ₛ ((x✝ &&& 8#8 ||| x✝¹ &&& 6#8) <<< 5#8).sshiftRight' 5#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 50.526830 ms, MSGSTART 
    Equality (1#8 >ₛ ((x✝ &&& 8#8 ||| x✝¹ &&& 6#8) <<< 5).sshiftRight 5) =
      (32#8 >ₛ x✝¹ <<< 5 &&& 192#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 154.932070 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 4979.093686 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 124.793700 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 36.512130 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 34.659370 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 155.732059 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 42.610770 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.922610 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      6 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (x✝ &&& 6#8 == 0#8)).toNat
     c := ↑(ofBool (32#8 >ᵤ x✝ <<< 5#8 &&& 192#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 23.518900 ms, MSGSTART 
    Equality (32#8 >ᵤ x✝ <<< 5 &&& 192#8) = (x✝ &&& 6#8 == 0#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 97.816649 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 545.369778 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 233.654010 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 53.161419 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 25.608350 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 149.637809 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 41.637840 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.445270 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      6 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 52.854800 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom (AutoStructs.Relation.signed AutoStructs.RelationOrdering.lt)
            ((AutoStructs.Term.var 0).and (AutoStructs.Term.var 1)) (AutoStructs.Term.var 2)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 91.320390 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 377.219838 ms, 
TACEND
