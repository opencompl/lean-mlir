⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [885/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [888/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 140.084819 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 14.403500 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.752350 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 221.708469 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 28.330240 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.993490 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 25.374210 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 12.893459 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 13.324090 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 134.404340 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 14.373590 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.314720 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 250.110409 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 26.430090 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.592930 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 27.120750 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 13.361470 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 14.359870 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 108.918139 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 27.209920 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.634270 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 144.391430 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 27.072939 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.979270 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 24.969520 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 13.304050 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 14.051050 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 141.110539 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 32.574790 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.582640 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 157.421740 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 26.346840 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.535699 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 23.745780 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 12.154761 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 12.683219 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 109.673999 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 29.924860 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 9.136180 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 246.908189 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 29.940910 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 20.979390 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      1 ≤ a ≤ 255
    where
     a := ↑x✝.toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 31.566470 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 18.533340 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 12.293400 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 129.296279 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 37.742720 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 11.481080 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 263.822899 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 28.630040 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 20.247240 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      1 ≤ a ≤ 255
    where
     a := ↑x✝.toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 23.409690 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 13.614500 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 10.709910 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 233.068440 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 39.389579 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 26.563189 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 250.102559 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 62.678110 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.496600 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      1 ≤ c ≤ 255
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝² == 42#8 / x✝)).toNat
     b := ↑(ofBool (42#8 / x✝ == x✝²)).toNat
     c := ↑x✝.toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 80.476219 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 170.796469 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 392.974809 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 77.467920 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.873420 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 4.798770 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 84.871229 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.013430 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.797380 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.888570 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 8.257190 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.802790 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 76.361060 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 18.569080 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 4.781080 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 80.920480 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.096240 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.162069 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.625500 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 7.569000 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 7.653770 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 88.602500 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 8.159660 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.464710 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 82.748580 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.753329 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.832270 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 35.456981 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0) (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 9.901170 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 41.568969 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 74.305380 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 17.110100 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 4.482800 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 81.031049 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.088900 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.146630 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.368370 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 7.622830 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 7.727890 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 77.070879 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 23.989721 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 4.630269 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 81.697380 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.375790 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.777210 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.896979 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 9.379731 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 7.576099 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 86.675510 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 7.734210 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 11.244870 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 68.869710 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 33.898040 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.594290 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ == x✝¹)).toNat
     b := ↑(ofBool (x✝¹ == x✝¹)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 31.928750 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.one (AutoStructs.Term.var 0)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 9.243240 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 174.577040 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 167.610429 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 41.143500 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 22.299899 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 246.502689 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 58.058100 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.670090 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 53.824840 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.one (AutoStructs.Term.var 0)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 113.649729 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 463.094948 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 169.379669 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 44.122020 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 25.053960 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 250.234389 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 73.130460 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.896640 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 85.172149 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.binop AutoStructs.Binop.equiv
            (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0)
              ((AutoStructs.Term.var 1).or AutoStructs.Term.one))
            (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 2) AutoStructs.Term.zero)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 110.405670 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 505.770788 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 0.550050 ms, MSGSTART 
    applyExtTheorem only applies to equations, not
      some (ofBool (x✝¹ != x✝¹)) ⊑ none MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 6.844890 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.606420 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 70.632609 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 30.894800 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.364700 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 19.280680 ms, MSGSTART 
    Unsupported syntax some 0#1 ⊑ none === Lean.Expr.app
      (Lean.Expr.app
        (Lean.Expr.app
          (Lean.Expr.const `BitVec.Refinement [Lean.Level.zero])
          (Lean.Expr.app
            (Lean.Expr.const `BitVec [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                (Lean.Expr.lit (Lean.Literal.natVal 1)))
              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1))))))
        (Lean.Expr.app
          (Lean.Expr.app
            (Lean.Expr.const `Option.some [Lean.Level.zero])
            (Lean.Expr.app
              (Lean.Expr.const `BitVec [])
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                  (Lean.Expr.lit (Lean.Literal.natVal 1)))
                (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1))))))
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.const `BitVec.ofNat [])
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                  (Lean.Expr.lit (Lean.Literal.natVal 1)))
                (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1)))))
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                (Lean.Expr.lit (Lean.Literal.natVal 0)))
              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 0)))))))
      (Lean.Expr.app
        (Lean.Expr.const `Option.none [Lean.Level.zero])
        (Lean.Expr.app
          (Lean.Expr.const `BitVec [])
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
              (Lean.Expr.lit (Lean.Literal.natVal 1)))
            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1)))))) MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 141.348349 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 412.185189 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 48.958829 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 30.043379 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.861060 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 105.970240 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 34.321420 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 16.664800 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 23.059020 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 18.910460 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 11.327869 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 145.961250 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 23.317520 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 10.716260 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 66.372299 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 43.301320 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.996440 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝² != x✝¹)).toNat
     b := ↑(ofBool (x✝¹ != x✝¹)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 28.616260 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.zero (AutoStructs.Term.var 0)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 110.607740 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 218.372389 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.902230 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 20.617980 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 4.316330 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 72.219430 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 23.616040 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.703049 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.872690 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 12.343579 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 7.258300 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 135.080260 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 21.528700 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.651470 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 71.468779 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.098930 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.200030 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 32.502500 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0) (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 109.332380 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 133.540979 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 165.108189 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 62.934510 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 14.082950 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 145.508309 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.694840 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.955100 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 36.722900 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom (AutoStructs.Relation.unsigned AutoStructs.RelationOrdering.lt)
            (AutoStructs.Term.var 0) ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 1))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 105.184610 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 392.670188 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 164.372899 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 61.954430 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 14.200520 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 147.001499 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 17.229090 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.074680 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 35.925400 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom (AutoStructs.Relation.unsigned AutoStructs.RelationOrdering.lt)
            (AutoStructs.Term.var 0) ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 1))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 104.730679 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 382.464289 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 0.563870 ms, MSGSTART 
    applyExtTheorem only applies to equations, not
      some (ofBool (x✝¹ ≥ᵤ x✝¹ + 2#8)) ⊑ none MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 10.030970 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.957230 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 142.882580 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.300340 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.856240 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 13.132120 ms, MSGSTART 
    Unsupported syntax some (ofBool (x✝¹ ≥ᵤ x✝¹ + 2#8)) ⊑ none === Lean.Expr.app
      (Lean.Expr.app
        (Lean.Expr.app
          (Lean.Expr.const `BitVec.Refinement [Lean.Level.zero])
          (Lean.Expr.app
            (Lean.Expr.const `BitVec [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                (Lean.Expr.lit (Lean.Literal.natVal 1)))
              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1))))))
        (Lean.Expr.app
          (Lean.Expr.app
            (Lean.Expr.const `Option.some [Lean.Level.zero])
            (Lean.Expr.app
              (Lean.Expr.const `BitVec [])
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                  (Lean.Expr.lit (Lean.Literal.natVal 1)))
                (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1))))))
          (Lean.Expr.app
            (Lean.Expr.const `BitVec.ofBool [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.const `BitVec.ule [])
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 8)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app
                            (Lean.Expr.const `HAdd.hAdd [Lean.Level.zero, Lean.Level.zero, Lean.Level.zero])
                            (Lean.Expr.app
                              (Lean.Expr.const `BitVec [])
                              (Lean.Expr.app
                                (Lean.Expr.app
                                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                                  (Lean.Expr.lit (Lean.Literal.natVal 8)))
                                (Lean.Expr.app
                                  (Lean.Expr.const `instOfNatNat [])
                                  (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                          (Lean.Expr.app
                            (Lean.Expr.const `BitVec [])
                            (Lean.Expr.app
                              (Lean.Expr.app
                                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                                (Lean.Expr.lit (Lean.Literal.natVal 8)))
                              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                        (Lean.Expr.app
                          (Lean.Expr.const `BitVec [])
                          (Lean.Expr.app
                            (Lean.Expr.app
                              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                              (Lean.Expr.lit (Lean.Literal.natVal 8)))
                            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.const `instHAdd [Lean.Level.zero])
                          (Lean.Expr.app
                            (Lean.Expr.const `BitVec [])
                            (Lean.Expr.app
                              (Lean.Expr.app
                                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                                (Lean.Expr.lit (Lean.Literal.natVal 8)))
                              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                        (Lean.Expr.app
                          (Lean.Expr.const `BitVec.instAdd [])
                          (Lean.Expr.app
                            (Lean.Expr.app
                              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                              (Lean.Expr.lit (Lean.Literal.natVal 8)))
                            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))))
                    (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 459521)))
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec.ofNat [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 2)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 2)))))))
              (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 459521))))))
      (Lean.Expr.app
        (Lean.Expr.const `Option.none [Lean.Level.zero])
        (Lean.Expr.app
          (Lean.Expr.const `BitVec [])
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
              (Lean.Expr.lit (Lean.Literal.natVal 1)))
            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1)))))) MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 113.253819 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 448.293448 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 147.574349 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 84.019950 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 15.151449 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 142.798559 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.955200 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 12.719260 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 26.951310 ms, MSGSTART 
    tactic 'rfl' failed, the left-hand side
      ¬(((AutoStructs.Term.var 0).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) ≥ᵤ
            ((AutoStructs.Term.var 0).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) +
              (AutoStructs.Term.var 1).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) =
          true
    is not definitionally equal to the right-hand side
      (x✝¹ ≥ᵤ x✝¹ + 2#8) = false
    x✝¹ x✝ : BitVec 8
    c✝¹ : BitVec 1
    heq✝¹ : ofBool (x✝ == 0#8) = 1#1
    h✝ : ¬(True ∧ (x✝¹ + 2#8 < x✝¹ ∨ x✝¹ + 2#8 < 2#8))
    c✝ : BitVec 1
    heq✝ : ofBool (x✝ != 0#8) = 0#1
    ⊢ ¬(((AutoStructs.Term.var 0).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) ≥ᵤ
              ((AutoStructs.Term.var 0).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) +
                (AutoStructs.Term.var 1).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) =
            true ↔
        (x✝¹ ≥ᵤ x✝¹ + 2#8) = false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 123.358029 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 399.358298 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 152.053519 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 130.545370 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 24.876050 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 144.082989 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.826450 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.079090 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝² ≥ᵤ x✝¹ + 2#8)).toNat
     b := ↑(ofBool (x✝¹ ≥ᵤ x✝¹ + 2#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 13.385940 ms, MSGSTART 
    Equality (x✝¹ ≥ᵤ x✝¹ + 2#8) = (x✝² ≥ᵤ x✝¹ + 2#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 140.425839 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 485.847958 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 247.533819 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 85.943650 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 15.218610 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 142.753040 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.829899 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 12.515370 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 26.746680 ms, MSGSTART 
    tactic 'rfl' failed, the left-hand side
      ¬(((AutoStructs.Term.var 0).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) ≥ᵤ
            ((AutoStructs.Term.var 0).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) +
              (AutoStructs.Term.var 1).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) =
          true
    is not definitionally equal to the right-hand side
      (x✝¹ ≥ᵤ x✝¹ + 2#8) = false
    x✝² x✝¹ x✝ : BitVec 8
    c✝¹ : BitVec 1
    heq✝¹ : ofBool (x✝ == 0#8) = 1#1
    h✝ : ¬(True ∧ (x✝¹ + 2#8 < x✝¹ ∨ x✝¹ + 2#8 < 2#8))
    c✝ : BitVec 1
    heq✝ : ofBool (x✝ != 0#8) = 0#1
    ⊢ ¬(((AutoStructs.Term.var 0).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) ≥ᵤ
              ((AutoStructs.Term.var 0).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) +
                (AutoStructs.Term.var 1).evalNat fun n => if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) =
            true ↔
        (x✝¹ ≥ᵤ x✝¹ + 2#8) = false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 123.024360 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 402.070568 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 148.194230 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 84.884650 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 15.113789 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 141.796100 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.939370 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 12.068580 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 27.565620 ms, MSGSTART 
    tactic 'rfl' failed, the left-hand side
      ¬(((AutoStructs.Term.var 2).evalNat fun n =>
              if n = 2 then x✝² else if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) ≥ᵤ
            ((AutoStructs.Term.var 0).evalNat fun n =>
                if n = 2 then x✝² else if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) +
              (AutoStructs.Term.var 1).evalNat fun n =>
                if n = 2 then x✝² else if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) =
          true
    is not definitionally equal to the right-hand side
      (x✝² ≥ᵤ x✝¹ + 2#8) = false
    x✝² x✝¹ x✝ : BitVec 8
    c✝¹ : BitVec 1
    heq✝¹ : ofBool (x✝ == 0#8) = 0#1
    h✝ : ¬(True ∧ (x✝¹ + 2#8 < x✝¹ ∨ x✝¹ + 2#8 < 2#8))
    c✝ : BitVec 1
    heq✝ : ofBool (x✝ != 0#8) = 0#1
    ⊢ ¬(((AutoStructs.Term.var 2).evalNat fun n =>
                if n = 2 then x✝² else if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) ≥ᵤ
              ((AutoStructs.Term.var 0).evalNat fun n =>
                  if n = 2 then x✝² else if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) +
                (AutoStructs.Term.var 1).evalNat fun n =>
                  if n = 2 then x✝² else if n = 1 then 2#8 else if n = 0 then x✝¹ else BitVec.zero 8) =
            true ↔
        (x✝² ≥ᵤ x✝¹ + 2#8) = false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 122.438519 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 446.928308 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 93.798940 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 16.559470 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.921210 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 144.166660 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.787550 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.925520 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 36.111489 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom (AutoStructs.Relation.unsigned AutoStructs.RelationOrdering.le)
            (AutoStructs.Term.var 0) ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 1))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 31.324090 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 280.871839 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 92.624970 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 16.484970 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.005780 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 143.684279 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.636640 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.760070 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 34.578360 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom (AutoStructs.Relation.unsigned AutoStructs.RelationOrdering.le)
            (AutoStructs.Term.var 0) ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 1))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 31.175350 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 285.246858 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 153.074179 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 17.021870 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.988010 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 123.120430 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 26.638690 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.728830 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 29.680799 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.zero (AutoStructs.Term.var 0)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 91.739380 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 353.712019 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 154.756440 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 17.400720 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.956030 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 124.730209 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 27.149370 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.886120 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 30.996980 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.zero (AutoStructs.Term.var 0)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 93.464869 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 356.969399 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 0.639520 ms, MSGSTART 
    applyExtTheorem only applies to equations, not
      some (ofBool (0#8 != x✝)) ⊑ none MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 7.804670 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 4.604490 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 119.349219 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 30.298870 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.707410 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 12.931090 ms, MSGSTART 
    Unsupported syntax some (ofBool (0#8 != x✝)) ⊑ none === Lean.Expr.app
      (Lean.Expr.app
        (Lean.Expr.app
          (Lean.Expr.const `BitVec.Refinement [Lean.Level.zero])
          (Lean.Expr.app
            (Lean.Expr.const `BitVec [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                (Lean.Expr.lit (Lean.Literal.natVal 1)))
              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1))))))
        (Lean.Expr.app
          (Lean.Expr.app
            (Lean.Expr.const `Option.some [Lean.Level.zero])
            (Lean.Expr.app
              (Lean.Expr.const `BitVec [])
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                  (Lean.Expr.lit (Lean.Literal.natVal 1)))
                (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1))))))
          (Lean.Expr.app
            (Lean.Expr.const `BitVec.ofBool [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.const `bne [Lean.Level.zero])
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.const `instBEqOfDecidableEq [Lean.Level.zero])
                      (Lean.Expr.app
                        (Lean.Expr.const `BitVec [])
                        (Lean.Expr.app
                          (Lean.Expr.app
                            (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                            (Lean.Expr.lit (Lean.Literal.natVal 8)))
                          (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                    (Lean.Expr.app
                      (Lean.Expr.const `instDecidableEqBitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.ofNat [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 0)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 0))))))
              (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 804421))))))
      (Lean.Expr.app
        (Lean.Expr.const `Option.none [Lean.Level.zero])
        (Lean.Expr.app
          (Lean.Expr.const `BitVec [])
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
              (Lean.Expr.lit (Lean.Literal.natVal 1)))
            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1)))))) MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 101.198819 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 425.296669 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 134.876420 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 21.750210 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.141100 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 118.939459 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 34.063750 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.756190 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 31.688300 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.zero (AutoStructs.Term.var 0)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 109.702629 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 386.747739 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 143.845139 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 25.108180 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 9.765140 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 120.099249 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 50.596700 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.875080 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝¹ != x✝)).toNat
     b := ↑(ofBool (0#8 != x✝)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 13.494780 ms, MSGSTART 
    Equality (0#8 != x✝) = (x✝¹ != x✝) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 213.176459 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 373.842849 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 188.425820 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 22.199809 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.437120 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 119.725320 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 31.540880 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.464020 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 30.379220 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.zero (AutoStructs.Term.var 0)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 109.507809 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 415.476988 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 137.093549 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 21.407840 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.368180 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 71.577040 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 31.862090 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.954550 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 32.240830 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0) (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 260.339739 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 133.932479 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 220.668309 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 17.693850 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.323130 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 121.912720 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 27.638390 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.246330 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 35.822169 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.unop AutoStructs.Unop.neg
            (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.zero (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 93.403540 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 276.543709 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 134.922629 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 17.221010 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.714350 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 118.352370 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 39.080310 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.223750 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝¹ == 0#8)).toNat
     b := ↑(ofBool (x✝¹ == x✝)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 40.492669 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.binop AutoStructs.Binop.equiv
            (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0) (AutoStructs.Term.var 1))
            (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0) AutoStructs.Term.zero)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 103.525970 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 314.312389 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 169.936909 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 16.864530 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.238320 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 118.141710 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 26.883350 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.168820 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 35.393339 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.unop AutoStructs.Unop.neg
            (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.zero (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 93.077560 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 324.225119 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 149.512819 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 11.579980 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.036440 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 121.477570 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.355480 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 7.099270 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 30.554700 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom (AutoStructs.Relation.unsigned AutoStructs.RelationOrdering.lt)
            (AutoStructs.Term.var 0) (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 17.453689 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 276.388398 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 148.826410 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 12.103240 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.114720 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 122.866539 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.347120 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 7.183150 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 30.751100 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom (AutoStructs.Relation.unsigned AutoStructs.RelationOrdering.lt)
            (AutoStructs.Term.var 0) (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 17.498200 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 272.230809 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 37.624820 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 12.635190 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.415900 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 143.929060 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 29.177639 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.392130 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(1#1 ^^^ 1#1).toNat
     b := ↑(ofBool (2#8 &&& 2#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.399580 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.177170 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 10.010380 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 71.711110 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 13.940360 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.983160 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 136.447209 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 29.360570 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.369400 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(1#1 ^^^ 0#1).toNat
     b := ↑(ofBool (2#8 &&& 1#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.038760 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.263300 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.800980 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 72.615970 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 14.365920 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.084030 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 137.460509 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 29.551840 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.452740 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(0#1 ^^^ 1#1).toNat
     b := ↑(ofBool (1#8 &&& 2#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.257520 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.344120 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.852170 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 36.459250 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 12.108839 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.223470 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 133.055120 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 29.248170 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.350750 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(0#1 ^^^ 0#1).toNat
     b := ↑(ofBool (1#8 &&& 1#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.692370 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.229190 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.974760 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.990509 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 9.916580 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.889130 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.813860 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 27.725830 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.172810 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.319660 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 3.981910 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.761139 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.295990 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 10.996320 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.880420 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 130.540780 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.056670 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.215760 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.717020 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.787010 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.636759 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.280959 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 11.021210 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.868420 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 130.892680 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 27.954230 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.252040 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.388040 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.706989 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.700480 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.743560 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 10.428050 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.195580 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 127.392510 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.158990 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.288010 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 17.059969 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.032280 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.864530 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 70.793200 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 10.049100 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.366530 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.097699 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 27.727800 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.340310 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.148500 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 3.327690 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.061920 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 69.852000 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 11.475080 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.734050 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 131.936959 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 27.916050 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.389050 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.446890 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 3.483030 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.547400 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 70.176169 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 11.363520 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.705019 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 132.395310 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 27.860780 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.390040 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.518510 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 3.534930 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.610130 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.718019 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 9.954180 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.869850 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.956170 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 27.639940 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.208500 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.653030 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 3.950530 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.733800 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 37.573240 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 12.438910 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.243100 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 135.047879 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.966410 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.301550 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(1#1 ^^^ 1#1).toNat
     b := ↑(ofBool (12#8 &&& 12#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.732230 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.257710 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 10.029720 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 71.178400 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 14.360520 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.119250 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 137.028279 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 29.143880 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.397770 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(0#1 ^^^ 1#1).toNat
     b := ↑(ofBool (12#8 &&& 0#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.563470 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.897760 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.995020 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 71.174750 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 13.791440 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.126359 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 136.666030 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 29.007120 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.321350 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(0#1 ^^^ 1#1).toNat
     b := ↑(ofBool (0#8 &&& 12#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.253420 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.831370 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 10.027290 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 71.539569 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 13.049040 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.830890 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 132.911680 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.870550 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.351829 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(0#1 ^^^ 1#1).toNat
     b := ↑(ofBool (0#8 &&& 0#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.538260 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.658390 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.681130 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 72.257070 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 12.979550 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.009650 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 139.034799 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 34.218890 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.472860 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(1#1 ^^^ 1#1 ^^^ 1#1).toNat
     b := ↑(ofBool (2#8 &&& 2#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.234800 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.928620 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.845830 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 37.012320 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 14.607040 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.657820 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 138.899499 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 35.224680 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.605450 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(1#1 ^^^ 0#1 ^^^ 1#1).toNat
     b := ↑(ofBool (2#8 &&& 1#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 17.457510 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 6.176480 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 10.830860 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 37.965569 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 15.047140 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.614960 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 137.414740 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 34.252410 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.540680 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(0#1 ^^^ 1#1 ^^^ 1#1).toNat
     b := ↑(ofBool (1#8 &&& 2#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 17.127150 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 6.030840 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 10.648659 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 71.277779 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 13.805130 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.051280 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 132.010490 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 33.876749 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.365380 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(0#1 ^^^ 0#1 ^^^ 1#1).toNat
     b := ↑(ofBool (1#8 &&& 1#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.011950 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.806630 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.953290 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 70.248180 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 10.115600 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.180620 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 135.640919 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.863890 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.432080 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.037000 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.357050 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 7.902940 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 68.955560 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 11.195440 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.094150 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 135.094049 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.653920 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.346590 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.607820 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.022230 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 7.996240 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 69.283349 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 11.452330 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.101270 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 134.932820 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.773150 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.444369 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.824080 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.195740 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 7.941950 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 68.994210 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 10.319500 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.127110 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 131.440389 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.709670 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.422210 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.799670 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.399820 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 7.950060 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 37.165890 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 12.496520 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.784310 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 131.892279 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 33.463480 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.305440 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(1#1 ^^^ 1#1).toNat
     b := ↑(ofBool (0#8 &&& 0#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.933490 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.134420 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.447960 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 36.663200 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 13.177570 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.989830 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 135.574749 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 33.665800 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.318700 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(1#1 ^^^ 1#1).toNat
     b := ↑(ofBool (0#8 &&& 12#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.460880 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.314780 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.954540 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 36.919799 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 13.220949 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 7.039190 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 136.421400 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 34.312180 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.359600 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(1#1 ^^^ 1#1).toNat
     b := ↑(ofBool (12#8 &&& 0#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.801640 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 5.429910 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 10.007800 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 71.314460 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 12.996880 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.614360 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 138.152659 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 34.372890 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.490370 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(0#1 ^^^ 1#1).toNat
     b := ↑(ofBool (12#8 &&& 12#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.489010 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 6.029910 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.688130 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 70.149320 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 10.163340 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.174440 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 131.938739 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.648450 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.401990 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.834630 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.439730 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.037570 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.165230 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 10.549690 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.680220 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 125.787029 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.202490 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.146210 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.997180 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.109830 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.740810 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.569840 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 10.882209 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.649201 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 127.348729 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.949810 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.262120 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.475190 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.083900 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.473050 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 35.089680 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 9.753059 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.359600 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 122.089860 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 32.150020 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.216750 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.029870 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 3.819220 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.443710 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 117.315600 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 12.456639 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.100390 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 63.421080 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 41.659900 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 2.298640 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ == x✝¹)).toNat
     b := ↑(ofBool (x✝¹ == x✝)).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 37.789270 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 89.201969 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 73.813640 ms, 
TACEND
