⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [886/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 41.344250 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 89.105550 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 75.377840 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 204.221899 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 18.683440 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 6.720440 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 75.761640 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 6.029980 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 282.746729 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 168.494589 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 32.193370 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 40.145970 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 260.298789 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 25.334350 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 214.328349 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 105.405140 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 129.577729 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 899.313657 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gsubhofhnegatible_proof.lean:20:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 131.560480 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 116.356119 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 69.121771 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 250.563300 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 23.221740 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 103.415500 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 92.889219 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 84.991250 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 314.799059 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 119.746460 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 296.970529 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 128.512700 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 139.285519 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 17.267460 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 60.502610 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 60.075890 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 72.969459 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 187.478359 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 36.555430 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 20.111270 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 10.304140 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 224.087399 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 28.398560 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 17.762880 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ a ≤ 1
    where
     a := ↑(2#32 &&& 0#32 - 2#32).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 29.611210 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 26.343330 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 13.006530 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 23.557480 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 13.268070 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 6.510840 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 138.797419 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.169960 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.223331 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ a ≤ 1
    where
     a := ↑(4294967294#32 &&& 0#32 - 4294967294#32).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 16.352719 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 15.756950 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.445370 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 37.529850 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 11.133660 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.569970 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 134.580910 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.013890 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 55.734230 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 17.224139 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.859330 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.870380 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 30.394230 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 11.115520 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.618760 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.536020 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.182680 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 55.928869 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.712110 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.575760 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 9.013890 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 0.628130 ms, MSGSTART 
    applyExtTheorem only applies to equations, not
      some (x✝ - 1#8 <<< x✝¹) ⊑ none MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 8.073910 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 8.532430 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 123.024340 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.461360 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.050390 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 254
      0 ≤ b ≤ 255
      0 ≤ a ≤ 255
      a - b ≥ 1
    where
     a := ↑(↑8).toNat
     b := ↑x✝¹.toNat
     c := ↑(((-1#8) <<< x✝¹).sshiftRight' x✝¹).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 17.189550 ms, MSGSTART 
    Unsupported syntax some (x✝ - 1#8 <<< x✝¹.toNat) ⊑ none === Lean.Expr.app
      (Lean.Expr.app
        (Lean.Expr.app
          (Lean.Expr.const `BitVec.Refinement [Lean.Level.zero])
          (Lean.Expr.app
            (Lean.Expr.const `BitVec [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                (Lean.Expr.lit (Lean.Literal.natVal 8)))
              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
        (Lean.Expr.app
          (Lean.Expr.app
            (Lean.Expr.const `Option.some [Lean.Level.zero])
            (Lean.Expr.app
              (Lean.Expr.const `BitVec [])
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                  (Lean.Expr.lit (Lean.Literal.natVal 8)))
                (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.const `HSub.hSub [Lean.Level.zero, Lean.Level.zero, Lean.Level.zero])
                      (Lean.Expr.app
                        (Lean.Expr.const `BitVec [])
                        (Lean.Expr.app
                          (Lean.Expr.app
                            (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                            (Lean.Expr.lit (Lean.Literal.natVal 8)))
                          (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.const `instHSub [Lean.Level.zero])
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.instSub [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))))
              (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 178872)))
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.const `HShiftLeft.hShiftLeft [Lean.Level.zero, Lean.Level.zero, Lean.Level.zero])
                        (Lean.Expr.app
                          (Lean.Expr.const `BitVec [])
                          (Lean.Expr.app
                            (Lean.Expr.app
                              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                              (Lean.Expr.lit (Lean.Literal.natVal 8)))
                            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                      (Lean.Expr.const `Nat []))
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.instHShiftLeftNat [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.ofNat [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 1)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1))))))
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.const `BitVec.toNat [])
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 8)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 178870)))))))
      (Lean.Expr.app
        (Lean.Expr.const `Option.none [Lean.Level.zero])
        (Lean.Expr.app
          (Lean.Expr.const `BitVec [])
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
              (Lean.Expr.lit (Lean.Literal.natVal 8)))
            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))) MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 88.551109 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 382.065119 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 131.301119 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 26.041520 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 40.250670 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 257.813810 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 26.386560 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 37.689480 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      h ≥ 0
      0 ≤ h - 256*i ≤ 255
      0 ≤ e ≤ 255
      -256 ≤ e - 256*g - h + 256*i ≤ -1
      c ≥ 0
      0 ≤ c - 256*d ≤ 255
      c - 256*d - 256*f + 256*g + h - 256*i ≥ 257
      0 ≤ c - 256*d + e - 256*f ≤ 255
      0 ≤ b ≤ 255
      0 ≤ a ≤ 255
      a - b ≥ 1
    where
     a := ↑(↑8).toNat
     b := ↑x✝¹.toNat
     c := ↑((2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8) * ↑(2 ^ x✝¹.toNat)
     d := ↑((2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8 * 2 ^ x✝¹.toNat) / 256
     e := ↑x✝.toNat
     f := ↑((2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8 * 2 ^ x✝¹.toNat % 2 ^ 8 + x✝.toNat) / 256
     g := ↑(x✝.toNat + (2 ^ 8 - 1 % 2 ^ 8 * 2 ^ x✝¹.toNat % 2 ^ 8)) / 256
     h := ↑2 ^ x✝¹.toNat
     i := ↑(1 % 2 ^ 8 * 2 ^ x✝¹.toNat) / 256 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 105.995860 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 125.094289 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 829.305796 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gsubhofhnegatible_proof.lean:51:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 33.100650 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 15.320790 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 13.131140 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 144.211369 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.664730 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 90.188720 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 23.151399 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 97.376550 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 16.728320 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 43.048070 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 444.265718 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 131.471740 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 144.709799 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 18.361260 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 76.637360 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 66.046060 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 85.497469 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 182.957829 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 100.122440 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 867.498016 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 418.060179 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 143.706369 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.154210 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 71.666990 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 90.769819 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).sub (AutoStructs.Term.var 2)))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 3))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 83.413030 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 286.452849 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 122.175869 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 562.563668 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 289.420329 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 173.067709 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.396680 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 103.786060 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 109.521869 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).sub (AutoStructs.Term.var 2)))
            (((AutoStructs.Term.var 2).add (AutoStructs.Term.var 3)).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 94.510690 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 3924.759863 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 53.596320 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 503.505958 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 152.470209 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 139.323500 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.968150 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 73.600379 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 70.035710 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 83.242920 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 133.563119 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 99.914010 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 882.807876 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 446.226638 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 144.799650 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.926890 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 68.436479 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 81.193000 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).add (AutoStructs.Term.var 2)))
            ((AutoStructs.Term.var 3).sub (AutoStructs.Term.var 1))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 233.722929 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 207.517649 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 118.520779 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 18.455560 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 23.695440 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 176.460219 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.382570 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 130.489100 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 61.832689 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 102.462100 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 679.103757 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gsubhofhnegatible_proof.lean:116:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 98.657920 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 20.118169 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 18.738270 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 141.901260 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.134160 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.346460 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 15
      1 ≤ 16*c + d ≤ 16
      0 ≤ a ≤ 15
      -1 ≤ a - 16*b ≤ 14
      a - 16*b + 16*c + d ≥ 16
    where
     a := ↑(x✝ ^^^ 10#4).toNat
     b := ↑((x✝ ^^^ 10#4).toNat + 1 % 2 ^ 4) / 16
     c := ↑(0 % 2 ^ 4 + (2 ^ 4 - (x✝ ^^^ 5#4).toNat)) / 16
     d := ↑(x✝ ^^^ 5#4).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 53.264929 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 1)).neg
            (((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 2)).add AutoStructs.Term.one)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 77.012330 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 537.495828 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 113.288720 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.939259 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 27.927930 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 142.161960 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.538910 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 17.015920 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      f ≥ 0
      0 ≤ f - 16*g ≤ 15
      1 ≤ 16*e + f - 16*g ≤ 16
      c ≥ 0
      0 ≤ c - 16*d ≤ 15
      c - 16*d + 16*e + f - 16*g ≥ 17
      0 ≤ b ≤ 15
      0 ≤ a ≤ 15
      a - b ≥ 1
    where
     a := ↑(↑4).toNat
     b := ↑x✝¹.toNat
     c := ↑(((x✝ ^^^ 10#4).toNat + 1 % 2 ^ 4) % 2 ^ 4) * ↑(2 ^ x✝¹.toNat)
     d := ↑(((x✝ ^^^ 10#4).toNat + 1 % 2 ^ 4) % 2 ^ 4 * 2 ^ x✝¹.toNat) / 16
     e := ↑(0 % 2 ^ 4 + (2 ^ 4 - (x✝ ^^^ 5#4).toNat * 2 ^ x✝¹.toNat % 2 ^ 4)) / 16
     f := ↑(x✝ ^^^ 5#4).toNat * ↑(2 ^ x✝¹.toNat)
     g := ↑((x✝ ^^^ 5#4).toNat * 2 ^ x✝¹.toNat) / 16 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 60.899399 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0).neg
            ((AutoStructs.Term.var 1).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 88.136960 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 587.660928 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gsubhofhnegatible_proof.lean:136:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 0.560650 ms, MSGSTART 
    applyExtTheorem only applies to equations, not
      some (x✝ - x✝¹.sdiv 42#8) ⊑ none MSGEND
  TACBENCH bv_ac PASS, TIME_ELAPSED 7.421360 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.279920 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 105.852969 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 10.879850 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.864300 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 13.484090 ms, MSGSTART 
    Unsupported syntax some (x✝ - x✝¹.sdiv 42#8) ⊑ none === Lean.Expr.app
      (Lean.Expr.app
        (Lean.Expr.app
          (Lean.Expr.const `BitVec.Refinement [Lean.Level.zero])
          (Lean.Expr.app
            (Lean.Expr.const `BitVec [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                (Lean.Expr.lit (Lean.Literal.natVal 8)))
              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
        (Lean.Expr.app
          (Lean.Expr.app
            (Lean.Expr.const `Option.some [Lean.Level.zero])
            (Lean.Expr.app
              (Lean.Expr.const `BitVec [])
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                  (Lean.Expr.lit (Lean.Literal.natVal 8)))
                (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.const `HSub.hSub [Lean.Level.zero, Lean.Level.zero, Lean.Level.zero])
                      (Lean.Expr.app
                        (Lean.Expr.const `BitVec [])
                        (Lean.Expr.app
                          (Lean.Expr.app
                            (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                            (Lean.Expr.lit (Lean.Literal.natVal 8)))
                          (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.const `instHSub [Lean.Level.zero])
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.instSub [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))))
              (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 1547511)))
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.const `BitVec.sdiv [])
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 8)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 1547510)))
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.const `BitVec.ofNat [])
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 8)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                    (Lean.Expr.lit (Lean.Literal.natVal 42)))
                  (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 42)))))))))
      (Lean.Expr.app
        (Lean.Expr.const `Option.none [Lean.Level.zero])
        (Lean.Expr.app
          (Lean.Expr.const `BitVec [])
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
              (Lean.Expr.lit (Lean.Literal.natVal 8)))
            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))) MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 14.274250 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 119.079169 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 141.944979 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 23.641370 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 20.261440 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 123.936960 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.883660 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 31.723670 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 256
      0 ≤ b ≤ 255
      -256 ≤ b - 256*d - e ≤ -1
      a ≥ 0
      a - 256*c + 256*d + e ≥ 257
      0 ≤ a + b - 256*c ≤ 255
    where
     a := ↑(match Decidable.decide (2 ^ (8 - 1) ≤ x✝¹.toNat), Decidable.decide (2 ^ (8 - 1) ≤ 214 % 2 ^ 8) with
      | false, false => (x✝¹.udiv 214#8).toNat
      | false, true => (2 ^ 8 - (x✝¹.udiv (-214#8)).toNat) % 2 ^ 8
      | true, false => (2 ^ 8 - ((-x✝¹).udiv 214#8).toNat) % 2 ^ 8
      | true, true => ((-x✝¹).udiv (-214#8)).toNat)
     b := ↑x✝.toNat
     c := ↑((match Decidable.decide (2 ^ (8 - 1) ≤ x✝¹.toNat), Decidable.decide (2 ^ (8 - 1) ≤ 214 % 2 ^ 8) with
          | false, false => (x✝¹.udiv 214#8).toNat
          | false, true => (2 ^ 8 - (x✝¹.udiv (-214#8)).toNat) % 2 ^ 8
          | true, false => (2 ^ 8 - ((-x✝¹).udiv 214#8).toNat) % 2 ^ 8
          | true, true => ((-x✝¹).udiv (-214#8)).toNat) +
          x✝.toNat) /
      256
     d := ↑(x✝.toNat +
          (2 ^ 8 -
            match Decidable.decide (2 ^ (8 - 1) ≤ x✝¹.toNat), Decidable.decide (2 ^ (8 - 1) ≤ 42 % 2 ^ 8) with
            | false, false => (x✝¹.udiv 42#8).toNat
            | false, true => (2 ^ 8 - (x✝¹.udiv (-42#8)).toNat) % 2 ^ 8
            | true, false => (2 ^ 8 - ((-x✝¹).udiv 42#8).toNat) % 2 ^ 8
            | true, true => ((-x✝¹).udiv (-42#8)).toNat)) /
      256
     e := ↑(match Decidable.decide (2 ^ (8 - 1) ≤ x✝¹.toNat), Decidable.decide (2 ^ (8 - 1) ≤ 42 % 2 ^ 8) with
      | false, false => (x✝¹.udiv 42#8).toNat
      | false, true => (2 ^ 8 - (x✝¹.udiv (-42#8)).toNat) % 2 ^ 8
      | true, false => (2 ^ 8 - ((-x✝¹).udiv 42#8).toNat) % 2 ^ 8
      | true, true => ((-x✝¹).udiv (-42#8)).toNat) MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 56.434129 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 141.994360 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 813.504896 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 211.504829 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 17.612440 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 22.614239 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 127.598180 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.558260 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.839760 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ c ≤ 255
      -256 ≤ c - 256*e - f ≤ -1
      0 ≤ b ≤ 255
      b - 256*d + 256*e + f ≥ 257
      0 ≤ b + c - 256*d ≤ 255
      8 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(x✝¹ >>> 7#8).toNat
     c := ↑x✝.toNat
     d := ↑((x✝¹ >>> 7#8).toNat + x✝.toNat) / 256
     e := ↑(x✝.toNat + (2 ^ 8 - (x✝¹.sshiftRight' 7#8).toNat)) / 256
     f := ↑(x✝¹.sshiftRight' 7#8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 56.885520 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 84.822879 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 551.363048 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 262.675219 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 23.347210 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 27.550470 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.574719 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.327730 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.628670 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ c ≤ 255
      -256 ≤ c - 256*e - f ≤ -1
      0 ≤ b ≤ 255
      b - 256*d + 256*e + f ≥ 257
      0 ≤ b + c - 256*d ≤ 255
      8 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(x✝¹.sshiftRight' 7#8).toNat
     c := ↑x✝.toNat
     d := ↑((x✝¹.sshiftRight' 7#8).toNat + x✝.toNat) / 256
     e := ↑(x✝.toNat + (2 ^ 8 - (x✝¹ >>> 7#8).toNat)) / 256
     f := ↑(x✝¹ >>> 7#8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 55.247200 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 232.760809 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 699.353017 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 101.827630 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 14.548450 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 17.407450 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 105.117669 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.429150 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.843360 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ b ≤ 1
      0 ≤ b - 256*c ≤ 255
      b - 256*c - 256*d + 256*e + f ≥ 257
      0 ≤ a ≤ 255
      -256 ≤ a - 256*e - f ≤ -1
      0 ≤ a + b - 256*c - 256*d ≤ 255
    where
     a := ↑x✝.toNat
     b := ↑x✝¹.toNat
     c := ↑x✝¹.toNat / 256
     d := ↑(x✝.toNat + x✝¹.toNat % 2 ^ 8) / 256
     e := ↑(x✝.toNat + (2 ^ 8 - (signExtend 8 x✝¹).toNat)) / 256
     f := ↑(signExtend 8 x✝¹).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 49.403330 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 79.485040 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 495.015478 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 201.223720 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 20.062510 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 22.568029 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 104.720530 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.397400 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.883600 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 1
      0 ≤ e - 256*f ≤ 255
      0 ≤ b ≤ 255
      b - 256*c + 256*d + e - 256*f ≥ 257
      0 ≤ a ≤ 255
      -256 ≤ a - 256*d - e + 256*f ≤ -1
      0 ≤ a + b - 256*c ≤ 255
    where
     a := ↑x✝.toNat
     b := ↑(signExtend 8 x✝¹).toNat
     c := ↑(x✝.toNat + (signExtend 8 x✝¹).toNat) / 256
     d := ↑(x✝.toNat + (2 ^ 8 - x✝¹.toNat % 2 ^ 8)) / 256
     e := ↑x✝¹.toNat
     f := ↑x✝¹.toNat / 256 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 50.001540 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 78.875689 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 499.064378 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 216.520809 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 24.160300 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 32.152909 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 173.829910 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.905190 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 12.374410 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ c ≤ 255
      c - 256*d + 256*e + f ≥ 257
      0 ≤ b ≤ 255
      -256 ≤ b - 256*e - f ≤ -1
      0 ≤ b + c - 256*d ≤ 255
      2 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑x✝.toNat
     c := ↑(x✝¹ <<< 1#8 ^^^ -1#8).toNat
     d := ↑(x✝.toNat + (x✝¹ <<< 1#8 ^^^ -1#8).toNat) / 256
     e := ↑(x✝.toNat + (2 ^ 8 - (x✝¹ <<< 1#8 ||| 1#8).toNat)) / 256
     f := ↑(x✝¹ <<< 1#8 ||| 1#8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 62.862879 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).or AutoStructs.Term.one))
            ((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).xor (AutoStructs.Term.var 2)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 89.829180 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 604.745427 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 111.881130 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.335600 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 24.085100 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 164.200159 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.908270 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.681040 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 255
      0 ≤ b ≤ 255
      b - 256*c + 256*d + e ≥ 257
      0 ≤ a ≤ 255
      -256 ≤ a - 256*d - e ≤ -1
      0 ≤ a + b - 256*c ≤ 255
    where
     a := ↑x✝.toNat
     b := ↑(x✝¹ ^^^ -1#8).toNat
     c := ↑(x✝.toNat + (x✝¹ ^^^ -1#8).toNat) / 256
     d := ↑(x✝.toNat + (2 ^ 8 - (x✝¹ ||| 1#8).toNat)) / 256
     e := ↑(x✝¹ ||| 1#8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 57.818290 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).or AutoStructs.Term.one))
            ((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).xor (AutoStructs.Term.var 2)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 93.581439 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 583.034858 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 52.338140 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 496.651608 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 143.030939 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 140.483089 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.244010 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 71.516070 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 68.660560 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 183.442329 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 130.724300 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 104.383410 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 1701.527263 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 447.200648 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 147.447899 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.196210 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 17.235660 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      d ≥ 0
      0 ≤ d - 256*e ≤ 255
      1 ≤ 256*c + d - 256*e ≤ 256
      a ≥ 0
      0 ≤ a - 256*b ≤ 255
      a - 256*b + 256*c + d - 256*e ≥ 257
    where
     a := ↑((235 % 2 ^ 8 + (2 ^ 8 - x✝.toNat)) % 2 ^ 8) * ↑x✝¹.toNat
     b := ↑((235 % 2 ^ 8 + (2 ^ 8 - x✝.toNat)) % 2 ^ 8 * x✝¹.toNat) / 256
     c := ↑(0 % 2 ^ 8 + (2 ^ 8 - (x✝.toNat + 21 % 2 ^ 8) % 2 ^ 8 * x✝¹.toNat % 2 ^ 8)) / 256
     d := ↑((x✝.toNat + 21 % 2 ^ 8) % 2 ^ 8) * ↑x✝¹.toNat
     e := ↑((x✝.toNat + 21 % 2 ^ 8) % 2 ^ 8 * x✝¹.toNat) / 256 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 501.634178 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0).neg (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 794.792267 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 830.038066 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 124.683109 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 12.495680 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 39.168370 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 119.675510 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.285590 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 70.560319 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 62.270740 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 99.862770 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 102.109199 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 109.719630 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 14.692990 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 22.730949 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 127.513530 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.417510 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 60.484150 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 50.649339 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 80.830810 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 111.209110 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 111.087799 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 14.663180 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 23.049170 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 127.314010 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.524870 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 60.721099 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 50.407940 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 80.589660 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 106.601449 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 124.373260 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 12.709790 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 39.132319 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 118.654000 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.508890 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 70.395080 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 61.960349 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 99.483430 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 102.382619 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 132.440919 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 14.600330 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 19.911310 ms, 
  TACBENCH bv_ring PASS, TIME_ELAPSED 101.854300 ms, 
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.453350 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 96.982989 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 70.088350 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 206.993859 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 110.249910 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 131.514270 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 14.201990 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 19.555480 ms, 
  TACBENCH bv_ring PASS, TIME_ELAPSED 100.028399 ms, 
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.687630 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 96.940080 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 69.837850 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 208.037919 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 109.885279 ms, 
TACEND
