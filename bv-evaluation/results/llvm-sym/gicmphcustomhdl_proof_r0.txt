⚠ [880/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [883/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [891/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 153.311700 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 115.895029 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 53.152190 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 195.807869 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 119.948399 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.146960 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      5 ≤ a ≤ 4294967295
    where
     a := ↑(↑32).toNat
     b := ↑(ofBool (x✝ &&& 240#32 != 224#32) &&& ofBool (x✝ &&& 496#32 != 432#32)).toNat
     c := ↑(ofBool (x✝.sshiftRight' 4#32 &&& 15#32 != 14#32) &&&
          ofBool (x✝.sshiftRight' 4#32 &&& 31#32 != 27#32)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 30.252220 ms, MSGSTART 
    Equality (x✝.sshiftRight 4 &&& 15#32 != 14#32 && x✝.sshiftRight 4 &&& 31#32 != 27#32) =
      (x✝ &&& 240#32 != 224#32 && x✝ &&& 496#32 != 432#32) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 143.773039 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 6865.402725 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 155.472010 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 53.697649 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 30.805820 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 159.309680 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 79.548969 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.114510 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      5 ≤ a ≤ 4294967295
    where
     a := ↑(↑32).toNat
     b := ↑(ofBool (x✝ &&& 240#32 != 224#32) &&& ofBool (x✝ &&& 496#32 != 432#32)).toNat
     c := ↑(ofBool (x✝.sshiftRight' 4#32 &&& 31#32 != 27#32)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 23.278780 ms, MSGSTART 
    Equality (x✝.sshiftRight 4 &&& 31#32 != 27#32) =
      (x✝ &&& 240#32 != 224#32 && x✝ &&& 496#32 != 432#32) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 134.975790 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 1301.732464 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 157.213829 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 29.451350 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 20.650390 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 147.062869 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 75.683500 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.515720 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      5 ≤ a ≤ 4294967295
    where
     a := ↑(↑32).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 31.658480 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq AutoStructs.Term.zero (AutoStructs.Term.var 0)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 125.874769 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 326.939779 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 118.883640 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.369010 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 18.585650 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 139.945099 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 43.461590 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.992040 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      6 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (x✝ >ᵤ 31#8)).toNat
     c := ↑(ofBool (x✝ >>> 5#8 &&& 15#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 19.982720 ms, MSGSTART 
    Equality (x✝ >>> 5 &&& 15#8 != 0#8) = (x✝ >ᵤ 31#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 93.956169 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 429.202699 ms, 
TACEND
