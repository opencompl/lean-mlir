⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [887/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 169.590329 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 34.674220 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 26.242730 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 224.796700 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 23.943480 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 16.300799 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 255
      0 ≤ a ≤ 255
      a - b ≥ 1
    where
     a := ↑(x✝ / 42#8 ^^^ 0#8 - x✝).toNat
     b := ↑(0#8 - x✝ ^^^ x✝ / 42#8).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 71.545840 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 98.658190 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 360.978069 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 213.769949 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac PASS, TIME_ELAPSED 34.681450 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 249.708529 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 381.823668 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 27.949540 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 28.781200 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      c ≥ 0
      0 ≤ c - 256*d ≤ 255
      a ≥ 0
      0 ≤ a - 256*b ≤ 255
      a - 256*b - c + 256*d ≥ 1
    where
     a := ↑(x✝.toNat / (42 % 2 ^ 8)) * ↑(x✝ ^^^ -1#8).toNat
     b := ↑(x✝.toNat / (42 % 2 ^ 8) * (x✝ ^^^ -1#8).toNat) / 256
     c := ↑(-1#8 ^^^ x✝).toNat * ↑(x✝.toNat / (42 % 2 ^ 8))
     d := ↑((-1#8 ^^^ x✝).toNat * (x✝.toNat / (42 % 2 ^ 8))) / 256 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 245.289709 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0) (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 132.480089 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 527.642210 ms, 
TACEND
