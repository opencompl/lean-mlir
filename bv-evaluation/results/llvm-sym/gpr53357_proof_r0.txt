⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [887/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 154.094719 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 46.411080 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 88.299699 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 329.942079 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 31.421350 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 16.248360 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 4294967295
      0 ≤ b ≤ 4294967295
      0 ≤ b + c - 4294967296*d ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b - c + 4294967296*d ≥ 1
    where
     a := ↑(x✝ ^^^ x✝¹ ^^^ -1#32).toNat
     b := ↑(x✝ &&& x✝¹).toNat
     c := ↑((x✝ ||| x✝¹) ^^^ -1#32).toNat
     d := ↑((x✝ &&& x✝¹).toNat + ((x✝ ||| x✝¹) ^^^ -1#32).toNat) / 4294967296 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 139.709980 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            (((AutoStructs.Term.var 0).and (AutoStructs.Term.var 1)).add
              (((AutoStructs.Term.var 0).or (AutoStructs.Term.var 1)).xor (AutoStructs.Term.var 2)))
            (((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 1)).xor (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 104.440089 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 944.161978 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 155.206859 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 35.661320 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 64.326211 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 333.552720 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 32.092280 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 16.431740 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 4294967295
      0 ≤ b ≤ 4294967295
      0 ≤ b + c - 4294967296*d ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b - c + 4294967296*d ≥ 1
    where
     a := ↑(x✝ ^^^ x✝¹ ^^^ -1#32).toNat
     b := ↑(x✝ &&& x✝¹).toNat
     c := ↑((x✝¹ ||| x✝) ^^^ -1#32).toNat
     d := ↑((x✝ &&& x✝¹).toNat + ((x✝¹ ||| x✝) ^^^ -1#32).toNat) / 4294967296 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 133.689329 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            (((AutoStructs.Term.var 0).and (AutoStructs.Term.var 1)).add
              (((AutoStructs.Term.var 1).or (AutoStructs.Term.var 0)).xor (AutoStructs.Term.var 2)))
            (((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 1)).xor (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 101.134160 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 836.446747 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 130.833590 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 46.325099 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 84.622161 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 301.771549 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 27.925810 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 14.091330 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 4294967295
      0 ≤ b ≤ 4294967295
      0 ≤ b + c - 4294967296*d ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b - c + 4294967296*d ≥ 1
    where
     a := ↑(x✝ ^^^ x✝¹ ^^^ -1#32).toNat
     b := ↑(x✝ &&& x✝¹).toNat
     c := ↑((x✝¹ ^^^ -1#32) &&& (x✝ ^^^ -1#32)).toNat
     d := ↑((x✝ &&& x✝¹).toNat + ((x✝¹ ^^^ -1#32) &&& (x✝ ^^^ -1#32)).toNat) / 4294967296 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 128.796470 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            (((AutoStructs.Term.var 0).and (AutoStructs.Term.var 1)).add
              (((AutoStructs.Term.var 1).xor (AutoStructs.Term.var 2)).and
                ((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 2))))
            (((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 1)).xor (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 100.085300 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 666.764068 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 175.159949 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 44.483780 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 69.461310 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 187.557359 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 18.044660 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.923410 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 4294967295
      0 ≤ b ≤ 4294967295
      0 ≤ b + c - 4294967296*d ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b - c + 4294967296*d ≥ 1
    where
     a := ↑(x✝ ^^^ x✝¹ ^^^ -1#32).toNat
     b := ↑(x✝ &&& x✝¹).toNat
     c := ↑((x✝¹ ||| x✝) ^^^ -1#32).toNat
     d := ↑((x✝ &&& x✝¹).toNat + ((x✝¹ ||| x✝) ^^^ -1#32).toNat) / 4294967296 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 78.831010 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            (((AutoStructs.Term.var 0).and (AutoStructs.Term.var 1)).add
              (((AutoStructs.Term.var 1).or (AutoStructs.Term.var 0)).xor (AutoStructs.Term.var 2)))
            (((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 1)).xor (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 79.797089 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 637.091707 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 132.308169 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 26.467420 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 52.496690 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 182.031959 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 17.707950 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.760480 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 4294967295
      0 ≤ b ≤ 4294967295
      0 ≤ b + c - 4294967296*d ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b - c + 4294967296*d ≥ 1
    where
     a := ↑(x✝ ^^^ x✝¹ ^^^ -1#32).toNat
     b := ↑((x✝ ||| x✝¹) ^^^ -1#32).toNat
     c := ↑(x✝ &&& x✝¹).toNat
     d := ↑(((x✝ ||| x✝¹) ^^^ -1#32).toNat + (x✝ &&& x✝¹).toNat) / 4294967296 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 75.506480 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((((AutoStructs.Term.var 0).or (AutoStructs.Term.var 1)).xor (AutoStructs.Term.var 2)).add
              ((AutoStructs.Term.var 0).and (AutoStructs.Term.var 1)))
            (((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 1)).xor (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 78.632119 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 730.314847 ms, 
TACEND
