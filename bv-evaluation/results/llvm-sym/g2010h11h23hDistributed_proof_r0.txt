⚠ [880/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [883/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [891/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 1001.385177 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 33.504050 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 32.146460 ms, 
  TACBENCH bv_ring PASS, TIME_ELAPSED 132.462590 ms, 
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 26.210670 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 43.258560 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      f ≥ 0
      0 ≤ f - 4294967296*g ≤ 4294967295
      c ≥ 0
      0 ≤ c - 4294967296*d ≤ 4294967295
      -4294967296 ≤ c - 4294967296*d - 4294967296*e - f + 4294967296*g ≤ -1
      a ≥ 0
      0 ≤ a - 4294967296*b ≤ 4294967295
      a - 4294967296*b - c + 4294967296*d + 4294967296*e + f - 4294967296*g ≥ 4294967297
    where
     a := ↑x✝¹.toNat * ↑x✝.toNat
     b := ↑(x✝¹.toNat * x✝.toNat) / 4294967296
     c := ↑((x✝.toNat + x✝¹.toNat) % 2 ^ 32) * ↑x✝.toNat
     d := ↑((x✝.toNat + x✝¹.toNat) % 2 ^ 32 * x✝.toNat) / 4294967296
     e := ↑((x✝.toNat + x✝¹.toNat) % 2 ^ 32 * x✝.toNat % 2 ^ 32 + (2 ^ 32 - x✝.toNat * x✝.toNat % 2 ^ 32)) / 4294967296
     f := ↑x✝.toNat * ↑x✝.toNat
     g := ↑(x✝.toNat * x✝.toNat) / 4294967296 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 101.365220 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            (AutoStructs.Term.var 2)) =
        true
    is false MSGEND
  TACBENCH bv_decide FAIL, TIME_ELAPSED 11019.691631 ms, MSGSTART 
    The SAT solver timed out while solving the problem.
    Consider increasing the timeout with the `timeout` config option.
    If solving your problem relies inherently on using associativity or commutativity, consider enabling the `acNf` config option. MSGEND
  TACBENCH bv_auto PASS, TIME_ELAPSED 135.800339 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 140.359040 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 31.715980 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 28.656789 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 177.373720 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 48.759529 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.193950 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& (x✝¹ ^^^ -1#64) == 0#64)).toNat
     b := ↑(ofBool (x✝ &&& (x✝ &&& x✝¹ ^^^ -1#64) == 0#64)).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 81.154610 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 114.627540 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 331.205208 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/g2010h11h23hDistributed_proof.lean:30:4: warning: Unknown integer 18446744073709551615
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/g2010h11h23hDistributed_proof.lean:30:4: warning: Unknown integer 18446744073709551615
