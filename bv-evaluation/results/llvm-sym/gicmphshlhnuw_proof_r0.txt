⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [887/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:13:44: error: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:24:45: error: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:35:46: error: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 126.805969 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 449.844618 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 187.324320 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 133.092209 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 29.763760 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.718490 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      9 ≤ a ≤ 18446744073709551615
    where
     a := ↑(↑64).toNat
     b := ↑(ofBool (16#64 >ᵤ x✝)).toNat
     c := ↑(ofBool (4095#64 >ᵤ x✝ <<< 8#64)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 18.328270 ms, MSGSTART 
    Equality (4095#64 >ᵤ x✝ <<< 8) = (16#64 >ᵤ x✝) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 101.595249 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 841.762277 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 148.607349 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 31.743030 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 27.111450 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 150.247819 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 39.179590 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.982910 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1
      0 ≤ c ≤ 1
      c - d ≥ 1
      0 ≤ b ≤ 4294967295
      13 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑(x✝ >>> 12#32 &&& 15#32).toNat
     c := ↑(ofBool (x✝ &&& 61440#32 == 0#32)).toNat
     d := ↑(ofBool (4#32 >ᵤ 2#32 <<< (x✝ >>> 12#32 &&& 15#32))).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 25.190500 ms, MSGSTART 
    Equality (4#32 >ᵤ 2#32 <<< (x✝.toNat >>> 12 &&& 15)) = (x✝ &&& 61440#32 == 0#32) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 141.641749 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 475.125549 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:55:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 278.638939 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.381780 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 11.637580 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.857689 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.703480 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.904920 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1
      0 ≤ c ≤ 1
      c - d ≥ 1
      0 ≤ b ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑x✝.toNat
     c := ↑(ofBool (2#32 >ᵤ x✝)).toNat
     d := ↑(ofBool (64#32 >ᵤ 16#32 <<< x✝)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.242020 ms, MSGSTART 
    Equality (64#32 >ᵤ 16#32 <<< x✝.toNat) = (2#32 >ᵤ x✝) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 154.031160 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 421.495989 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:68:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 129.272699 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.903140 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 12.041610 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 130.151140 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 29.008020 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.988380 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1
      0 ≤ c ≤ 1
      c - d ≥ 1
      0 ≤ b ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑x✝.toNat
     c := ↑(ofBool (2#32 >ᵤ x✝)).toNat
     d := ↑(ofBool (192#32 >ᵤ 48#32 <<< x✝)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.739429 ms, MSGSTART 
    Equality (192#32 >ᵤ 48#32 <<< x✝.toNat) = (2#32 >ᵤ x✝) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 141.728480 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 325.196478 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:79:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 128.645869 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.887860 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 11.846090 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 128.453440 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.822819 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.848350 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1
      0 ≤ c ≤ 1
      c - d ≥ 1
      0 ≤ b ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑x✝.toNat
     c := ↑(ofBool (5#32 >ᵤ x✝)).toNat
     d := ↑(ofBool (60#32 >ᵤ 2#32 <<< x✝)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.223360 ms, MSGSTART 
    Equality (60#32 >ᵤ 2#32 <<< x✝.toNat) = (5#32 >ᵤ x✝) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 189.705610 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 470.818648 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:90:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 231.340919 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 17.211690 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 10.629950 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 128.174349 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.176490 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.909740 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1
      0 ≤ c ≤ 1
      c - d ≥ 1
      0 ≤ b ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑x✝.toNat
     c := ↑(ofBool (x✝ >ᵤ 1#32)).toNat
     d := ↑(ofBool (48#32 <<< x✝ ≥ᵤ 144#32)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.056130 ms, MSGSTART 
    Equality (48#32 <<< x✝.toNat ≥ᵤ 144#32) = (x✝ >ᵤ 1#32) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 145.981529 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 326.720109 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:101:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 130.025060 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.383230 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 11.621910 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 127.467649 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 28.699350 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.880520 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1
      0 ≤ c ≤ 1
      c - d ≥ 1
      0 ≤ b ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑x✝.toNat
     c := ↑(ofBool (2#32 >ᵤ x✝)).toNat
     d := ↑(ofBool (63#32 >ᵤ 16#32 <<< x✝)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 13.614430 ms, MSGSTART 
    Equality (63#32 >ᵤ 16#32 <<< x✝.toNat) = (2#32 >ᵤ x✝) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 292.089619 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 423.603679 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:112:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 70.297990 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 18.076110 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 4.983090 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 124.249290 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.935890 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.135010 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑x✝.toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 14.805060 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 121.729619 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.308050 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 125.077629 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 18.200750 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 9.715540 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 125.853180 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 17.358590 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 9.263489 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑x✝.toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 27.408310 ms, MSGSTART 
    tactic 'rfl' failed, the left-hand side
      ¬(((AutoStructs.Term.var 1).evalNat fun n =>
              if n = 1 then 63#32 else if n = 0 then 127#32 <<< x✝.toNat else BitVec.zero 32) >ᵤ
            (AutoStructs.Term.var 0).evalNat fun n =>
              if n = 1 then 63#32 else if n = 0 then 127#32 <<< x✝.toNat else BitVec.zero 32) =
          true
    is not definitionally equal to the right-hand side
      (63#32 >ᵤ 127#32 <<< x✝.toNat) = false
    x✝ : BitVec 32
    h✝¹ : ¬(True ∧ 127#32 <<< x✝ >>> x✝ ≠ 127#32)
    h✝ : ¬x✝ ≥ ↑32
    ⊢ ¬(((AutoStructs.Term.var 1).evalNat fun n =>
                if n = 1 then 63#32 else if n = 0 then 127#32 <<< x✝.toNat else BitVec.zero 32) >ᵤ
              (AutoStructs.Term.var 0).evalNat fun n =>
                if n = 1 then 63#32 else if n = 0 then 127#32 <<< x✝.toNat else BitVec.zero 32) =
            true ↔
        (63#32 >ᵤ 127#32 <<< x✝.toNat) = false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 132.073990 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 301.876368 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:133:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 125.468939 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 18.710050 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 9.409560 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 121.066690 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 16.796420 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.776530 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 4294967295
      0 ≤ a ≤ 4294967295
      a - b ≥ 1
    where
     a := ↑(↑32).toNat
     b := ↑x✝.toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 25.101490 ms, MSGSTART 
    tactic 'rfl' failed, the left-hand side
      ¬((AutoStructs.Term.one.evalNat fun n => if n = 0 then 1#32 <<< x✝.toNat else BitVec.zero 32) >ᵤ
            (AutoStructs.Term.var 0).evalNat fun n => if n = 0 then 1#32 <<< x✝.toNat else BitVec.zero 32) =
          true
    is not definitionally equal to the right-hand side
      (1#32 >ᵤ 1#32 <<< x✝.toNat) = false
    x✝ : BitVec 32
    h✝¹ : ¬(True ∧ 1#32 <<< x✝ >>> x✝ ≠ 1#32)
    h✝ : ¬x✝ ≥ ↑32
    ⊢ ¬((AutoStructs.Term.one.evalNat fun n => if n = 0 then 1#32 <<< x✝.toNat else BitVec.zero 32) >ᵤ
              (AutoStructs.Term.var 0).evalNat fun n => if n = 0 then 1#32 <<< x✝.toNat else BitVec.zero 32) =
            true ↔
        (1#32 >ᵤ 1#32 <<< x✝.toNat) = false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 126.833419 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 291.519479 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gicmphshlhnuw_proof.lean:143:8: warning: declaration uses 'sorry'
