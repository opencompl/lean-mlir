⚠ [880/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [883/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [891/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 182.149330 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 63.353770 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 44.012900 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 381.303968 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 127.694460 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.157950 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ != 17791#16)).toNat
     b := ↑(ofBool (truncate 8 x✝ != 127#8) ||| ofBool (x✝ &&& 65280#16 != 17664#16)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 36.455240 ms, MSGSTART 
    Equality (setWidth 8 x✝ != 127#8 || x✝ &&& 65280#16 != 17664#16) = (x✝ != 17791#16) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 145.056009 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 735.640828 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 132.636969 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 36.976860 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 26.076020 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 219.724889 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 82.875740 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.227110 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ != 32581#16)).toNat
     b := ↑(ofBool (x✝ &&& 65280#16 != 32512#16) ||| ofBool (truncate 8 x✝ != 69#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 21.494130 ms, MSGSTART 
    Equality (x✝ &&& 65280#16 != 32512#16 || setWidth 8 x✝ != 69#8) = (x✝ != 32581#16) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 107.155699 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 565.662978 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 184.771189 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 67.260810 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 45.056020 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 310.937888 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 86.135580 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.564060 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 4095#16 != 1407#16)).toNat
     b := ↑(ofBool (truncate 8 x✝ != 127#8) ||| ofBool (x✝ &&& 3840#16 != 1280#16)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 24.218810 ms, MSGSTART 
    Equality (setWidth 8 x✝ != 127#8 || x✝ &&& 3840#16 != 1280#16) =
      (x✝ &&& 4095#16 != 1407#16) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 110.539619 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 911.278527 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 134.892019 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 63.178480 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 44.176560 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 293.918279 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 79.816889 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.224050 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 61695#16 != 20607#16)).toNat
     b := ↑(ofBool (truncate 8 x✝ != 127#8) ||| ofBool (x✝ &&& 61440#16 != 20480#16)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 21.292700 ms, MSGSTART 
    Equality (setWidth 8 x✝ != 127#8 || x✝ &&& 61440#16 != 20480#16) =
      (x✝ &&& 61695#16 != 20607#16) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 106.686730 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 568.487747 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 161.451209 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 25.172030 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 20.723260 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 210.433119 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 59.324720 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.624350 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 27.854760 ms, MSGSTART 
    application type mismatch
      if n = 2 then x✝ else if n = 1 then 127#8 else if n = 0 then setWidth 8 x✝ else BitVec.zero 8
    argument
      if n = 1 then 127#8 else if n = 0 then setWidth 8 x✝ else BitVec.zero 8
    has type
      BitVec 8 : Type
    but is expected to have type
      BitVec 16 : Type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 97.210059 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 457.528458 ms, 
TACEND
