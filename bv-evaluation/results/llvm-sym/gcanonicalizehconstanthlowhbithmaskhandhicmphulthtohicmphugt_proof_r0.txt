⚠ [880/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [883/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [891/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 173.823800 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 40.919970 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 24.450931 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 260.685299 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 58.711751 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.109640 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ >ᵤ 3#8)).toNat
     b := ↑(ofBool (x✝ >ᵤ x✝ &&& 3#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 27.048740 ms, MSGSTART 
    Equality (x✝ >ᵤ x✝ &&& 3#8) = (x✝ >ᵤ 3#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 116.832340 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 406.785039 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 152.586420 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 21.852380 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 28.041600 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 297.594529 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 72.861220 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.301820 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1
      0 ≤ c ≤ 1
      c - d ≥ 1
      0 ≤ b ≤ 255
      0 ≤ a ≤ 255
      a - b ≥ 1
    where
     a := ↑(↑8).toNat
     b := ↑x✝.toNat
     c := ↑(ofBool (x✝¹ >ᵤ (-1#8) >>> x✝)).toNat
     d := ↑(ofBool (x✝¹ >ᵤ (-1#8) >>> x✝ &&& x✝¹)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 42.477090 ms, MSGSTART 
    Equality (x✝¹ >ᵤ 255#8 >>> x✝.toNat &&& x✝¹) = (x✝¹ >ᵤ 255#8 >>> x✝.toNat) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 144.687999 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 523.359037 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gcanonicalizehconstanthlowhbithmaskhandhicmphulthtohicmphugt_proof.lean:21:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 126.937040 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 26.623080 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 20.194190 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 152.836529 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 51.811710 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 3.596730 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 251#8 != 0#8)).toNat
     b := ↑(ofBool (x✝ >ᵤ x✝ &&& 4#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 17.954790 ms, MSGSTART 
    Equality (x✝ >ᵤ x✝ &&& 4#8) = (x✝ &&& 251#8 != 0#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 96.060650 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 587.502117 ms, 
TACEND
