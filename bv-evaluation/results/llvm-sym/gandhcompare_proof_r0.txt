⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [887/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 292.512218 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 36.298590 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 30.351761 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 219.272299 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 71.377470 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.521140 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool ((x✝ ^^^ x✝¹) &&& 65280#32 != 0#32)).toNat
     b := ↑(ofBool (x✝ &&& 65280#32 != x✝¹ &&& 65280#32)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 22.355630 ms, MSGSTART 
    Equality (x✝ &&& 65280#32 != x✝¹ &&& 65280#32) = ((x✝ ^^^ x✝¹) &&& 65280#32 != 0#32) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 112.192559 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 529.025227 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gandhcompare_proof.lean:18:4: warning: Unknown integer 65280
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gandhcompare_proof.lean:18:4: warning: Unknown integer 65280
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gandhcompare_proof.lean:18:4: warning: Unknown integer 65280
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 193.359139 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 58.935640 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 42.447350 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 318.437609 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 91.548910 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.164480 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 15#8 == 15#8)).toNat
     b := ↑(ofBool (x✝ + 1#8 &&& 15#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 103.408570 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.binop AutoStructs.Binop.equiv
            (AutoStructs.Formula.atom AutoStructs.Relation.eq
              (((AutoStructs.Term.var 0).add AutoStructs.Term.one).and (AutoStructs.Term.var 1)) AutoStructs.Term.zero)
            (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).and (AutoStructs.Term.var 1))
              (AutoStructs.Term.var 1))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 130.645240 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 759.953327 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 172.846991 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 53.726750 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 43.767489 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 316.705219 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 108.582080 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.491010 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 15#8 != 15#8)).toNat
     b := ↑(ofBool (x✝ + 1#8 &&& 15#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 34.191950 ms, MSGSTART 
    Equality (x✝ + 1#8 &&& 15#8 != 0#8) = (x✝ &&& 15#8 != 15#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 131.384819 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 861.448588 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 169.128589 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 42.512790 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 33.830330 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 275.977379 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 77.388450 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.461430 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 15#8 == 13#8)).toNat
     b := ↑(ofBool (x✝ + 3#8 &&& 15#8 == 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 132.186179 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.binop AutoStructs.Binop.equiv
            (AutoStructs.Formula.atom AutoStructs.Relation.eq
              (((AutoStructs.Term.var 0).add (AutoStructs.Term.var 1)).and (AutoStructs.Term.var 2))
              AutoStructs.Term.zero)
            (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).and (AutoStructs.Term.var 2))
              (AutoStructs.Term.var 3))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 135.847941 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 796.061766 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 175.299870 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 42.624920 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 27.119640 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 294.360559 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 112.503689 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.643559 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 15#8 != 13#8)).toNat
     b := ↑(ofBool (x✝ + 3#8 &&& 15#8 != 0#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 35.173250 ms, MSGSTART 
    Equality (x✝ + 3#8 &&& 15#8 != 0#8) = (x✝ &&& 15#8 != 13#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 108.316450 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 813.949317 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 183.850209 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 56.846489 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 45.043291 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 266.310988 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 87.521570 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 7.078950 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 15#8 == 1#8)).toNat
     b := ↑(ofBool (x✝ + 10#8 &&& 15#8 == 11#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 161.534559 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.binop AutoStructs.Binop.equiv
            (AutoStructs.Formula.atom AutoStructs.Relation.eq
              (((AutoStructs.Term.var 0).add (AutoStructs.Term.var 1)).and (AutoStructs.Term.var 2))
              (AutoStructs.Term.var 3))
            (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).and (AutoStructs.Term.var 2))
              AutoStructs.Term.one)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 126.371909 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 668.611539 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 128.438690 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 44.756049 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 35.848650 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 185.839240 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 61.153400 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 4.307449 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(ofBool (x✝ &&& 15#8 != 1#8)).toNat
     b := ↑(ofBool (x✝ + 10#8 &&& 15#8 != 11#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 18.877610 ms, MSGSTART 
    Equality (x✝ + 10#8 &&& 15#8 != 11#8) = (x✝ &&& 15#8 != 1#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 98.617140 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 567.543248 ms, 
TACEND
