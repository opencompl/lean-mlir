⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [886/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 136.327090 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 31.333860 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 33.650830 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 340.354808 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 28.194900 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 15.356110 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 255
      0 ≤ b ≤ 255
      0 ≤ a ≤ 255
      0 ≤ a + b - 256*c ≤ 255
      a + b - 256*c - d ≥ 1
    where
     a := ↑x✝¹.toNat
     b := ↑(x✝ ^^^ -1#8).toNat
     c := ↑(x✝¹.toNat + (x✝ ^^^ -1#8).toNat) / 256
     d := ↑(x✝ - x✝¹ ^^^ -1#8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 109.576560 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            (((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1)).xor (AutoStructs.Term.var 2))
            ((AutoStructs.Term.var 1).add ((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 2)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 112.494809 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 792.425147 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 144.496780 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 42.023089 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 104.541659 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 322.496090 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 28.776911 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 30.368639 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ b ≤ 255
      b - 256*c + 256*d + 256*e + f ≥ 512
      0 ≤ a ≤ 255
      -511 ≤ a - 256*d - 256*e - f ≤ -256
      -256 ≤ a - 256*d - f ≤ -1
      0 ≤ a + b - 256*c ≤ 255
    where
     a := ↑x✝.toNat
     b := ↑(x✝¹ ^^^ -1#8).toNat
     c := ↑(x✝.toNat + (x✝¹ ^^^ -1#8).toNat) / 256
     d := ↑(x✝.toNat + (2 ^ 8 - x✝¹.toNat)) / 256
     e := ↑((x✝.toNat + (2 ^ 8 - x✝¹.toNat)) % 2 ^ 8 + (2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8) / 256
     f := ↑x✝¹.toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 159.745290 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            (((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1)).add (AutoStructs.Term.var 2))
            ((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).xor (AutoStructs.Term.var 2)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 119.508981 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 1003.362698 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 137.134959 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 37.669960 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 46.161670 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 307.949668 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 27.780851 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 25.182720 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 255
      -1 ≤ e - 256*f ≤ 254
      0 ≤ b ≤ 255
      b - 256*c + 256*d + e - 256*f ≥ 256
      0 ≤ a ≤ 255
      -255 ≤ a - 256*d - e + 256*f ≤ 0
      0 ≤ a + b - 256*c ≤ 255
    where
     a := ↑x✝.toNat
     b := ↑(x✝¹ ^^^ -1#8).toNat
     c := ↑(x✝.toNat + (x✝¹ ^^^ -1#8).toNat) / 256
     d := ↑(x✝.toNat + (2 ^ 8 - (x✝¹.toNat + 1 % 2 ^ 8) % 2 ^ 8)) / 256
     e := ↑x✝¹.toNat
     f := ↑(x✝¹.toNat + 1 % 2 ^ 8) / 256 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 115.555439 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).add AutoStructs.Term.one))
            ((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).xor (AutoStructs.Term.var 2)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 108.594580 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 709.282698 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 209.105029 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 990.250156 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 553.177568 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 304.648580 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 26.614910 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 25.914759 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ b ≤ 255
      b - 256*c + 256*d + 256*e + f ≥ 512
      0 ≤ a ≤ 255
      -255 ≤ a - 256*d ≤ 0
      -511 ≤ a - 256*d - 256*e - f ≤ -256
      0 ≤ a + b - 256*c ≤ 255
    where
     a := ↑x✝.toNat
     b := ↑(x✝¹ ^^^ -1#8).toNat
     c := ↑(x✝.toNat + (x✝¹ ^^^ -1#8).toNat) / 256
     d := ↑(x✝.toNat + (2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8) / 256
     e := ↑((x✝.toNat + (2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8) % 2 ^ 8 + (2 ^ 8 - x✝¹.toNat)) / 256
     f := ↑x✝¹.toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 129.063060 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            (((AutoStructs.Term.var 0).add (AutoStructs.Term.var 1)).sub (AutoStructs.Term.var 2))
            ((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 2).xor (AutoStructs.Term.var 1)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 100.407110 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 2857.447397 ms, 
TACEND
