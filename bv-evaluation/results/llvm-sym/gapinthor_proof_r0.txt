⚠ [880/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [883/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [891/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 171.017299 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 27.885710 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 27.965940 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 225.246829 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 26.466530 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 16.790710 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ a ≤ 8388606
    where
     a := ↑(x✝ ||| -1#23 ^^^ x✝).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 75.548470 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).or ((AutoStructs.Term.var 1).xor (AutoStructs.Term.var 0)))
            (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 84.481460 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 621.202208 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 182.659040 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 33.434910 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 29.994149 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 170.852830 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 19.873510 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.125980 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 549755813887
      0 ≤ b ≤ 549755813887
      0 ≤ a ≤ 549755813887
      0 ≤ a + b - 549755813888*c ≤ 549755813887
      a + b - 549755813888*c - d ≥ 1
    where
     a := ↑x✝.toNat
     b := ↑(x✝¹ &&& 274877906944#39).toNat
     c := ↑(x✝.toNat + (x✝¹ &&& 274877906944#39).toNat) / 549755813888
     d := ↑(x✝ + (x✝¹ &&& 274877906944#39) &&& (274877906943#39 ^^^ -1#39) ||| x✝ &&& 274877906943#39).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 81.826579 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).and (AutoStructs.Term.var 2))).and
                  (AutoStructs.Term.var 2)).or
              ((AutoStructs.Term.var 0).and (AutoStructs.Term.var 3)))
            ((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).and (AutoStructs.Term.var 2)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 85.680180 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 834.028318 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gapinthor_proof.lean:38:4: error: maximum recursion depth has been reached
use `set_option maxRecDepth <num>` to increase limit
use `set_option diagnostics true` to get diagnostic information
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 124.796680 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 59.078180 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 34.662550 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 151.693689 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 17.462000 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 8.885450 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746687
      0 ≤ b ≤ 1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746687
      0 ≤ a ≤ 1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746687
      0 ≤ a + b - 1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746688*c ≤ 1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746687
      a + b - 1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746688*c - d ≥ 1
    where
     a := ↑x✝.toNat
     b := ↑(x✝¹ &&& 18446742974197923840#399).toNat
     c := ↑(x✝.toNat + (x✝¹ &&& 18446742974197923840#399).toNat) /
      1291124939043454294827959586001505937164852896414611756415329678270323811008420597314822676640068915717951585986373746688
     d := ↑(x✝ + (x✝¹ &&& 18446742974197923840#399) &&& (274877906943#399 ^^^ -1#399) |||
          x✝ &&& 274877906943#399).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 103.985879 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).and (AutoStructs.Term.var 2))).and
                  (AutoStructs.Term.var 3)).or
              ((AutoStructs.Term.var 0).and (AutoStructs.Term.var 4)))
            ((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).and (AutoStructs.Term.var 2)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 113.559820 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 802.723397 ms, 
TACEND
