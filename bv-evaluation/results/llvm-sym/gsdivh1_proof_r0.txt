⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [887/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 126.110019 ms, 
  TACBENCH bv_ac PASS, TIME_ELAPSED 15.011360 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 104.635660 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 212.382620 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 20.352660 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 36.481310 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ a ≤ 715827881
    where
     a := ↑(match Decidable.decide (2 ^ (32 - 1) ≤ (0 % 2 ^ 32 + (2 ^ 32 - (-2147483648 % ↑(2 ^ 32)).toNat)) % 2 ^ 32),
        Decidable.decide (2 ^ (32 - 1) ≤ (-3 % ↑(2 ^ 32)).toNat) with
      | false, false => ((0#32 - BitVec.ofInt 32 (-2147483648)).udiv (BitVec.ofInt 32 (-3))).toNat
      | false, true => (2 ^ 32 - ((0#32 - BitVec.ofInt 32 (-2147483648)).udiv (-BitVec.ofInt 32 (-3))).toNat) % 2 ^ 32
      | true, false => (2 ^ 32 - ((-(0#32 - BitVec.ofInt 32 (-2147483648))).udiv (BitVec.ofInt 32 (-3))).toNat) % 2 ^ 32
      | true, true => ((-(0#32 - BitVec.ofInt 32 (-2147483648))).udiv (-BitVec.ofInt 32 (-3))).toNat) MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 134.272529 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 30.002060 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 120.717439 ms, 
TACEND
