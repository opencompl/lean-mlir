⚠ [880/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [883/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [891/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 148.814149 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 119.702290 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 72.726870 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 246.013970 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 67.933189 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.397480 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      6 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (x✝ &&& 6#8 == 0#8)).toNat
     c := ↑(ofBool (64#8 >ᵤ x✝ <<< 5#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 37.316430 ms, MSGSTART 
    Equality (64#8 >ᵤ x✝ <<< 5) = (x✝ &&& 6#8 == 0#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 124.115011 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 787.731596 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 124.387860 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 218.042420 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 76.123599 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 263.942959 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 66.820599 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.789490 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      7 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (x✝ &&& 3#8 == 0#8)).toNat
     c := ↑(ofBool (64#8 >ᵤ x✝ <<< 6#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 35.455640 ms, MSGSTART 
    Equality (64#8 >ᵤ x✝ <<< 6) = (x✝ &&& 3#8 == 0#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 101.919800 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 754.581807 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 167.608889 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 412.471498 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 134.055209 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 264.842189 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 62.936200 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.396770 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      8 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (x✝ &&& 1#8 == 0#8)).toNat
     c := ↑(ofBool (64#8 >ᵤ x✝ <<< 7#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 36.062889 ms, MSGSTART 
    Equality (64#8 >ᵤ x✝ <<< 7) = (x✝ &&& 1#8 == 0#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 118.465141 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 935.467556 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 167.541959 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 463.839558 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 166.813000 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 150.539859 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 39.074750 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.296560 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      9 ≤ a ≤ 65535
    where
     a := ↑(↑16).toNat
     b := ↑(ofBool (x✝ &&& 252#16 == 0#16)).toNat
     c := ↑(ofBool (1024#16 >ᵤ x✝ <<< 8#16)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 21.347680 ms, MSGSTART 
    Equality (1024#16 >ᵤ x✝ <<< 8) = (x✝ &&& 252#16 == 0#16) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 94.609399 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 847.799167 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 131.448590 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 2900.269147 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 1119.672986 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 145.185029 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 38.092200 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.372220 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      12 ≤ a ≤ 4294967295
    where
     a := ↑(↑32).toNat
     b := ↑(ofBool (x✝ &&& 2097088#32 == 0#32)).toNat
     c := ↑(ofBool (131072#32 >ᵤ x✝ <<< 11#32)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 21.450860 ms, MSGSTART 
    Equality (131072#32 >ᵤ x✝ <<< 11) = (x✝ &&& 2097088#32 == 0#32) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 94.406810 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 3655.917824 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gshlhunsignedhcmphconst_proof.lean:57:75: error: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gshlhunsignedhcmphconst_proof.lean:68:80: error: (deterministic) timeout at `whnf`, maximum number of heartbeats (200000) has been reached
Use `set_option maxHeartbeats <num>` to set the limit.
Additional diagnostic information may be available using the `set_option diagnostics true` command.
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 116.331069 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 82.139970 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 42.780760 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 140.213679 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 43.257570 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.012870 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      6 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (x✝ &&& 6#8 != 0#8)).toNat
     c := ↑(ofBool (x✝ <<< 5#8 ≥ᵤ 64#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 18.989440 ms, MSGSTART 
    Equality (x✝ <<< 5 ≥ᵤ 64#8) = (x✝ &&& 6#8 != 0#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 93.621149 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 493.053388 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 117.365670 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 70.505340 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 38.369659 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 139.313840 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 37.223560 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.058810 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      6 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (x✝ &&& 6#8 == 0#8)).toNat
     c := ↑(ofBool (63#8 ≥ᵤ x✝ <<< 5#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 19.819049 ms, MSGSTART 
    Equality (63#8 ≥ᵤ x✝ <<< 5) = (x✝ &&& 6#8 == 0#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 93.420680 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 457.600888 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 215.273449 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 81.242759 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 42.274760 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 144.944670 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool PASS, TIME_ELAPSED 43.003049 ms, 
  TACBENCH bv_omega FAIL, TIME_ELAPSED 6.203240 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      b - c ≥ 1
      6 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(ofBool (x✝ &&& 6#8 != 0#8)).toNat
     c := ↑(ofBool (x✝ <<< 5#8 >ᵤ 63#8)).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 19.602780 ms, MSGSTART 
    Equality (x✝ <<< 5 >ᵤ 63#8) = (x✝ &&& 6#8 != 0#8) has a strange type MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 143.759680 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 486.682018 ms, 
TACEND
