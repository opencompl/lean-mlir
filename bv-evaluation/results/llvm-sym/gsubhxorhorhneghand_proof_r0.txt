⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [887/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 117.343360 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 57.337320 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 56.051700 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 182.333528 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 23.477730 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 19.156220 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 4294967295
      0 ≤ d ≤ 4294967295
      0 ≤ b ≤ 4294967295
      -4294967296 ≤ b - 4294967296*c - d ≤ -1
      1 ≤ 4294967296*a + e ≤ 4294967296
      4294967296*a + b - 4294967296*c - d + e ≤ -1
    where
     a := ↑(0 % 2 ^ 32 + (2 ^ 32 - (x✝ &&& x✝¹).toNat)) / 4294967296
     b := ↑(x✝ ^^^ x✝¹).toNat
     c := ↑((x✝ ^^^ x✝¹).toNat + (2 ^ 32 - (x✝ ||| x✝¹).toNat)) / 4294967296
     d := ↑(x✝ ||| x✝¹).toNat
     e := ↑(x✝ &&& x✝¹).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 79.908149 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 196.176410 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 836.396597 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 126.836629 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 38.254349 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 40.051250 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 255.298059 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 28.391000 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 21.880050 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 4294967295
      0 ≤ d ≤ 4294967295
      0 ≤ b ≤ 4294967295
      -4294967296 ≤ b - 4294967296*c - e ≤ -1
      1 ≤ 4294967296*a + d ≤ 4294967296
      4294967296*a + b - 4294967296*c + d - e ≤ -1
    where
     a := ↑(0 % 2 ^ 32 + (2 ^ 32 - (x✝ &&& x✝¹).toNat)) / 4294967296
     b := ↑(x✝ ^^^ x✝¹).toNat
     c := ↑((x✝ ^^^ x✝¹).toNat + (2 ^ 32 - (x✝¹ ||| x✝).toNat)) / 4294967296
     d := ↑(x✝ &&& x✝¹).toNat
     e := ↑(x✝¹ ||| x✝).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 89.481889 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 149.936510 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 789.838766 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 138.297929 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 38.151240 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 39.745650 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 263.803180 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 22.868339 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 17.560110 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 4294967295
      0 ≤ d ≤ 4294967295
      0 ≤ b ≤ 4294967295
      -4294967296 ≤ b - 4294967296*c - e ≤ -1
      1 ≤ 4294967296*a + d ≤ 4294967296
      4294967296*a + b - 4294967296*c + d - e ≤ -1
    where
     a := ↑(0 % 2 ^ 32 + (2 ^ 32 - (x✝ &&& x✝¹).toNat)) / 4294967296
     b := ↑(x✝ ^^^ x✝¹).toNat
     c := ↑((x✝ ^^^ x✝¹).toNat + (2 ^ 32 - (x✝¹ ||| x✝).toNat)) / 4294967296
     d := ↑(x✝ &&& x✝¹).toNat
     e := ↑(x✝¹ ||| x✝).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 55.063789 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 135.188290 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 790.506220 ms, 
TACEND
