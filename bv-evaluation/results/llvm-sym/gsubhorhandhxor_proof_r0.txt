⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [885/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [888/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 141.348110 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 34.634949 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 34.909990 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 183.409381 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 21.340459 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 13.018550 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 4294967295
      0 ≤ b ≤ 4294967295
      -4294967296 ≤ b - 4294967296*c - d ≤ -1
      0 ≤ a ≤ 4294967295
      a - b + 4294967296*c + d ≥ 4294967297
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑(x✝ ||| x✝¹).toNat
     c := ↑((x✝ ||| x✝¹).toNat + (2 ^ 32 - (x✝ &&& x✝¹).toNat)) / 4294967296
     d := ↑(x✝ &&& x✝¹).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 71.443390 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 206.295879 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 758.273608 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 163.264340 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 33.813110 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 38.170889 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 221.172019 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 20.986570 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 15.353879 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 4294967295
      0 ≤ b ≤ 4294967295
      -4294967296 ≤ b - 4294967296*c - d ≤ -1
      0 ≤ a ≤ 4294967295
      a - b + 4294967296*c + d ≥ 4294967297
    where
     a := ↑(x✝¹ ^^^ x✝).toNat
     b := ↑(x✝ ||| x✝¹).toNat
     c := ↑((x✝ ||| x✝¹).toNat + (2 ^ 32 - (x✝¹ &&& x✝).toNat)) / 4294967296
     d := ↑(x✝¹ &&& x✝).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 73.818220 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 106.563349 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 739.168229 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 159.678409 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 34.296251 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 38.301480 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 220.888989 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 27.710430 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 15.601081 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 4294967295
      0 ≤ b ≤ 4294967295
      -4294967296 ≤ b - 4294967296*c - d ≤ -1
      0 ≤ a ≤ 4294967295
      a - b + 4294967296*c + d ≥ 4294967297
    where
     a := ↑(x✝¹ ^^^ x✝).toNat
     b := ↑(x✝ ||| x✝¹).toNat
     c := ↑((x✝ ||| x✝¹).toNat + (2 ^ 32 - (x✝¹ &&& x✝).toNat)) / 4294967296
     d := ↑(x✝¹ &&& x✝).toNat MSGEND
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 64.105739 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 114.685931 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 695.298939 ms, 
TACEND
