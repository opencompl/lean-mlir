⚠ [673/898] Replayed SSA.Experimental.Bits.AutoStructs.ForLean
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:26:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:29:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:31:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:33:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:36:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:38:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:40:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:43:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:54:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/ForLean.lean:58:8: declaration uses 'sorry'
⚠ [884/898] Replayed SSA.Experimental.Bits.Fast.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:107:8: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/Fast/FiniteStateMachine.lean:825:8: declaration uses 'sorry'
⚠ [890/898] Replayed SSA.Experimental.Bits.AutoStructs.Constructions
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:56:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:129:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:164:6: declaration uses 'sorry'
warning: ././././SSA/Experimental/Bits/AutoStructs/Constructions.lean:198:6: declaration uses 'sorry'
⚠ [893/898] Replayed SSA.Experimental.Bits.Fast.Tactic
warning: ././././SSA/Experimental/Bits/Fast/Tactic.lean:349:4: declaration uses 'sorry'
⚠ [894/898] Replayed SSA.Experimental.Bits.AutoStructs.FiniteStateMachine
warning: ././././SSA/Experimental/Bits/AutoStructs/FiniteStateMachine.lean:111:8: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 96.689969 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 130.373530 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 70.585080 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 452.850349 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 23.940880 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 8.730930 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 92.500939 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 7.019170 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 330.015359 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 173.006359 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 34.726250 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 35.409830 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 201.699429 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 20.642900 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 163.588080 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 79.496779 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 112.250680 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 891.261437 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gsubhofhnegatiblehinseltpoison_proof.lean:20:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 108.005430 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 109.985571 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 77.767739 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 254.142951 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 24.555930 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 101.287131 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 94.437219 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 86.042049 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 326.583859 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 121.008480 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 278.882539 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 124.194690 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 141.892730 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.879110 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 59.500129 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 82.720170 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 83.150900 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 279.675978 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 32.183470 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 12.432700 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.784450 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 128.686259 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.639020 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 56.390350 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.503920 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.546830 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 8.987540 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 30.212950 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 11.130080 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.579140 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.289220 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.260319 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 55.031660 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 15.601680 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 4.484720 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 10.194150 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 0.605780 ms, MSGSTART 
    applyExtTheorem only applies to equations, not
      some (x✝ - 1#8 <<< x✝¹) ⊑ none MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 8.350320 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 10.026660 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 132.165719 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 17.243640 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.340120 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 254
      0 ≤ b ≤ 255
      0 ≤ a ≤ 255
      a - b ≥ 1
    where
     a := ↑(↑8).toNat
     b := ↑x✝¹.toNat
     c := ↑(((-1#8) <<< x✝¹).sshiftRight' x✝¹).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 18.765150 ms, MSGSTART 
    Unsupported syntax some (x✝ - 1#8 <<< x✝¹.toNat) ⊑ none === Lean.Expr.app
      (Lean.Expr.app
        (Lean.Expr.app
          (Lean.Expr.const `BitVec.Refinement [Lean.Level.zero])
          (Lean.Expr.app
            (Lean.Expr.const `BitVec [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                (Lean.Expr.lit (Lean.Literal.natVal 8)))
              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
        (Lean.Expr.app
          (Lean.Expr.app
            (Lean.Expr.const `Option.some [Lean.Level.zero])
            (Lean.Expr.app
              (Lean.Expr.const `BitVec [])
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                  (Lean.Expr.lit (Lean.Literal.natVal 8)))
                (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.const `HSub.hSub [Lean.Level.zero, Lean.Level.zero, Lean.Level.zero])
                      (Lean.Expr.app
                        (Lean.Expr.const `BitVec [])
                        (Lean.Expr.app
                          (Lean.Expr.app
                            (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                            (Lean.Expr.lit (Lean.Literal.natVal 8)))
                          (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.const `instHSub [Lean.Level.zero])
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.instSub [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))))
              (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 157608)))
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.const `HShiftLeft.hShiftLeft [Lean.Level.zero, Lean.Level.zero, Lean.Level.zero])
                        (Lean.Expr.app
                          (Lean.Expr.const `BitVec [])
                          (Lean.Expr.app
                            (Lean.Expr.app
                              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                              (Lean.Expr.lit (Lean.Literal.natVal 8)))
                            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                      (Lean.Expr.const `Nat []))
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.instHShiftLeftNat [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.ofNat [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 1)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 1))))))
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.const `BitVec.toNat [])
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 8)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 157606)))))))
      (Lean.Expr.app
        (Lean.Expr.const `Option.none [Lean.Level.zero])
        (Lean.Expr.app
          (Lean.Expr.const `BitVec [])
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
              (Lean.Expr.lit (Lean.Literal.natVal 8)))
            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))) MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 91.897090 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 515.448068 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 132.710909 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 23.740181 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 30.322729 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 183.119629 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.599040 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 22.493710 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      h ≥ 0
      0 ≤ h - 256*i ≤ 255
      0 ≤ e ≤ 255
      -256 ≤ e - 256*g - h + 256*i ≤ -1
      c ≥ 0
      0 ≤ c - 256*d ≤ 255
      c - 256*d - 256*f + 256*g + h - 256*i ≥ 257
      0 ≤ c - 256*d + e - 256*f ≤ 255
      0 ≤ b ≤ 255
      0 ≤ a ≤ 255
      a - b ≥ 1
    where
     a := ↑(↑8).toNat
     b := ↑x✝¹.toNat
     c := ↑((2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8) * ↑(2 ^ x✝¹.toNat)
     d := ↑((2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8 * 2 ^ x✝¹.toNat) / 256
     e := ↑x✝.toNat
     f := ↑((2 ^ 8 - 1 % 2 ^ 8) % 2 ^ 8 * 2 ^ x✝¹.toNat % 2 ^ 8 + x✝.toNat) / 256
     g := ↑(x✝.toNat + (2 ^ 8 - 1 % 2 ^ 8 * 2 ^ x✝¹.toNat % 2 ^ 8)) / 256
     h := ↑2 ^ x✝¹.toNat
     i := ↑(1 % 2 ^ 8 * 2 ^ x✝¹.toNat) / 256 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 64.020860 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 127.242340 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 791.658786 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gsubhofhnegatiblehinseltpoison_proof.lean:39:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 57.245290 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 27.338290 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 23.210570 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 153.706359 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.616870 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 88.013980 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 23.161180 ms, MSGSTART 
    no goals to be solved MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 105.200519 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 29.067290 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 39.411470 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 427.191968 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 132.040699 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 151.456870 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.032490 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 78.098509 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 65.481330 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 84.703390 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 187.305789 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 104.841959 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 817.060327 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 406.897678 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 148.563190 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.468030 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 73.839999 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 88.958140 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).sub (AutoStructs.Term.var 2)))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 3))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 85.953289 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 437.739289 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 104.389479 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 588.422558 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 283.916449 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 138.236239 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.222250 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 102.601940 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 104.710649 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).sub (AutoStructs.Term.var 2)))
            (((AutoStructs.Term.var 2).add (AutoStructs.Term.var 3)).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 102.644460 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 3950.961623 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 52.307760 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 499.523958 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 145.238270 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 139.933699 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.869370 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 70.913110 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 67.678479 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 182.319210 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 131.838539 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 99.346810 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 873.135476 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 443.568908 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 142.832340 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.757930 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 68.031279 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 81.284140 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).add (AutoStructs.Term.var 2)))
            ((AutoStructs.Term.var 3).sub (AutoStructs.Term.var 1))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 183.120729 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 203.904009 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 117.591649 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 30.069880 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 30.181190 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 176.033499 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.324270 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 131.350330 ms, 
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 62.379169 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 101.703510 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 664.724167 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gsubhofhnegatiblehinseltpoison_proof.lean:104:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 97.990599 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 19.769380 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 18.541800 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 138.571299 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.827060 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.096220 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 15
      1 ≤ 16*c + d ≤ 16
      0 ≤ a ≤ 15
      -1 ≤ a - 16*b ≤ 14
      a - 16*b + 16*c + d ≥ 16
    where
     a := ↑(x✝ ^^^ 10#4).toNat
     b := ↑((x✝ ^^^ 10#4).toNat + 1 % 2 ^ 4) / 16
     c := ↑(0 % 2 ^ 4 + (2 ^ 4 - (x✝ ^^^ 5#4).toNat)) / 16
     d := ↑(x✝ ^^^ 5#4).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 52.296020 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 1)).neg
            (((AutoStructs.Term.var 0).xor (AutoStructs.Term.var 2)).add AutoStructs.Term.one)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 176.690869 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 617.224788 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 114.189879 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 20.049360 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 28.055790 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 141.926880 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.380430 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 16.948809 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      f ≥ 0
      0 ≤ f - 16*g ≤ 15
      1 ≤ 16*e + f - 16*g ≤ 16
      c ≥ 0
      0 ≤ c - 16*d ≤ 15
      c - 16*d + 16*e + f - 16*g ≥ 17
      0 ≤ b ≤ 15
      0 ≤ a ≤ 15
      a - b ≥ 1
    where
     a := ↑(↑4).toNat
     b := ↑x✝¹.toNat
     c := ↑(((x✝ ^^^ 10#4).toNat + 1 % 2 ^ 4) % 2 ^ 4) * ↑(2 ^ x✝¹.toNat)
     d := ↑(((x✝ ^^^ 10#4).toNat + 1 % 2 ^ 4) % 2 ^ 4 * 2 ^ x✝¹.toNat) / 16
     e := ↑(0 % 2 ^ 4 + (2 ^ 4 - (x✝ ^^^ 5#4).toNat * 2 ^ x✝¹.toNat % 2 ^ 4)) / 16
     f := ↑(x✝ ^^^ 5#4).toNat * ↑(2 ^ x✝¹.toNat)
     g := ↑((x✝ ^^^ 5#4).toNat * 2 ^ x✝¹.toNat) / 16 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 61.724900 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0).neg
            ((AutoStructs.Term.var 1).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 86.992520 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 588.433537 ms, 
TACEND
/home/luisacicolini/lean-mlir/SSA/Projects/InstCombine/tests/proofs/gsubhofhnegatiblehinseltpoison_proof.lean:124:8: warning: declaration uses 'sorry'
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 0.572140 ms, MSGSTART 
    applyExtTheorem only applies to equations, not
      some (x✝ - x✝¹.sdiv 42#8) ⊑ none MSGEND
  TACBENCH bv_ac PASS, TIME_ELAPSED 7.593950 ms, 
  TACBENCH bv_distrib PASS, TIME_ELAPSED 5.248460 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 105.802820 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 10.728460 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 5.834110 ms, MSGSTART 
    omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants. MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 13.251240 ms, MSGSTART 
    Unsupported syntax some (x✝ - x✝¹.sdiv 42#8) ⊑ none === Lean.Expr.app
      (Lean.Expr.app
        (Lean.Expr.app
          (Lean.Expr.const `BitVec.Refinement [Lean.Level.zero])
          (Lean.Expr.app
            (Lean.Expr.const `BitVec [])
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                (Lean.Expr.lit (Lean.Literal.natVal 8)))
              (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
        (Lean.Expr.app
          (Lean.Expr.app
            (Lean.Expr.const `Option.some [Lean.Level.zero])
            (Lean.Expr.app
              (Lean.Expr.const `BitVec [])
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                  (Lean.Expr.lit (Lean.Literal.natVal 8)))
                (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.const `HSub.hSub [Lean.Level.zero, Lean.Level.zero, Lean.Level.zero])
                      (Lean.Expr.app
                        (Lean.Expr.const `BitVec [])
                        (Lean.Expr.app
                          (Lean.Expr.app
                            (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                            (Lean.Expr.lit (Lean.Literal.natVal 8)))
                          (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.const `instHSub [Lean.Level.zero])
                    (Lean.Expr.app
                      (Lean.Expr.const `BitVec [])
                      (Lean.Expr.app
                        (Lean.Expr.app
                          (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                          (Lean.Expr.lit (Lean.Literal.natVal 8)))
                        (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8))))))
                  (Lean.Expr.app
                    (Lean.Expr.const `BitVec.instSub [])
                    (Lean.Expr.app
                      (Lean.Expr.app
                        (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                        (Lean.Expr.lit (Lean.Literal.natVal 8)))
                      (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))))
              (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 1526239)))
            (Lean.Expr.app
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.const `BitVec.sdiv [])
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 8)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                (Lean.Expr.fvar (Lean.Name.mkNum `_uniq 1526238)))
              (Lean.Expr.app
                (Lean.Expr.app
                  (Lean.Expr.const `BitVec.ofNat [])
                  (Lean.Expr.app
                    (Lean.Expr.app
                      (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                      (Lean.Expr.lit (Lean.Literal.natVal 8)))
                    (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))
                (Lean.Expr.app
                  (Lean.Expr.app
                    (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
                    (Lean.Expr.lit (Lean.Literal.natVal 42)))
                  (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 42)))))))))
      (Lean.Expr.app
        (Lean.Expr.const `Option.none [Lean.Level.zero])
        (Lean.Expr.app
          (Lean.Expr.const `BitVec [])
          (Lean.Expr.app
            (Lean.Expr.app
              (Lean.Expr.app (Lean.Expr.const `OfNat.ofNat [Lean.Level.zero]) (Lean.Expr.const `Nat []))
              (Lean.Expr.lit (Lean.Literal.natVal 8)))
            (Lean.Expr.app (Lean.Expr.const `instOfNatNat []) (Lean.Expr.lit (Lean.Literal.natVal 8)))))) MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 14.145460 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 119.228969 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 191.002229 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 23.227520 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 20.503850 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.021859 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.216160 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 32.079600 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 256
      0 ≤ b ≤ 255
      -256 ≤ b - 256*d - e ≤ -1
      a ≥ 0
      a - 256*c + 256*d + e ≥ 257
      0 ≤ a + b - 256*c ≤ 255
    where
     a := ↑(match Decidable.decide (2 ^ (8 - 1) ≤ x✝¹.toNat), Decidable.decide (2 ^ (8 - 1) ≤ 214 % 2 ^ 8) with
      | false, false => (x✝¹.udiv 214#8).toNat
      | false, true => (2 ^ 8 - (x✝¹.udiv (-214#8)).toNat) % 2 ^ 8
      | true, false => (2 ^ 8 - ((-x✝¹).udiv 214#8).toNat) % 2 ^ 8
      | true, true => ((-x✝¹).udiv (-214#8)).toNat)
     b := ↑x✝.toNat
     c := ↑((match Decidable.decide (2 ^ (8 - 1) ≤ x✝¹.toNat), Decidable.decide (2 ^ (8 - 1) ≤ 214 % 2 ^ 8) with
          | false, false => (x✝¹.udiv 214#8).toNat
          | false, true => (2 ^ 8 - (x✝¹.udiv (-214#8)).toNat) % 2 ^ 8
          | true, false => (2 ^ 8 - ((-x✝¹).udiv 214#8).toNat) % 2 ^ 8
          | true, true => ((-x✝¹).udiv (-214#8)).toNat) +
          x✝.toNat) /
      256
     d := ↑(x✝.toNat +
          (2 ^ 8 -
            match Decidable.decide (2 ^ (8 - 1) ≤ x✝¹.toNat), Decidable.decide (2 ^ (8 - 1) ≤ 42 % 2 ^ 8) with
            | false, false => (x✝¹.udiv 42#8).toNat
            | false, true => (2 ^ 8 - (x✝¹.udiv (-42#8)).toNat) % 2 ^ 8
            | true, false => (2 ^ 8 - ((-x✝¹).udiv 42#8).toNat) % 2 ^ 8
            | true, true => ((-x✝¹).udiv (-42#8)).toNat)) /
      256
     e := ↑(match Decidable.decide (2 ^ (8 - 1) ≤ x✝¹.toNat), Decidable.decide (2 ^ (8 - 1) ≤ 42 % 2 ^ 8) with
      | false, false => (x✝¹.udiv 42#8).toNat
      | false, true => (2 ^ 8 - (x✝¹.udiv (-42#8)).toNat) % 2 ^ 8
      | true, false => (2 ^ 8 - ((-x✝¹).udiv 42#8).toNat) % 2 ^ 8
      | true, true => ((-x✝¹).udiv (-42#8)).toNat) MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 58.981570 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 142.864339 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 658.067857 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 209.869579 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 17.326230 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 22.530300 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 126.908929 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.476800 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.754790 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ c ≤ 255
      -256 ≤ c - 256*e - f ≤ -1
      0 ≤ b ≤ 255
      b - 256*d + 256*e + f ≥ 257
      0 ≤ b + c - 256*d ≤ 255
      8 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(x✝¹ >>> 7#8).toNat
     c := ↑x✝.toNat
     d := ↑((x✝¹ >>> 7#8).toNat + x✝.toNat) / 256
     e := ↑(x✝.toNat + (2 ^ 8 - (x✝¹.sshiftRight' 7#8).toNat)) / 256
     f := ↑(x✝¹.sshiftRight' 7#8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 54.488650 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 83.009429 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 686.000268 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 109.468779 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 22.941580 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 27.359430 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 124.294100 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 13.018900 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 11.441829 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ c ≤ 255
      -256 ≤ c - 256*e - f ≤ -1
      0 ≤ b ≤ 255
      b - 256*d + 256*e + f ≥ 257
      0 ≤ b + c - 256*d ≤ 255
      8 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑(x✝¹.sshiftRight' 7#8).toNat
     c := ↑x✝.toNat
     d := ↑((x✝¹.sshiftRight' 7#8).toNat + x✝.toNat) / 256
     e := ↑(x✝.toNat + (2 ^ 8 - (x✝¹ >>> 7#8).toNat)) / 256
     f := ↑(x✝¹ >>> 7#8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 54.658570 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 2).add (AutoStructs.Term.var 0))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 81.664910 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 541.234028 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 101.233429 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 14.852780 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 17.398430 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 104.161540 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.159059 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.733900 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ b ≤ 1
      0 ≤ b - 256*c ≤ 255
      b - 256*c - 256*d + 256*e + f ≥ 257
      0 ≤ a ≤ 255
      -256 ≤ a - 256*e - f ≤ -1
      0 ≤ a + b - 256*c - 256*d ≤ 255
    where
     a := ↑x✝.toNat
     b := ↑x✝¹.toNat
     c := ↑x✝¹.toNat / 256
     d := ↑(x✝.toNat + x✝¹.toNat % 2 ^ 8) / 256
     e := ↑(x✝.toNat + (2 ^ 8 - (signExtend 8 x✝¹).toNat)) / 256
     f := ↑(signExtend 8 x✝¹).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 48.909920 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 128.970860 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 596.781797 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 99.667769 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 20.475180 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 22.791660 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 105.927020 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.393310 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 10.841560 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 1
      0 ≤ e - 256*f ≤ 255
      0 ≤ b ≤ 255
      b - 256*c + 256*d + e - 256*f ≥ 257
      0 ≤ a ≤ 255
      -256 ≤ a - 256*d - e + 256*f ≤ -1
      0 ≤ a + b - 256*c ≤ 255
    where
     a := ↑x✝.toNat
     b := ↑(signExtend 8 x✝¹).toNat
     c := ↑(x✝.toNat + (signExtend 8 x✝¹).toNat) / 256
     d := ↑(x✝.toNat + (2 ^ 8 - x✝¹.toNat % 2 ^ 8)) / 256
     e := ↑x✝¹.toNat
     f := ↑x✝¹.toNat / 256 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 50.110730 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq ((AutoStructs.Term.var 0).sub (AutoStructs.Term.var 1))
            ((AutoStructs.Term.var 0).add (AutoStructs.Term.var 2))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 178.572449 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 647.817037 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 116.699819 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 24.088080 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 32.162100 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 173.682869 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 15.698400 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 12.505610 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ f ≤ 255
      0 ≤ c ≤ 255
      c - 256*d + 256*e + f ≥ 257
      0 ≤ b ≤ 255
      -256 ≤ b - 256*e - f ≤ -1
      0 ≤ b + c - 256*d ≤ 255
      2 ≤ a ≤ 255
    where
     a := ↑(↑8).toNat
     b := ↑x✝.toNat
     c := ↑(x✝¹ <<< 1#8 ^^^ -1#8).toNat
     d := ↑(x✝.toNat + (x✝¹ <<< 1#8 ^^^ -1#8).toNat) / 256
     e := ↑(x✝.toNat + (2 ^ 8 - (x✝¹ <<< 1#8 ||| 1#8).toNat)) / 256
     f := ↑(x✝¹ <<< 1#8 ||| 1#8).toNat MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 63.579640 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq
            ((AutoStructs.Term.var 0).sub ((AutoStructs.Term.var 1).or AutoStructs.Term.one))
            ((AutoStructs.Term.var 0).add ((AutoStructs.Term.var 1).xor (AutoStructs.Term.var 2)))) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 89.304250 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 703.228357 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise PASS, TIME_ELAPSED 52.903670 ms, 
  TACBENCH bv_ac FAIL, TIME_ELAPSED 498.972508 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 143.874739 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 137.755040 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 12.657580 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega PASS, TIME_ELAPSED 71.383579 ms, 
  TACBENCH bv_automata_classic PASS, TIME_ELAPSED 68.092190 ms, 
  TACBENCH bv_decide PASS, TIME_ELAPSED 83.050130 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 132.003169 ms, 
TACEND
TACSTART
  TACBENCH bv_bitwise FAIL, TIME_ELAPSED 103.853740 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_ac FAIL, TIME_ELAPSED 1721.720783 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_distrib PASS, TIME_ELAPSED 445.189838 ms, 
  TACBENCH bv_ring FAIL, TIME_ELAPSED 147.539329 ms, MSGSTART 
    internal exception #4 MSGEND
  TACBENCH bv_of_bool FAIL, TIME_ELAPSED 14.215370 ms, MSGSTART 
    simp made no progress MSGEND
  TACBENCH bv_omega FAIL, TIME_ELAPSED 17.311100 ms, MSGSTART 
    omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      d ≥ 0
      0 ≤ d - 256*e ≤ 255
      1 ≤ 256*c + d - 256*e ≤ 256
      a ≥ 0
      0 ≤ a - 256*b ≤ 255
      a - 256*b + 256*c + d - 256*e ≥ 257
    where
     a := ↑((235 % 2 ^ 8 + (2 ^ 8 - x✝.toNat)) % 2 ^ 8) * ↑x✝¹.toNat
     b := ↑((235 % 2 ^ 8 + (2 ^ 8 - x✝.toNat)) % 2 ^ 8 * x✝¹.toNat) / 256
     c := ↑(0 % 2 ^ 8 + (2 ^ 8 - (x✝.toNat + 21 % 2 ^ 8) % 2 ^ 8 * x✝¹.toNat % 2 ^ 8)) / 256
     d := ↑((x✝.toNat + 21 % 2 ^ 8) % 2 ^ 8) * ↑x✝¹.toNat
     e := ↑((x✝.toNat + 21 % 2 ^ 8) % 2 ^ 8 * x✝¹.toNat) / 256 MSGEND
  TACBENCH bv_automata_classic FAIL, TIME_ELAPSED 502.380438 ms, MSGSTART 
    tactic 'native_decide' evaluated that the proposition
      formulaIsUniversal
          (AutoStructs.Formula.atom AutoStructs.Relation.eq (AutoStructs.Term.var 0).neg (AutoStructs.Term.var 1)) =
        true
    is false MSGEND
  TACBENCH bv_decide PASS, TIME_ELAPSED 794.176476 ms, 
  TACBENCH bv_auto PASS, TIME_ELAPSED 829.332707 ms, 
TACEND
