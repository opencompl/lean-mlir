,filename,guid,name,status,time_elapsed,error_message
0,AliveStatements,1,rfl,FAIL,16.787861,"tactic 'rfl' failed, the left-hand side
      (x✝ &&& x✝¹ ^^^ x✝¹) + 1#w + x✝²
    is not definitionally equal to the right-hand side
      x✝² - (x✝ ||| ~~~x✝¹)
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹ ^^^ x✝¹) + 1#w + x✝² = x✝² - (x✝ ||| ~~~x✝¹)"
1,AliveStatements,1,bv_bitwise,FAIL,477.668429,internal exception #5
2,AliveStatements,1,bv_ac,FAIL,80.53383,internal exception #5
3,AliveStatements,1,bv_distrib,FAIL,385.56015,internal exception #5
4,AliveStatements,1,bv_ring,FAIL,405.581568,internal exception #5
5,AliveStatements,1,bv_of_bool,FAIL,82.085818,simp made no progress
6,AliveStatements,1,bv_omega,FAIL,22.877298,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝².toNat + (2 ^ w - (x✝ ||| ~~~x✝¹).toNat)) % ↑(2 ^ w)
     b := ↑(((x✝ &&& x✝¹ ^^^ x✝¹).toNat + 1 % 2 ^ w) % 2 ^ w + x✝².toNat) % ↑(2 ^ w)
     c := ↑2 ^ w"
7,AliveStatements,1,bv_automata_classic_prop,PASS,4096.432826,
8,AliveStatements,1,bv_automata_classic,PASS,17.862884,
9,AliveStatements,1,bv_normalize_automata_classic,PASS,92.766187,
10,AliveStatements,1,simp,FAIL,334.376454,simp made no progress
11,AliveStatements,1,bv_normalize,FAIL,45.068913,internal exception #5
12,AliveStatements,1,bv_decide,FAIL,103.6132,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ &&& x✝¹ ^^^ x✝¹) + 1#w ==
       -~~~(~~~x✝ &&& x✝¹)]
    Consider the following assignment:
    (x✝ &&& x✝¹ ^^^ x✝¹) + 1#w == -~~~(~~~x✝ &&& x✝¹) = false"
13,AliveStatements,1,bv_auto,PASS,1239.951732,
14,AliveStatements,1,bv_automata_circuit_lean_prop,PASS,210.909477,
15,AliveStatements,1,bv_automata_circuit_lean,PASS,191.988229,
16,AliveStatements,1,bv_normalize_automata_circuit_lean,PASS,200.486743,
17,AliveStatements,1,bv_automata_circuit_cadical_prop,PASS,297.472382,
18,AliveStatements,1,bv_automata_circuit_cadical,PASS,260.219508,
19,AliveStatements,1,bv_normalize_automata_circuit_cadical,PASS,306.139365,
20,AliveStatements,1,bv_mba,FAIL,13.321477,"unable to reflect term '
      x✝ &&& x✝¹ ^^^ x✝¹'.
    Expected 'int * variable'."
21,AliveStatements,1,bv_normalize_mba,FAIL,37.165894,internal exception #5
22,AliveStatements,2,rfl,FAIL,6.442728,"tactic 'rfl' failed, the left-hand side
      x✝ + x✝¹
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    x✝¹ x✝ : BitVec 1
    ⊢ x✝ + x✝¹ = x✝ ^^^ x✝¹"
23,AliveStatements,2,bv_bitwise,PASS,10067.202349,
24,AliveStatements,2,bv_ac,FAIL,27.964562,internal exception #5
25,AliveStatements,2,bv_distrib,FAIL,102.434399,internal exception #5
26,AliveStatements,2,bv_ring,FAIL,111.418986,internal exception #5
27,AliveStatements,2,bv_of_bool,FAIL,20.777055,simp made no progress
28,AliveStatements,2,bv_omega,FAIL,10.321339,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ c ≤ 1
      0 ≤ b ≤ 1
      0 ≤ b + c - 2*d ≤ 1
      0 ≤ a ≤ 1
      a - b - c + 2*d ≥ 1
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑x✝.toNat
     c := ↑x✝¹.toNat
     d := ↑(x✝.toNat + x✝¹.toNat) / 2"
29,AliveStatements,2,bv_automata_classic_prop,FAIL,21.51058,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 0).add (Copy.Term.var 1))
                    ((Copy.Term.var 0).xor (Copy.Term.var 1)))) =
              true)) =
        true
    is false"
30,AliveStatements,2,bv_automata_classic,FAIL,7.378306,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 0).add (Copy.Term.var 1))
                    ((Copy.Term.var 0).xor (Copy.Term.var 1)))) =
              true)) =
        true
    is false"
31,AliveStatements,2,bv_normalize_automata_classic,PASS,4.752599,
32,AliveStatements,2,simp,FAIL,85.559906,simp made no progress
33,AliveStatements,2,bv_normalize,PASS,6.223793,
34,AliveStatements,2,bv_decide,PASS,4.499229,
35,AliveStatements,2,bv_auto,PASS,199.601252,
36,AliveStatements,2,bv_automata_circuit_lean_prop,FAIL,22.234078,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq ((Term.var 0).add (Term.var 1)) ((Term.var 0).xor (Term.var 1))).eval vars w = false)) =
        true
    is false"
37,AliveStatements,2,bv_automata_circuit_lean,FAIL,7.541623,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq ((Term.var 0).add (Term.var 1)) ((Term.var 0).xor (Term.var 1))).eval vars w = false)) =
        true
    is false"
38,AliveStatements,2,bv_normalize_automata_circuit_lean,PASS,4.662922,
39,AliveStatements,2,bv_automata_circuit_cadical_prop,PASS,268.568235,
40,AliveStatements,2,bv_automata_circuit_cadical,PASS,248.445137,
41,AliveStatements,2,bv_normalize_automata_circuit_cadical,PASS,6.923574,
42,AliveStatements,2,bv_mba,FAIL,4.161214,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
43,AliveStatements,2,bv_normalize_mba,PASS,4.576006,
44,AliveStatements,3,rfl,FAIL,0.984355,"tactic 'rfl' failed, the left-hand side
      some (x✝ + x✝)
    is not definitionally equal to the right-hand side
      none
    case pos
    w : ℕ
    x✝ : BitVec w
    h✝ : 1#w ≥ ↑w
    ⊢ some (x✝ + x✝) ⊑ none"
45,AliveStatements,3,bv_bitwise,FAIL,0.12923,"applyExtTheorem only applies to equations, not
      some (x✝ + x✝) ⊑ none"
46,AliveStatements,3,bv_ac,FAIL,27.02515,internal exception #5
47,AliveStatements,3,bv_distrib,FAIL,63.136665,internal exception #5
48,AliveStatements,3,bv_ring,FAIL,224.136452,internal exception #5
49,AliveStatements,3,bv_of_bool,FAIL,22.381123,simp made no progress
50,AliveStatements,3,bv_omega,FAIL,23.989217,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 0
      a - c ≤ -1
    where
     a := ↑1 % ↑(2 ^ w)
     b := ↑(↑w).toNat
     c := ↑2 ^ w"
51,AliveStatements,3,bv_automata_classic_prop,FAIL,14.534224,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ + x✝) ⊑ none"
52,AliveStatements,3,bv_automata_classic,FAIL,3.45706,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ + x✝) ⊑ none"
53,AliveStatements,3,bv_normalize_automata_classic,FAIL,17.584954,internal exception #5
54,AliveStatements,3,simp,FAIL,56.734312,simp made no progress
55,AliveStatements,3,bv_normalize,FAIL,14.48809,internal exception #5
56,AliveStatements,3,bv_decide,FAIL,73.910868,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [1#w <ᵤ BitVec.ofNat w w]
    Consider the following assignment:
    1#w <ᵤ BitVec.ofNat w w = false"
57,AliveStatements,3,bv_auto,FAIL,452.366249,internal exception #5
58,AliveStatements,3,bv_automata_circuit_lean_prop,FAIL,20.612416,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ + x✝) ⊑ none"
59,AliveStatements,3,bv_automata_circuit_lean,FAIL,5.003551,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ + x✝) ⊑ none"
60,AliveStatements,3,bv_normalize_automata_circuit_lean,FAIL,24.338901,internal exception #5
61,AliveStatements,3,bv_automata_circuit_cadical_prop,FAIL,25.045566,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ + x✝) ⊑ none"
62,AliveStatements,3,bv_automata_circuit_cadical,FAIL,8.02175,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ + x✝) ⊑ none"
63,AliveStatements,3,bv_normalize_automata_circuit_cadical,FAIL,24.447542,internal exception #5
64,AliveStatements,3,bv_mba,FAIL,0.31942,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some (x✝ + x✝) ⊑ none
    case pos
    w : ℕ
    x✝ : BitVec w
    h✝ : 1#w ≥ ↑w
    ⊢ some (x✝ + x✝) ⊑ none"
65,AliveStatements,3,bv_normalize_mba,FAIL,14.728874,internal exception #5
66,AliveStatements,4,rfl,FAIL,18.750583,"tactic 'rfl' failed, the left-hand side
      x✝ + x✝
    is not definitionally equal to the right-hand side
      x✝ <<< 1#w
    case neg
    w : ℕ
    x✝ : BitVec w
    h✝ : ¬1#w ≥ ↑w
    ⊢ x✝ + x✝ = x✝ <<< 1#w"
67,AliveStatements,4,bv_bitwise,FAIL,770.089297,internal exception #5
68,AliveStatements,4,bv_ac,FAIL,35.436233,internal exception #5
69,AliveStatements,4,bv_distrib,FAIL,610.493858,internal exception #5
70,AliveStatements,4,bv_ring,FAIL,389.755525,internal exception #5
71,AliveStatements,4,bv_of_bool,FAIL,32.211616,simp made no progress
72,AliveStatements,4,bv_omega,FAIL,38.354466,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑1 % ↑(2 ^ w)
     c := ↑2 ^ w
     d := ↑(x✝ <<< 1#w).toNat
     e := ↑(x✝.toNat + x✝.toNat) % ↑(2 ^ w)"
73,AliveStatements,4,bv_automata_classic_prop,FAIL,26.019334,"expected shiftLeft by natural number, found symbolic shift amount '1#w' at '
      x✝ <<< 1#w'"
74,AliveStatements,4,bv_automata_classic,FAIL,7.482026,"expected shiftLeft by natural number, found symbolic shift amount '1#w' at '
      x✝ <<< 1#w'"
75,AliveStatements,4,bv_normalize_automata_classic,FAIL,36.254993,internal exception #5
76,AliveStatements,4,simp,FAIL,577.921049,internal exception #5
77,AliveStatements,4,bv_normalize,FAIL,30.89004,internal exception #5
78,AliveStatements,4,bv_decide,FAIL,118.665245,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ * 2#w == x✝ <<< (1 % 2 ^ w),
     1#w <ᵤ BitVec.ofNat w w]
    Consider the following assignment:
    1#w <ᵤ BitVec.ofNat w w = true
    x✝ * 2#w == x✝ <<< (1 % 2 ^ w) = false"
79,AliveStatements,4,bv_auto,FAIL,7333.097159,internal exception #5
80,AliveStatements,4,bv_automata_circuit_lean_prop,FAIL,20.447517,"expected shiftLeft by natural number, found symbolic shift amount '1#w' at '
      x✝ <<< 1#w'"
81,AliveStatements,4,bv_automata_circuit_lean,FAIL,4.118421,"expected shiftLeft by natural number, found symbolic shift amount '1#w' at '
      x✝ <<< 1#w'"
82,AliveStatements,4,bv_normalize_automata_circuit_lean,FAIL,21.108356,internal exception #5
83,AliveStatements,4,bv_automata_circuit_cadical_prop,FAIL,20.903264,"expected shiftLeft by natural number, found symbolic shift amount '1#w' at '
      x✝ <<< 1#w'"
84,AliveStatements,4,bv_automata_circuit_cadical,FAIL,6.139927,"expected shiftLeft by natural number, found symbolic shift amount '1#w' at '
      x✝ <<< 1#w'"
85,AliveStatements,4,bv_normalize_automata_circuit_cadical,FAIL,24.84805,internal exception #5
86,AliveStatements,4,bv_mba,FAIL,5.683544,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
87,AliveStatements,4,bv_normalize_mba,FAIL,21.478389,internal exception #5
88,AliveStatements,5,rfl,FAIL,11.941182,"tactic 'rfl' failed, the left-hand side
      0#w - x✝ + x✝¹
    is not definitionally equal to the right-hand side
      x✝¹ - x✝
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ 0#w - x✝ + x✝¹ = x✝¹ - x✝"
89,AliveStatements,5,bv_bitwise,FAIL,430.9047,internal exception #5
90,AliveStatements,5,bv_ac,FAIL,38.477368,internal exception #5
91,AliveStatements,5,bv_distrib,FAIL,406.476975,internal exception #5
92,AliveStatements,5,bv_ring,PASS,363.72872,
93,AliveStatements,5,bv_of_bool,FAIL,31.878484,simp made no progress
94,AliveStatements,5,bv_omega,FAIL,17.637573,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝¹.toNat + (2 ^ w - x✝.toNat)) % ↑(2 ^ w)
     b := ↑((0 % 2 ^ w + (2 ^ w - x✝.toNat)) % 2 ^ w + x✝¹.toNat) % ↑(2 ^ w)
     c := ↑2 ^ w"
95,AliveStatements,5,bv_automata_classic_prop,PASS,11188.564089,
96,AliveStatements,5,bv_automata_classic,PASS,8.511174,
97,AliveStatements,5,bv_normalize_automata_classic,PASS,27.453893,
98,AliveStatements,5,simp,FAIL,180.502296,internal exception #5
99,AliveStatements,5,bv_normalize,PASS,16.137028,
100,AliveStatements,5,bv_decide,PASS,16.112246,
101,AliveStatements,5,bv_auto,PASS,639.394513,
102,AliveStatements,5,bv_automata_circuit_lean_prop,PASS,30.375126,
103,AliveStatements,5,bv_automata_circuit_lean,PASS,15.463785,
104,AliveStatements,5,bv_normalize_automata_circuit_lean,PASS,16.100957,
105,AliveStatements,5,bv_automata_circuit_cadical_prop,PASS,274.141518,
106,AliveStatements,5,bv_automata_circuit_cadical,PASS,270.041729,
107,AliveStatements,5,bv_normalize_automata_circuit_cadical,PASS,19.031235,
108,AliveStatements,5,bv_mba,FAIL,6.980581,"unable to reflect term '
      BitVec.ofInt w 0'.
    Expected 'int * variable'."
109,AliveStatements,5,bv_normalize_mba,PASS,16.260008,
110,AliveStatements,6,rfl,FAIL,34.113237,"tactic 'rfl' failed, the left-hand side
      0#w - x✝ + (0#w - x✝¹)
    is not definitionally equal to the right-hand side
      0#w - (x✝ + x✝¹)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ 0#w - x✝ + (0#w - x✝¹) = 0#w - (x✝ + x✝¹)"
111,AliveStatements,6,bv_bitwise,PASS,637.71312,
112,AliveStatements,6,bv_ac,FAIL,67.453797,internal exception #5
113,AliveStatements,6,bv_distrib,FAIL,561.301972,internal exception #5
114,AliveStatements,6,bv_ring,FAIL,621.529763,internal exception #5
115,AliveStatements,6,bv_of_bool,FAIL,45.679679,simp made no progress
116,AliveStatements,6,bv_omega,FAIL,23.353854,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(0 % 2 ^ w + (2 ^ w - (x✝.toNat + x✝¹.toNat) % 2 ^ w)) % ↑(2 ^ w)
     b := ↑((0 % 2 ^ w + (2 ^ w - x✝.toNat)) % 2 ^ w + (0 % 2 ^ w + (2 ^ w - x✝¹.toNat)) % 2 ^ w) % ↑(2 ^ w)
     c := ↑2 ^ w"
117,AliveStatements,6,bv_automata_classic_prop,PASS,12538.452886,
118,AliveStatements,6,bv_automata_classic,PASS,9.171217,
119,AliveStatements,6,bv_normalize_automata_classic,PASS,27.988682,
120,AliveStatements,6,simp,FAIL,265.67793,internal exception #5
121,AliveStatements,6,bv_normalize,FAIL,17.516784,internal exception #5
122,AliveStatements,6,bv_decide,FAIL,87.5851,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [-x✝ + -x✝¹ == -(x✝ + x✝¹)]
    Consider the following assignment:
    -x✝ + -x✝¹ == -(x✝ + x✝¹) = false"
123,AliveStatements,6,bv_auto,PASS,278.101962,
124,AliveStatements,6,bv_automata_circuit_lean_prop,PASS,66.216707,
125,AliveStatements,6,bv_automata_circuit_lean,PASS,51.51844,
126,AliveStatements,6,bv_normalize_automata_circuit_lean,PASS,68.588262,
127,AliveStatements,6,bv_automata_circuit_cadical_prop,PASS,273.146192,
128,AliveStatements,6,bv_automata_circuit_cadical,PASS,249.063735,
129,AliveStatements,6,bv_normalize_automata_circuit_cadical,PASS,266.45249,
130,AliveStatements,6,bv_mba,FAIL,11.004029,"unable to reflect term '
      BitVec.ofInt w 0'.
    Expected 'int * variable'."
131,AliveStatements,6,bv_normalize_mba,FAIL,28.317611,internal exception #5
132,AliveStatements,7,rfl,FAIL,15.535758,"tactic 'rfl' failed, the left-hand side
      x✝ + (0#w - x✝¹)
    is not definitionally equal to the right-hand side
      x✝ - x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ + (0#w - x✝¹) = x✝ - x✝¹"
133,AliveStatements,7,bv_bitwise,PASS,349.152694,
134,AliveStatements,7,bv_ac,FAIL,49.511347,internal exception #5
135,AliveStatements,7,bv_distrib,FAIL,368.379587,internal exception #5
136,AliveStatements,7,bv_ring,FAIL,413.228491,internal exception #5
137,AliveStatements,7,bv_of_bool,FAIL,34.031642,simp made no progress
138,AliveStatements,7,bv_omega,FAIL,19.517788,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝.toNat + (2 ^ w - x✝¹.toNat)) % ↑(2 ^ w)
     b := ↑(x✝.toNat + (0 % 2 ^ w + (2 ^ w - x✝¹.toNat)) % 2 ^ w) % ↑(2 ^ w)
     c := ↑2 ^ w"
139,AliveStatements,7,bv_automata_classic_prop,PASS,15309.265543,
140,AliveStatements,7,bv_automata_classic,PASS,7.971324,
141,AliveStatements,7,bv_normalize_automata_classic,PASS,7.114975,
142,AliveStatements,7,simp,FAIL,148.884459,internal exception #5
143,AliveStatements,7,bv_normalize,PASS,6.642851,
144,AliveStatements,7,bv_decide,PASS,6.636829,
145,AliveStatements,7,bv_auto,PASS,167.559706,
146,AliveStatements,7,bv_automata_circuit_lean_prop,PASS,30.942805,
147,AliveStatements,7,bv_automata_circuit_lean,PASS,15.382581,
148,AliveStatements,7,bv_normalize_automata_circuit_lean,PASS,6.857173,
149,AliveStatements,7,bv_automata_circuit_cadical_prop,PASS,272.858766,
150,AliveStatements,7,bv_automata_circuit_cadical,PASS,249.414845,
151,AliveStatements,7,bv_normalize_automata_circuit_cadical,PASS,9.655425,
152,AliveStatements,7,bv_mba,FAIL,6.136623,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
153,AliveStatements,7,bv_normalize_mba,PASS,6.973713,
154,AliveStatements,8,rfl,FAIL,13.730407,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ -1#w) + x✝¹
    is not definitionally equal to the right-hand side
      x✝¹ - 1#w - x✝
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ -1#w) + x✝¹ = x✝¹ - 1#w - x✝"
155,AliveStatements,8,bv_bitwise,FAIL,541.569642,internal exception #5
156,AliveStatements,8,bv_ac,FAIL,48.456541,internal exception #5
157,AliveStatements,8,bv_distrib,FAIL,344.381777,internal exception #5
158,AliveStatements,8,bv_ring,FAIL,498.353664,internal exception #5
159,AliveStatements,8,bv_of_bool,FAIL,35.731667,simp made no progress
160,AliveStatements,8,bv_omega,FAIL,21.060778,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝¹.toNat + (2 ^ w - 1 % 2 ^ w)) % 2 ^ w + (2 ^ w - x✝.toNat)) % ↑(2 ^ w)
     b := ↑((x✝ ^^^ -1#w).toNat + x✝¹.toNat) % ↑(2 ^ w)
     c := ↑2 ^ w"
161,AliveStatements,8,bv_automata_classic_prop,PASS,16071.46363,
162,AliveStatements,8,bv_automata_classic,PASS,9.088359,
163,AliveStatements,8,bv_normalize_automata_classic,PASS,30.144306,
164,AliveStatements,8,simp,FAIL,129.305862,simp made no progress
165,AliveStatements,8,bv_normalize,FAIL,20.851541,internal exception #5
166,AliveStatements,8,bv_decide,FAIL,85.943442,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ ^^^ -1#w) + x✝¹ == x✝¹ + -1#w + -x✝]
    Consider the following assignment:
    (x✝ ^^^ -1#w) + x✝¹ == x✝¹ + -1#w + -x✝ = false"
167,AliveStatements,8,bv_auto,PASS,721.273593,
168,AliveStatements,8,bv_automata_circuit_lean_prop,PASS,108.573316,
169,AliveStatements,8,bv_automata_circuit_lean,PASS,94.126566,
170,AliveStatements,8,bv_normalize_automata_circuit_lean,PASS,114.573821,
171,AliveStatements,8,bv_automata_circuit_cadical_prop,PASS,270.960845,
172,AliveStatements,8,bv_automata_circuit_cadical,PASS,249.372566,
173,AliveStatements,8,bv_normalize_automata_circuit_cadical,PASS,271.561515,
174,AliveStatements,8,bv_mba,FAIL,9.767662,"unable to reflect term '
      x✝ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
175,AliveStatements,8,bv_normalize_mba,FAIL,31.076111,internal exception #5
176,AliveStatements,9,rfl,FAIL,7.76909,"tactic 'rfl' failed, the left-hand side
      (x✝ &&& x✝¹) + (x✝ ^^^ x✝¹)
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹) + (x✝ ^^^ x✝¹) = x✝ ||| x✝¹"
177,AliveStatements,9,bv_bitwise,PASS,232.494461,
178,AliveStatements,9,bv_ac,FAIL,62.326949,internal exception #5
179,AliveStatements,9,bv_distrib,PASS,229.232607,
180,AliveStatements,9,bv_ring,FAIL,287.234144,internal exception #5
181,AliveStatements,9,bv_of_bool,FAIL,37.666028,simp made no progress
182,AliveStatements,9,bv_omega,FAIL,29.46444,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹).toNat
     b := ↑((x✝ &&& x✝¹).toNat + (x✝ ^^^ x✝¹).toNat) % ↑(2 ^ w)
     c := ↑2 ^ w"
183,AliveStatements,9,bv_automata_classic_prop,PASS,19452.83873,
184,AliveStatements,9,bv_automata_classic,PASS,8.407031,
185,AliveStatements,9,bv_normalize_automata_classic,PASS,23.469373,
186,AliveStatements,9,simp,PASS,89.222416,
187,AliveStatements,9,bv_normalize,FAIL,15.26231,internal exception #5
188,AliveStatements,9,bv_decide,FAIL,81.045483,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ &&& x✝¹) + (x✝ ^^^ x✝¹) ==
       ~~~(~~~x✝ &&& ~~~x✝¹)]
    Consider the following assignment:
    (x✝ &&& x✝¹) + (x✝ ^^^ x✝¹) == ~~~(~~~x✝ &&& ~~~x✝¹) = false"
189,AliveStatements,9,bv_auto,PASS,106.107912,
190,AliveStatements,9,bv_automata_circuit_lean_prop,PASS,23.8802,
191,AliveStatements,9,bv_automata_circuit_lean,PASS,8.380933,
192,AliveStatements,9,bv_normalize_automata_circuit_lean,PASS,23.768364,
193,AliveStatements,9,bv_automata_circuit_cadical_prop,PASS,270.568832,
194,AliveStatements,9,bv_automata_circuit_cadical,PASS,247.64118,
195,AliveStatements,9,bv_normalize_automata_circuit_cadical,PASS,264.752346,
196,AliveStatements,9,bv_mba,FAIL,4.801858,"unable to reflect term '
      x✝ &&& x✝¹'.
    Expected 'int * variable'."
197,AliveStatements,9,bv_normalize_mba,FAIL,19.815107,internal exception #5
198,AliveStatements,10,rfl,FAIL,14.647787,"tactic 'rfl' failed, the left-hand side
      (x✝ &&& x✝¹) + (x✝ ||| x✝¹)
    is not definitionally equal to the right-hand side
      x✝ + x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹) + (x✝ ||| x✝¹) = x✝ + x✝¹"
199,AliveStatements,10,bv_bitwise,PASS,225.484354,
200,AliveStatements,10,bv_ac,FAIL,65.771492,internal exception #5
201,AliveStatements,10,bv_distrib,PASS,215.278541,
202,AliveStatements,10,bv_ring,FAIL,315.777673,internal exception #5
203,AliveStatements,10,bv_of_bool,FAIL,47.152451,simp made no progress
204,AliveStatements,10,bv_omega,FAIL,15.018501,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝.toNat + x✝¹.toNat) % ↑(2 ^ w)
     b := ↑((x✝ &&& x✝¹).toNat + (x✝ ||| x✝¹).toNat) % ↑(2 ^ w)
     c := ↑2 ^ w"
205,AliveStatements,10,bv_automata_classic_prop,PASS,20727.250304,
206,AliveStatements,10,bv_automata_classic,PASS,8.371894,
207,AliveStatements,10,bv_normalize_automata_classic,PASS,29.372885,
208,AliveStatements,10,simp,PASS,84.776523,
209,AliveStatements,10,bv_normalize,FAIL,21.441591,internal exception #5
210,AliveStatements,10,bv_decide,FAIL,85.7767,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ &&& x✝¹) + ~~~(~~~x✝ &&& ~~~x✝¹) ==
       x✝ + x✝¹]
    Consider the following assignment:
    (x✝ &&& x✝¹) + ~~~(~~~x✝ &&& ~~~x✝¹) == x✝ + x✝¹ = false"
211,AliveStatements,10,bv_auto,PASS,102.672101,
212,AliveStatements,10,bv_automata_circuit_lean_prop,PASS,23.565563,
213,AliveStatements,10,bv_automata_circuit_lean,PASS,8.493763,
214,AliveStatements,10,bv_normalize_automata_circuit_lean,PASS,32.732668,
215,AliveStatements,10,bv_automata_circuit_cadical_prop,PASS,269.805453,
216,AliveStatements,10,bv_automata_circuit_cadical,PASS,249.509434,
217,AliveStatements,10,bv_normalize_automata_circuit_cadical,PASS,272.258727,
218,AliveStatements,10,bv_mba,FAIL,5.128047,"unable to reflect term '
      x✝ &&& x✝¹'.
    Expected 'int * variable'."
219,AliveStatements,10,bv_normalize_mba,FAIL,27.153896,internal exception #5
220,AliveStatements,11,rfl,FAIL,11.787306,"tactic 'rfl' failed, the left-hand side
      x✝ - (0#w - x✝¹)
    is not definitionally equal to the right-hand side
      x✝ + x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ - (0#w - x✝¹) = x✝ + x✝¹"
221,AliveStatements,11,bv_bitwise,PASS,338.885205,
222,AliveStatements,11,bv_ac,FAIL,41.95385,internal exception #5
223,AliveStatements,11,bv_distrib,PASS,356.14618,
224,AliveStatements,11,bv_ring,FAIL,375.817488,internal exception #5
225,AliveStatements,11,bv_of_bool,FAIL,30.413523,simp made no progress
226,AliveStatements,11,bv_omega,FAIL,18.423109,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝.toNat + x✝¹.toNat) % ↑(2 ^ w)
     b := ↑(x✝.toNat + (2 ^ w - (0 % 2 ^ w + (2 ^ w - x✝¹.toNat)) % 2 ^ w)) % ↑(2 ^ w)
     c := ↑2 ^ w"
227,AliveStatements,11,bv_automata_classic_prop,PASS,21876.644293,
228,AliveStatements,11,bv_automata_classic,PASS,7.714832,
229,AliveStatements,11,bv_normalize_automata_classic,PASS,23.752045,
230,AliveStatements,11,simp,PASS,145.377931,
231,AliveStatements,11,bv_normalize,FAIL,15.900556,internal exception #5
232,AliveStatements,11,bv_decide,FAIL,81.122051,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [- -x✝¹ == x✝¹]
    Consider the following assignment:
    - -x✝¹ == x✝¹ = false"
233,AliveStatements,11,bv_auto,PASS,163.124271,
234,AliveStatements,11,bv_automata_circuit_lean_prop,PASS,29.319819,
235,AliveStatements,11,bv_automata_circuit_lean,PASS,17.607414,
236,AliveStatements,11,bv_normalize_automata_circuit_lean,PASS,31.22883,
237,AliveStatements,11,bv_automata_circuit_cadical_prop,PASS,269.49179,
238,AliveStatements,11,bv_automata_circuit_cadical,PASS,247.528127,
239,AliveStatements,11,bv_normalize_automata_circuit_cadical,PASS,263.622782,
240,AliveStatements,11,bv_mba,FAIL,8.169551,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
241,AliveStatements,11,bv_normalize_mba,FAIL,24.209221,internal exception #5
242,AliveStatements,12,rfl,FAIL,7.316527,"tactic 'rfl' failed, the left-hand side
      x✝ - x✝¹
    is not definitionally equal to the right-hand side
      x✝ + -x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ - x✝¹ = x✝ + -x✝¹"
243,AliveStatements,12,bv_bitwise,PASS,212.268631,
244,AliveStatements,12,bv_ac,FAIL,29.158906,internal exception #5
245,AliveStatements,12,bv_distrib,FAIL,191.12925,internal exception #5
246,AliveStatements,12,bv_ring,PASS,300.882236,
247,AliveStatements,12,bv_of_bool,FAIL,30.88271,simp made no progress
248,AliveStatements,12,bv_omega,FAIL,15.115693,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝.toNat + (2 ^ w - x✝¹.toNat) % 2 ^ w) % ↑(2 ^ w)
     b := ↑(x✝.toNat + (2 ^ w - x✝¹.toNat)) % ↑(2 ^ w)
     c := ↑2 ^ w"
249,AliveStatements,12,bv_automata_classic_prop,PASS,23758.698317,
250,AliveStatements,12,bv_automata_classic,PASS,7.393932,
251,AliveStatements,12,bv_normalize_automata_classic,PASS,4.569678,
252,AliveStatements,12,simp,FAIL,78.315509,simp made no progress
253,AliveStatements,12,bv_normalize,PASS,4.075207,
254,AliveStatements,12,bv_decide,PASS,4.16398,
255,AliveStatements,12,bv_auto,PASS,96.157165,
256,AliveStatements,12,bv_automata_circuit_lean_prop,PASS,34.109139,
257,AliveStatements,12,bv_automata_circuit_lean,PASS,15.732067,
258,AliveStatements,12,bv_normalize_automata_circuit_lean,PASS,4.354469,
259,AliveStatements,12,bv_automata_circuit_cadical_prop,PASS,270.637141,
260,AliveStatements,12,bv_automata_circuit_cadical,PASS,247.800033,
261,AliveStatements,12,bv_normalize_automata_circuit_cadical,PASS,7.00787,
262,AliveStatements,12,bv_mba,FAIL,4.59327,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
263,AliveStatements,12,bv_normalize_mba,PASS,4.399195,
264,AliveStatements,13,rfl,FAIL,5.36563,"tactic 'rfl' failed, the left-hand side
      x✝ - x✝¹
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    x✝¹ x✝ : BitVec 1
    ⊢ x✝ - x✝¹ = x✝ ^^^ x✝¹"
265,AliveStatements,13,bv_bitwise,FAIL,274.31594,internal exception #5
266,AliveStatements,13,bv_ac,FAIL,24.053539,internal exception #5
267,AliveStatements,13,bv_distrib,FAIL,144.924159,internal exception #5
268,AliveStatements,13,bv_ring,FAIL,270.182899,internal exception #5
269,AliveStatements,13,bv_of_bool,FAIL,41.134556,simp made no progress
270,AliveStatements,13,bv_omega,FAIL,18.984728,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ d ≤ 1
      0 ≤ b ≤ 1
      -2 ≤ b - 2*c - d ≤ -1
      0 ≤ a ≤ 1
      a - b + 2*c + d ≥ 3
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑x✝.toNat
     c := ↑(x✝.toNat + (2 ^ 1 - x✝¹.toNat)) / 2
     d := ↑x✝¹.toNat"
271,AliveStatements,13,bv_automata_classic_prop,FAIL,24679.922946,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 0).sub (Copy.Term.var 1))
                    ((Copy.Term.var 0).xor (Copy.Term.var 1)))) =
              true)) =
        true
    is false"
272,AliveStatements,13,bv_automata_classic,FAIL,7.311025,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 0).sub (Copy.Term.var 1))
                    ((Copy.Term.var 0).xor (Copy.Term.var 1)))) =
              true)) =
        true
    is false"
273,AliveStatements,13,bv_normalize_automata_classic,FAIL,23.881419,internal exception #5
274,AliveStatements,13,simp,FAIL,58.926176,simp made no progress
275,AliveStatements,13,bv_normalize,FAIL,16.332258,internal exception #5
276,AliveStatements,13,bv_decide,PASS,86.395646,
277,AliveStatements,13,bv_auto,PASS,483.033028,
278,AliveStatements,13,bv_automata_circuit_lean_prop,FAIL,20.180623,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq ((Term.var 0).sub (Term.var 1)) ((Term.var 0).xor (Term.var 1))).eval vars w = false)) =
        true
    is false"
279,AliveStatements,13,bv_automata_circuit_lean,FAIL,7.251327,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq ((Term.var 0).sub (Term.var 1)) ((Term.var 0).xor (Term.var 1))).eval vars w = false)) =
        true
    is false"
280,AliveStatements,13,bv_normalize_automata_circuit_lean,FAIL,23.247328,internal exception #5
281,AliveStatements,13,bv_automata_circuit_cadical_prop,PASS,263.92542,
282,AliveStatements,13,bv_automata_circuit_cadical,PASS,247.288141,
283,AliveStatements,13,bv_normalize_automata_circuit_cadical,PASS,265.141985,
284,AliveStatements,13,bv_mba,FAIL,4.517249,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
285,AliveStatements,13,bv_normalize_mba,FAIL,20.836367,internal exception #5
286,AliveStatements,14,rfl,FAIL,14.057072,"tactic 'rfl' failed, the left-hand side
      -1#w - x✝
    is not definitionally equal to the right-hand side
      x✝ ^^^ -1#w
    case some
    w : ℕ
    x✝ : BitVec w
    ⊢ -1#w - x✝ = x✝ ^^^ -1#w"
287,AliveStatements,14,bv_bitwise,PASS,345.141406,
288,AliveStatements,14,bv_ac,FAIL,45.539624,internal exception #5
289,AliveStatements,14,bv_distrib,FAIL,203.231238,internal exception #5
290,AliveStatements,14,bv_ring,FAIL,445.190445,internal exception #5
291,AliveStatements,14,bv_of_bool,FAIL,32.287532,simp made no progress
292,AliveStatements,14,bv_omega,FAIL,18.441383,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ -1#w).toNat
     b := ↑((2 ^ w - 1 % 2 ^ w) % 2 ^ w + (2 ^ w - x✝.toNat)) % ↑(2 ^ w)
     c := ↑2 ^ w"
293,AliveStatements,14,bv_automata_classic_prop,PASS,26367.347808,
294,AliveStatements,14,bv_automata_classic,PASS,7.186366,
295,AliveStatements,14,bv_normalize_automata_classic,PASS,20.274449,
296,AliveStatements,14,simp,FAIL,71.590785,simp made no progress
297,AliveStatements,14,bv_normalize,FAIL,13.076032,internal exception #5
298,AliveStatements,14,bv_decide,FAIL,77.728878,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [-1#w + -x✝ == x✝ ^^^ -1#w]
    Consider the following assignment:
    -1#w + -x✝ == x✝ ^^^ -1#w = false"
299,AliveStatements,14,bv_auto,PASS,162.783339,
300,AliveStatements,14,bv_automata_circuit_lean_prop,PASS,29.040171,
301,AliveStatements,14,bv_automata_circuit_lean,PASS,13.991901,
302,AliveStatements,14,bv_normalize_automata_circuit_lean,PASS,26.952327,
303,AliveStatements,14,bv_automata_circuit_cadical_prop,PASS,266.028998,
304,AliveStatements,14,bv_automata_circuit_cadical,PASS,248.152989,
305,AliveStatements,14,bv_normalize_automata_circuit_cadical,PASS,263.084943,
306,AliveStatements,14,bv_mba,FAIL,5.709828,"unable to reflect term '
      BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
307,AliveStatements,14,bv_normalize_mba,FAIL,18.70525,internal exception #5
308,AliveStatements,15,rfl,FAIL,25.661647,"tactic 'rfl' failed, the left-hand side
      x✝ - (x✝¹ ^^^ -1#w)
    is not definitionally equal to the right-hand side
      x✝¹ + (x✝ + 1#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ - (x✝¹ ^^^ -1#w) = x✝¹ + (x✝ + 1#w)"
309,AliveStatements,15,bv_bitwise,FAIL,543.659359,internal exception #5
310,AliveStatements,15,bv_ac,FAIL,75.896555,internal exception #5
311,AliveStatements,15,bv_distrib,FAIL,300.117747,internal exception #5
312,AliveStatements,15,bv_ring,FAIL,464.468409,internal exception #5
313,AliveStatements,15,bv_of_bool,FAIL,39.34098,simp made no progress
314,AliveStatements,15,bv_omega,FAIL,20.379965,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝¹.toNat + (x✝.toNat + 1 % 2 ^ w) % 2 ^ w) % ↑(2 ^ w)
     b := ↑(x✝.toNat + (2 ^ w - (x✝¹ ^^^ -1#w).toNat)) % ↑(2 ^ w)
     c := ↑2 ^ w"
315,AliveStatements,15,bv_automata_classic_prop,PASS,27219.003775,
316,AliveStatements,15,bv_automata_classic,PASS,8.869393,
317,AliveStatements,15,bv_normalize_automata_classic,PASS,29.43667,
318,AliveStatements,15,simp,FAIL,111.967786,simp made no progress
319,AliveStatements,15,bv_normalize,FAIL,20.091965,internal exception #5
320,AliveStatements,15,bv_decide,FAIL,85.201446,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ + -(x✝¹ ^^^ -1#w) ==
       x✝¹ + (x✝ + 1#w)]
    Consider the following assignment:
    x✝ + -(x✝¹ ^^^ -1#w) == x✝¹ + (x✝ + 1#w) = false"
321,AliveStatements,15,bv_auto,PASS,695.821964,
322,AliveStatements,15,bv_automata_circuit_lean_prop,PASS,120.658668,
323,AliveStatements,15,bv_automata_circuit_lean,PASS,104.60588,
324,AliveStatements,15,bv_normalize_automata_circuit_lean,PASS,123.897958,
325,AliveStatements,15,bv_automata_circuit_cadical_prop,PASS,273.187495,
326,AliveStatements,15,bv_automata_circuit_cadical,PASS,249.197065,
327,AliveStatements,15,bv_normalize_automata_circuit_cadical,PASS,270.549883,
328,AliveStatements,15,bv_mba,FAIL,7.783738,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
329,AliveStatements,15,bv_normalize_mba,FAIL,28.031336,internal exception #5
330,AliveStatements,16,rfl,FAIL,21.933779,"tactic 'rfl' failed, the left-hand side
      x✝ - (x✝¹ + x✝²)
    is not definitionally equal to the right-hand side
      x✝ - x✝² - x✝¹
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ x✝ - (x✝¹ + x✝²) = x✝ - x✝² - x✝¹"
331,AliveStatements,16,bv_bitwise,FAIL,523.90338,internal exception #5
332,AliveStatements,16,bv_ac,FAIL,39.758418,internal exception #5
333,AliveStatements,16,bv_distrib,FAIL,366.887674,internal exception #5
334,AliveStatements,16,bv_ring,PASS,281.58754,
335,AliveStatements,16,bv_of_bool,FAIL,32.326343,simp made no progress
336,AliveStatements,16,bv_omega,FAIL,18.516233,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝.toNat + (2 ^ w - x✝².toNat)) % 2 ^ w + (2 ^ w - x✝¹.toNat)) % ↑(2 ^ w)
     b := ↑(x✝.toNat + (2 ^ w - (x✝¹.toNat + x✝².toNat) % 2 ^ w)) % ↑(2 ^ w)
     c := ↑2 ^ w"
337,AliveStatements,16,bv_automata_classic_prop,PASS,30008.759936,
338,AliveStatements,16,bv_automata_classic,PASS,8.816081,
339,AliveStatements,16,bv_normalize_automata_classic,PASS,30.423595,
340,AliveStatements,16,simp,FAIL,162.402922,internal exception #5
341,AliveStatements,16,bv_normalize,FAIL,20.879091,internal exception #5
342,AliveStatements,16,bv_decide,FAIL,87.114739,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ + -(x✝¹ + x✝²) == x✝ + -x✝² + -x✝¹]
    Consider the following assignment:
    x✝ + -(x✝¹ + x✝²) == x✝ + -x✝² + -x✝¹ = false"
343,AliveStatements,16,bv_auto,PASS,585.589254,
344,AliveStatements,16,bv_automata_circuit_lean_prop,PASS,158.518438,
345,AliveStatements,16,bv_automata_circuit_lean,PASS,143.468393,
346,AliveStatements,16,bv_normalize_automata_circuit_lean,PASS,164.420849,
347,AliveStatements,16,bv_automata_circuit_cadical_prop,PASS,272.47417,
348,AliveStatements,16,bv_automata_circuit_cadical,PASS,249.418634,
349,AliveStatements,16,bv_normalize_automata_circuit_cadical,PASS,272.250853,
350,AliveStatements,16,bv_mba,FAIL,8.801657,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
351,AliveStatements,16,bv_normalize_mba,FAIL,30.037627,internal exception #5
352,AliveStatements,17,rfl,FAIL,20.151721,"tactic 'rfl' failed, the left-hand side
      x✝ - (x✝ + x✝¹)
    is not definitionally equal to the right-hand side
      0#w - x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ - (x✝ + x✝¹) = 0#w - x✝¹"
353,AliveStatements,17,bv_bitwise,PASS,339.801605,
354,AliveStatements,17,bv_ac,FAIL,36.227376,internal exception #5
355,AliveStatements,17,bv_distrib,PASS,327.02719,
356,AliveStatements,17,bv_ring,FAIL,329.639272,internal exception #5
357,AliveStatements,17,bv_of_bool,FAIL,30.39893,simp made no progress
358,AliveStatements,17,bv_omega,FAIL,18.583289,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(0 % 2 ^ w + (2 ^ w - x✝¹.toNat)) % ↑(2 ^ w)
     b := ↑(x✝.toNat + (2 ^ w - (x✝.toNat + x✝¹.toNat) % 2 ^ w)) % ↑(2 ^ w)
     c := ↑2 ^ w"
359,AliveStatements,17,bv_automata_classic_prop,PASS,33101.29817,
360,AliveStatements,17,bv_automata_classic,PASS,7.809347,
361,AliveStatements,17,bv_normalize_automata_classic,PASS,22.863978,
362,AliveStatements,17,simp,PASS,148.54813,
363,AliveStatements,17,bv_normalize,FAIL,14.649584,internal exception #5
364,AliveStatements,17,bv_decide,FAIL,81.847689,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ + -(x✝ + x✝¹) == -x✝¹]
    Consider the following assignment:
    x✝ + -(x✝ + x✝¹) == -x✝¹ = false"
365,AliveStatements,17,bv_auto,PASS,163.61863,
366,AliveStatements,17,bv_automata_circuit_lean_prop,PASS,29.439376,
367,AliveStatements,17,bv_automata_circuit_lean,PASS,14.668044,
368,AliveStatements,17,bv_normalize_automata_circuit_lean,PASS,29.267285,
369,AliveStatements,17,bv_automata_circuit_cadical_prop,PASS,269.061217,
370,AliveStatements,17,bv_automata_circuit_cadical,PASS,248.330583,
371,AliveStatements,17,bv_normalize_automata_circuit_cadical,PASS,264.274033,
372,AliveStatements,17,bv_mba,FAIL,8.33694,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
373,AliveStatements,17,bv_normalize_mba,FAIL,22.647646,internal exception #5
374,AliveStatements,18,rfl,FAIL,24.265418,"tactic 'rfl' failed, the left-hand side
      x✝ - x✝¹ - x✝
    is not definitionally equal to the right-hand side
      0#w - x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ - x✝¹ - x✝ = 0#w - x✝¹"
375,AliveStatements,18,bv_bitwise,PASS,340.304891,
376,AliveStatements,18,bv_ac,FAIL,35.238923,internal exception #5
377,AliveStatements,18,bv_distrib,PASS,324.623395,
378,AliveStatements,18,bv_ring,FAIL,367.432898,internal exception #5
379,AliveStatements,18,bv_of_bool,FAIL,28.979915,simp made no progress
380,AliveStatements,18,bv_omega,FAIL,17.338838,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(0 % 2 ^ w + (2 ^ w - x✝¹.toNat)) % ↑(2 ^ w)
     b := ↑((x✝.toNat + (2 ^ w - x✝¹.toNat)) % 2 ^ w + (2 ^ w - x✝.toNat)) % ↑(2 ^ w)
     c := ↑2 ^ w"
381,AliveStatements,18,bv_automata_classic_prop,PASS,34546.020405,
382,AliveStatements,18,bv_automata_classic,PASS,7.33758,
383,AliveStatements,18,bv_normalize_automata_classic,PASS,21.941556,
384,AliveStatements,18,simp,PASS,132.860372,
385,AliveStatements,18,bv_normalize,FAIL,14.740325,internal exception #5
386,AliveStatements,18,bv_decide,FAIL,80.387207,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ + -x✝¹ + -x✝ == -x✝¹]
    Consider the following assignment:
    x✝ + -x✝¹ + -x✝ == -x✝¹ = false"
387,AliveStatements,18,bv_auto,PASS,153.231319,
388,AliveStatements,18,bv_automata_circuit_lean_prop,PASS,28.56005,
389,AliveStatements,18,bv_automata_circuit_lean,PASS,14.635125,
390,AliveStatements,18,bv_normalize_automata_circuit_lean,PASS,28.943061,
391,AliveStatements,18,bv_automata_circuit_cadical_prop,PASS,268.478667,
392,AliveStatements,18,bv_automata_circuit_cadical,PASS,248.614271,
393,AliveStatements,18,bv_normalize_automata_circuit_cadical,PASS,263.060899,
394,AliveStatements,18,bv_mba,FAIL,8.612219,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
395,AliveStatements,18,bv_normalize_mba,FAIL,23.301957,internal exception #5
396,AliveStatements,19,rfl,FAIL,6.680665,"tactic 'rfl' failed, the left-hand side
      (x✝ ||| x✝¹) - (x✝ ^^^ x✝¹)
    is not definitionally equal to the right-hand side
      x✝ &&& x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ||| x✝¹) - (x✝ ^^^ x✝¹) = x✝ &&& x✝¹"
397,AliveStatements,19,bv_bitwise,PASS,236.702241,
398,AliveStatements,19,bv_ac,FAIL,54.267934,internal exception #5
399,AliveStatements,19,bv_distrib,PASS,227.123124,
400,AliveStatements,19,bv_ring,FAIL,335.284654,internal exception #5
401,AliveStatements,19,bv_of_bool,FAIL,34.390567,simp made no progress
402,AliveStatements,19,bv_omega,FAIL,18.062426,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& x✝¹).toNat
     b := ↑((x✝ ||| x✝¹).toNat + (2 ^ w - (x✝ ^^^ x✝¹).toNat)) % ↑(2 ^ w)
     c := ↑2 ^ w"
403,AliveStatements,19,bv_automata_classic_prop,PASS,36143.013255,
404,AliveStatements,19,bv_automata_classic,PASS,8.452187,
405,AliveStatements,19,bv_normalize_automata_classic,PASS,24.978825,
406,AliveStatements,19,simp,PASS,91.820598,
407,AliveStatements,19,bv_normalize,FAIL,16.835625,internal exception #5
408,AliveStatements,19,bv_decide,FAIL,82.157587,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~x✝¹) + -(x✝ ^^^ x✝¹) ==
       x✝ &&& x✝¹]
    Consider the following assignment:
    ~~~(~~~x✝ &&& ~~~x✝¹) + -(x✝ ^^^ x✝¹) == x✝ &&& x✝¹ = false"
409,AliveStatements,19,bv_auto,PASS,109.482525,
410,AliveStatements,19,bv_automata_circuit_lean_prop,PASS,23.371302,
411,AliveStatements,19,bv_automata_circuit_lean,PASS,8.547362,
412,AliveStatements,19,bv_normalize_automata_circuit_lean,PASS,24.776299,
413,AliveStatements,19,bv_automata_circuit_cadical_prop,PASS,269.257769,
414,AliveStatements,19,bv_automata_circuit_cadical,PASS,248.372832,
415,AliveStatements,19,bv_normalize_automata_circuit_cadical,PASS,266.159528,
416,AliveStatements,19,bv_mba,FAIL,4.967279,"unable to reflect term '
      x✝ ||| x✝¹'.
    Expected 'int * variable'."
417,AliveStatements,19,bv_normalize_mba,FAIL,21.703197,internal exception #5
418,AliveStatements,20,rfl,FAIL,5.911147,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ x✝¹) &&& x✝²
    is not definitionally equal to the right-hand side
      x✝ &&& x✝² ^^^ x✝¹ &&& x✝²
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ x✝¹) &&& x✝² = x✝ &&& x✝² ^^^ x✝¹ &&& x✝²"
419,AliveStatements,20,bv_bitwise,PASS,38262.810549,
420,AliveStatements,20,bv_ac,FAIL,25.959187,internal exception #5
421,AliveStatements,20,bv_distrib,FAIL,122.187836,internal exception #5
422,AliveStatements,20,bv_ring,FAIL,84.452098,internal exception #5
423,AliveStatements,20,bv_of_bool,FAIL,20.627757,simp made no progress
424,AliveStatements,20,bv_omega,FAIL,5.454042,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& x✝² ^^^ x✝¹ &&& x✝²).toNat
     b := ↑((x✝ ^^^ x✝¹) &&& x✝²).toNat
     c := ↑2 ^ w"
425,AliveStatements,20,bv_automata_classic_prop,PASS,21.779646,
426,AliveStatements,20,bv_automata_classic,PASS,7.938947,
427,AliveStatements,20,bv_normalize_automata_classic,PASS,18.535988,
428,AliveStatements,20,simp,FAIL,104.640464,simp made no progress
429,AliveStatements,20,bv_normalize,FAIL,10.745188,internal exception #5
430,AliveStatements,20,bv_decide,FAIL,76.967597,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ ^^^ x✝¹) &&& x✝² ==
       x✝ &&& x✝² ^^^ x✝¹ &&& x✝²]
    Consider the following assignment:
    (x✝ ^^^ x✝¹) &&& x✝² == x✝ &&& x✝² ^^^ x✝¹ &&& x✝² = false"
431,AliveStatements,20,bv_auto,PASS,223.30043,
432,AliveStatements,20,bv_automata_circuit_lean_prop,PASS,22.097627,
433,AliveStatements,20,bv_automata_circuit_lean,PASS,8.189169,
434,AliveStatements,20,bv_normalize_automata_circuit_lean,PASS,18.518468,
435,AliveStatements,20,bv_automata_circuit_cadical_prop,PASS,144.288467,
436,AliveStatements,20,bv_automata_circuit_cadical,PASS,128.041388,
437,AliveStatements,20,bv_normalize_automata_circuit_cadical,PASS,139.766294,
438,AliveStatements,20,bv_mba,FAIL,3.372244,"unable to reflect term '
      (x✝ ^^^ x✝¹) &&& x✝²'.
    Expected 'int * variable'."
439,AliveStatements,20,bv_normalize_mba,FAIL,14.273988,internal exception #5
440,AliveStatements,21,rfl,FAIL,9.578483,"tactic 'rfl' failed, the left-hand side
      (x✝ ||| x✝¹) &&& x✝²
    is not definitionally equal to the right-hand side
      (x✝ ||| x✝¹ &&& x✝²) &&& x✝²
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ ||| x✝¹) &&& x✝² = (x✝ ||| x✝¹ &&& x✝²) &&& x✝²"
441,AliveStatements,21,bv_bitwise,PASS,39662.536408,
442,AliveStatements,21,bv_ac,FAIL,26.255521,internal exception #5
443,AliveStatements,21,bv_distrib,FAIL,122.160241,internal exception #5
444,AliveStatements,21,bv_ring,FAIL,86.544239,internal exception #5
445,AliveStatements,21,bv_of_bool,FAIL,20.403521,simp made no progress
446,AliveStatements,21,bv_omega,FAIL,5.529044,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝ ||| x✝¹ &&& x✝²) &&& x✝²).toNat
     b := ↑((x✝ ||| x✝¹) &&& x✝²).toNat
     c := ↑2 ^ w"
447,AliveStatements,21,bv_automata_classic_prop,PASS,25.003723,
448,AliveStatements,21,bv_automata_classic,PASS,7.879332,
449,AliveStatements,21,bv_normalize_automata_classic,PASS,23.835414,
450,AliveStatements,21,simp,FAIL,104.484538,simp made no progress
451,AliveStatements,21,bv_normalize,FAIL,15.684612,internal exception #5
452,AliveStatements,21,bv_decide,FAIL,81.875772,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~x✝¹) &&& x✝² ==
       ~~~(~~~x✝ &&& ~~~(x✝¹ &&& x✝²)) &&& x✝²]
    Consider the following assignment:
    ~~~(~~~x✝ &&& ~~~x✝¹) &&& x✝² == ~~~(~~~x✝ &&& ~~~(x✝¹ &&& x✝²)) &&& x✝² = false"
453,AliveStatements,21,bv_auto,PASS,216.658416,
454,AliveStatements,21,bv_automata_circuit_lean_prop,PASS,22.461445,
455,AliveStatements,21,bv_automata_circuit_lean,PASS,7.903002,
456,AliveStatements,21,bv_normalize_automata_circuit_lean,PASS,23.978108,
457,AliveStatements,21,bv_automata_circuit_cadical_prop,PASS,145.027739,
458,AliveStatements,21,bv_automata_circuit_cadical,PASS,128.081687,
459,AliveStatements,21,bv_normalize_automata_circuit_cadical,PASS,143.807055,
460,AliveStatements,21,bv_mba,FAIL,3.383625,"unable to reflect term '
      (x✝ ||| x✝¹) &&& x✝²'.
    Expected 'int * variable'."
461,AliveStatements,21,bv_normalize_mba,FAIL,19.271106,internal exception #5
462,AliveStatements,22,rfl,FAIL,30.914958,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ == 0#w && x✝ &&& x✝² == 0#w
    is not definitionally equal to the right-hand side
      x✝ &&& (x✝¹ ||| x✝²) == 0#w
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹ == 0#w && x✝ &&& x✝² == 0#w) = (x✝ &&& (x✝¹ ||| x✝²) == 0#w)"
463,AliveStatements,22,bv_bitwise,FAIL,0.175662,"no applicable extensionality theorem found for
      Bool"
464,AliveStatements,22,bv_ac,FAIL,99.378336,internal exception #5
465,AliveStatements,22,bv_distrib,FAIL,321.049922,internal exception #5
466,AliveStatements,22,bv_ring,FAIL,245.035784,internal exception #5
467,AliveStatements,22,bv_of_bool,FAIL,153.275266,internal exception #5
468,AliveStatements,22,bv_omega,FAIL,9.426,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
469,AliveStatements,22,bv_automata_classic_prop,FAIL,52.574717,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = 0#w ∧ x✝ &&& x✝² = 0#w) = (x✝ &&& (x✝¹ ||| x✝²) = 0#w)"
470,AliveStatements,22,bv_automata_classic,FAIL,6.825947,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == 0#w && x✝ &&& x✝² == 0#w) = (x✝ &&& (x✝¹ ||| x✝²) == 0#w)."
471,AliveStatements,22,bv_normalize_automata_classic,FAIL,39.317907,internal exception #5
472,AliveStatements,22,simp,FAIL,242.21376,simp made no progress
473,AliveStatements,22,bv_normalize,FAIL,46.144097,internal exception #5
474,AliveStatements,22,bv_decide,FAIL,97.810282,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& ~~~(~~~x✝¹ &&& ~~~x✝²) == 0#w,
     x✝ &&& x✝² == 0#w,
     x✝ &&& x✝¹ == 0#w]
    Consider the following assignment:
    x✝ &&& x✝¹ == 0#w = true
    x✝ &&& x✝² == 0#w = true
    x✝ &&& ~~~(~~~x✝¹ &&& ~~~x✝²) == 0#w = false"
475,AliveStatements,22,bv_auto,PASS,39505.745541,
476,AliveStatements,22,bv_automata_circuit_lean_prop,FAIL,26.548654,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = 0#w ∧ x✝ &&& x✝² = 0#w) = (x✝ &&& (x✝¹ ||| x✝²) = 0#w)"
477,AliveStatements,22,bv_automata_circuit_lean,FAIL,3.030151,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == 0#w && x✝ &&& x✝² == 0#w) = (x✝ &&& (x✝¹ ||| x✝²) == 0#w)."
478,AliveStatements,22,bv_normalize_automata_circuit_lean,FAIL,20.02235,internal exception #5
479,AliveStatements,22,bv_automata_circuit_cadical_prop,FAIL,27.801993,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = 0#w ∧ x✝ &&& x✝² = 0#w) = (x✝ &&& (x✝¹ ||| x✝²) = 0#w)"
480,AliveStatements,22,bv_automata_circuit_cadical,FAIL,5.012724,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == 0#w && x✝ &&& x✝² == 0#w) = (x✝ &&& (x✝¹ ||| x✝²) == 0#w)."
481,AliveStatements,22,bv_normalize_automata_circuit_cadical,FAIL,22.498617,internal exception #5
482,AliveStatements,22,bv_mba,FAIL,1.095704,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      (x✝ &&& x✝¹ == 0#w && x✝ &&& x✝² == 0#w) = (x✝ &&& (x✝¹ ||| x✝²) == 0#w)
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹ == 0#w && x✝ &&& x✝² == 0#w) = (x✝ &&& (x✝¹ ||| x✝²) == 0#w)"
483,AliveStatements,22,bv_normalize_mba,FAIL,18.540803,internal exception #5
484,AliveStatements,23,rfl,FAIL,23.905636,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ == x✝¹ && x✝ &&& x✝² == x✝²
    is not definitionally equal to the right-hand side
      x✝ &&& (x✝¹ ||| x✝²) == x✝¹ ||| x✝²
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹ == x✝¹ && x✝ &&& x✝² == x✝²) = (x✝ &&& (x✝¹ ||| x✝²) == x✝¹ ||| x✝²)"
485,AliveStatements,23,bv_bitwise,FAIL,0.154827,"no applicable extensionality theorem found for
      Bool"
486,AliveStatements,23,bv_ac,FAIL,69.268813,internal exception #5
487,AliveStatements,23,bv_distrib,FAIL,247.009476,internal exception #5
488,AliveStatements,23,bv_ring,FAIL,239.214659,internal exception #5
489,AliveStatements,23,bv_of_bool,FAIL,224.729822,internal exception #5
490,AliveStatements,23,bv_omega,FAIL,10.283865,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
491,AliveStatements,23,bv_automata_classic_prop,FAIL,41.194839,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = x✝¹ ∧ x✝ &&& x✝² = x✝²) = (x✝ &&& (x✝¹ ||| x✝²) = x✝¹ ||| x✝²)"
492,AliveStatements,23,bv_automata_classic,FAIL,5.491739,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == x✝¹ && x✝ &&& x✝² == x✝²) = (x✝ &&& (x✝¹ ||| x✝²) == x✝¹ ||| x✝²)."
493,AliveStatements,23,bv_normalize_automata_classic,FAIL,38.80892,internal exception #5
494,AliveStatements,23,simp,FAIL,245.184848,simp made no progress
495,AliveStatements,23,bv_normalize,FAIL,33.53729,internal exception #5
496,AliveStatements,23,bv_decide,FAIL,97.998153,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& ~~~(~~~x✝¹ &&& ~~~x✝²) ==
       ~~~(~~~x✝¹ &&& ~~~x✝²),
     x✝ &&& x✝² == x✝²,
     x✝ &&& x✝¹ == x✝¹]
    Consider the following assignment:
    x✝ &&& x✝¹ == x✝¹ = true
    x✝ &&& x✝² == x✝² = true
    x✝ &&& ~~~(~~~x✝¹ &&& ~~~x✝²) == ~~~(~~~x✝¹ &&& ~~~x✝²) = false"
497,AliveStatements,23,bv_auto,PASS,39386.661853,
498,AliveStatements,23,bv_automata_circuit_lean_prop,FAIL,25.508717,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = x✝¹ ∧ x✝ &&& x✝² = x✝²) = (x✝ &&& (x✝¹ ||| x✝²) = x✝¹ ||| x✝²)"
499,AliveStatements,23,bv_automata_circuit_lean,FAIL,2.909918,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == x✝¹ && x✝ &&& x✝² == x✝²) = (x✝ &&& (x✝¹ ||| x✝²) == x✝¹ ||| x✝²)."
500,AliveStatements,23,bv_normalize_automata_circuit_lean,FAIL,19.519785,internal exception #5
501,AliveStatements,23,bv_automata_circuit_cadical_prop,FAIL,27.142795,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = x✝¹ ∧ x✝ &&& x✝² = x✝²) = (x✝ &&& (x✝¹ ||| x✝²) = x✝¹ ||| x✝²)"
502,AliveStatements,23,bv_automata_circuit_cadical,FAIL,4.712726,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == x✝¹ && x✝ &&& x✝² == x✝²) = (x✝ &&& (x✝¹ ||| x✝²) == x✝¹ ||| x✝²)."
503,AliveStatements,23,bv_normalize_automata_circuit_cadical,FAIL,21.552373,internal exception #5
504,AliveStatements,23,bv_mba,FAIL,1.064682,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      (x✝ &&& x✝¹ == x✝¹ && x✝ &&& x✝² == x✝²) = (x✝ &&& (x✝¹ ||| x✝²) == x✝¹ ||| x✝²)
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹ == x✝¹ && x✝ &&& x✝² == x✝²) = (x✝ &&& (x✝¹ ||| x✝²) == x✝¹ ||| x✝²)"
505,AliveStatements,23,bv_normalize_mba,FAIL,17.954474,internal exception #5
506,AliveStatements,24,rfl,FAIL,21.150161,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ == x✝ && x✝ &&& x✝² == x✝
    is not definitionally equal to the right-hand side
      x✝ &&& (x✝¹ &&& x✝²) == x✝
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹ == x✝ && x✝ &&& x✝² == x✝) = (x✝ &&& (x✝¹ &&& x✝²) == x✝)"
507,AliveStatements,24,bv_bitwise,FAIL,0.16224,"no applicable extensionality theorem found for
      Bool"
508,AliveStatements,24,bv_ac,FAIL,64.080943,internal exception #5
509,AliveStatements,24,bv_distrib,FAIL,306.226513,internal exception #5
510,AliveStatements,24,bv_ring,FAIL,285.152869,internal exception #5
511,AliveStatements,24,bv_of_bool,FAIL,184.410668,internal exception #5
512,AliveStatements,24,bv_omega,FAIL,8.262965,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
513,AliveStatements,24,bv_automata_classic_prop,FAIL,37.286773,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = x✝ ∧ x✝ &&& x✝² = x✝) = (x✝ &&& (x✝¹ &&& x✝²) = x✝)"
514,AliveStatements,24,bv_automata_classic,FAIL,4.638423,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == x✝ && x✝ &&& x✝² == x✝) = (x✝ &&& (x✝¹ &&& x✝²) == x✝)."
515,AliveStatements,24,bv_normalize_automata_classic,FAIL,48.068144,internal exception #5
516,AliveStatements,24,simp,FAIL,252.870025,simp made no progress
517,AliveStatements,24,bv_normalize,FAIL,23.721844,internal exception #5
518,AliveStatements,24,bv_decide,FAIL,103.887839,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& x✝² == x✝,
     x✝ &&& (x✝¹ &&& x✝²) == x✝,
     x✝ &&& x✝¹ == x✝]
    Consider the following assignment:
    x✝ &&& x✝¹ == x✝ = true
    x✝ &&& x✝² == x✝ = true
    x✝ &&& (x✝¹ &&& x✝²) == x✝ = false"
519,AliveStatements,24,bv_auto,PASS,39486.445634,
520,AliveStatements,24,bv_automata_circuit_lean_prop,FAIL,24.176581,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = x✝ ∧ x✝ &&& x✝² = x✝) = (x✝ &&& (x✝¹ &&& x✝²) = x✝)"
521,AliveStatements,24,bv_automata_circuit_lean,FAIL,2.56513,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == x✝ && x✝ &&& x✝² == x✝) = (x✝ &&& (x✝¹ &&& x✝²) == x✝)."
522,AliveStatements,24,bv_normalize_automata_circuit_lean,FAIL,15.321094,internal exception #5
523,AliveStatements,24,bv_automata_circuit_cadical_prop,FAIL,26.351004,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ = x✝ ∧ x✝ &&& x✝² = x✝) = (x✝ &&& (x✝¹ &&& x✝²) = x✝)"
524,AliveStatements,24,bv_automata_circuit_cadical,FAIL,4.357291,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ &&& x✝¹ == x✝ && x✝ &&& x✝² == x✝) = (x✝ &&& (x✝¹ &&& x✝²) == x✝)."
525,AliveStatements,24,bv_normalize_automata_circuit_cadical,FAIL,17.552444,internal exception #5
526,AliveStatements,24,bv_mba,FAIL,1.034865,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      (x✝ &&& x✝¹ == x✝ && x✝ &&& x✝² == x✝) = (x✝ &&& (x✝¹ &&& x✝²) == x✝)
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹ == x✝ && x✝ &&& x✝² == x✝) = (x✝ &&& (x✝¹ &&& x✝²) == x✝)"
527,AliveStatements,24,bv_normalize_mba,FAIL,14.18986,internal exception #5
528,AliveStatements,25,rfl,FAIL,27.314314,"tactic 'rfl' failed, the left-hand side
      (x✝¹ <ₛ x✝) && x✝ != x✝¹
    is not definitionally equal to the right-hand side
      x✝¹ <ₛ x✝
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ ((x✝¹ <ₛ x✝) && x✝ != x✝¹) = (x✝¹ <ₛ x✝)"
529,AliveStatements,25,bv_bitwise,FAIL,0.257914,"no applicable extensionality theorem found for
      Bool"
530,AliveStatements,25,bv_ac,FAIL,37.991157,internal exception #5
531,AliveStatements,25,bv_distrib,FAIL,122.300723,internal exception #5
532,AliveStatements,25,bv_ring,FAIL,64.459454,internal exception #5
533,AliveStatements,25,bv_of_bool,PASS,334.787341,
534,AliveStatements,25,bv_omega,FAIL,5.793008,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
535,AliveStatements,25,bv_automata_classic_prop,FAIL,31.032067,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝¹ <ₛ x✝) = true ∧ x✝ ≠ x✝¹) = ((x✝¹ <ₛ x✝) = true)"
536,AliveStatements,25,bv_automata_classic,FAIL,2.824087,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝¹ <ₛ x✝) && x✝ != x✝¹) = (x✝¹ <ₛ x✝)."
537,AliveStatements,25,bv_normalize_automata_classic,FAIL,40.941834,internal exception #5
538,AliveStatements,25,simp,FAIL,116.784205,internal exception #5
539,AliveStatements,25,bv_normalize,FAIL,50.415127,internal exception #5
540,AliveStatements,25,bv_decide,FAIL,119.789294,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [BitVec.extractLsb' (w - 1) 1 x✝,
     x✝ == x✝¹,
     x✝¹ <ᵤ x✝,
     BitVec.extractLsb' (w - 1) 1 x✝¹]
    Consider the following assignment:
    BitVec.extractLsb' (w - 1) 1 x✝ = 1#1
    BitVec.extractLsb' (w - 1) 1 x✝¹ = 1#1
    x✝¹ <ᵤ x✝ = true
    x✝ == x✝¹ = true"
541,AliveStatements,25,bv_auto,PASS,613.728185,
542,AliveStatements,25,bv_automata_circuit_lean_prop,FAIL,32.971775,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝¹ <ₛ x✝) = true ∧ x✝ ≠ x✝¹) = ((x✝¹ <ₛ x✝) = true)"
543,AliveStatements,25,bv_automata_circuit_lean,FAIL,2.379196,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝¹ <ₛ x✝) && x✝ != x✝¹) = (x✝¹ <ₛ x✝)."
544,AliveStatements,25,bv_normalize_automata_circuit_lean,FAIL,54.945083,internal exception #5
545,AliveStatements,25,bv_automata_circuit_cadical_prop,FAIL,50.726048,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝¹ <ₛ x✝) = true ∧ x✝ ≠ x✝¹) = ((x✝¹ <ₛ x✝) = true)"
546,AliveStatements,25,bv_automata_circuit_cadical,FAIL,5.494783,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝¹ <ₛ x✝) && x✝ != x✝¹) = (x✝¹ <ₛ x✝)."
547,AliveStatements,25,bv_normalize_automata_circuit_cadical,FAIL,40.495285,internal exception #5
548,AliveStatements,25,bv_mba,FAIL,2.01264,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      ((x✝¹ <ₛ x✝) && x✝ != x✝¹) = (x✝¹ <ₛ x✝)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ ((x✝¹ <ₛ x✝) && x✝ != x✝¹) = (x✝¹ <ₛ x✝)"
549,AliveStatements,25,bv_normalize_mba,FAIL,52.656139,internal exception #5
550,AliveStatements,26,rfl,FAIL,23.470668,"tactic 'rfl' failed, the left-hand side
      x✝ == 0#w && x✝¹ == 0#w
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹ == 0#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ == 0#w && x✝¹ == 0#w) = (x✝ ||| x✝¹ == 0#w)"
551,AliveStatements,26,bv_bitwise,FAIL,0.26603,"no applicable extensionality theorem found for
      Bool"
552,AliveStatements,26,bv_ac,FAIL,57.124253,internal exception #5
553,AliveStatements,26,bv_distrib,FAIL,147.537323,internal exception #5
554,AliveStatements,26,bv_ring,FAIL,217.535831,internal exception #5
555,AliveStatements,26,bv_of_bool,FAIL,165.633483,internal exception #5
556,AliveStatements,26,bv_omega,FAIL,6.959072,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
557,AliveStatements,26,bv_automata_classic_prop,FAIL,35.672257,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∧ x✝¹ = 0#w) = (x✝ ||| x✝¹ = 0#w)"
558,AliveStatements,26,bv_automata_classic,FAIL,4.000416,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w && x✝¹ == 0#w) = (x✝ ||| x✝¹ == 0#w)."
559,AliveStatements,26,bv_normalize_automata_classic,FAIL,33.552515,internal exception #5
560,AliveStatements,26,simp,FAIL,129.281786,simp made no progress
561,AliveStatements,26,bv_normalize,FAIL,52.181521,internal exception #5
562,AliveStatements,26,bv_decide,FAIL,99.929251,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~x✝¹) == 0#w,
     x✝¹ == 0#w,
     x✝ == 0#w]
    Consider the following assignment:
    x✝ == 0#w = true
    x✝¹ == 0#w = true
    ~~~(~~~x✝ &&& ~~~x✝¹) == 0#w = false"
563,AliveStatements,26,bv_auto,PASS,40878.970213,
564,AliveStatements,26,bv_automata_circuit_lean_prop,FAIL,23.019538,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∧ x✝¹ = 0#w) = (x✝ ||| x✝¹ = 0#w)"
565,AliveStatements,26,bv_automata_circuit_lean,FAIL,2.130067,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w && x✝¹ == 0#w) = (x✝ ||| x✝¹ == 0#w)."
566,AliveStatements,26,bv_normalize_automata_circuit_lean,FAIL,16.550816,internal exception #5
567,AliveStatements,26,bv_automata_circuit_cadical_prop,FAIL,25.827733,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∧ x✝¹ = 0#w) = (x✝ ||| x✝¹ = 0#w)"
568,AliveStatements,26,bv_automata_circuit_cadical,FAIL,4.029099,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w && x✝¹ == 0#w) = (x✝ ||| x✝¹ == 0#w)."
569,AliveStatements,26,bv_normalize_automata_circuit_cadical,FAIL,18.319593,internal exception #5
570,AliveStatements,26,bv_mba,FAIL,0.930156,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      (x✝ == 0#w && x✝¹ == 0#w) = (x✝ ||| x✝¹ == 0#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ == 0#w && x✝¹ == 0#w) = (x✝ ||| x✝¹ == 0#w)"
571,AliveStatements,26,bv_normalize_mba,FAIL,15.315412,internal exception #5
572,AliveStatements,27,rfl,FAIL,19.444637,"tactic 'rfl' failed, the left-hand side
      BitVec.ofBool (x✝ == x✝¹ && x✝ != x✝¹)
    is not definitionally equal to the right-hand side
      0#1
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ BitVec.ofBool (x✝ == x✝¹ && x✝ != x✝¹) = 0#1"
573,AliveStatements,27,bv_bitwise,PASS,148.271352,
574,AliveStatements,27,bv_ac,FAIL,35.569082,internal exception #5
575,AliveStatements,27,bv_distrib,PASS,149.505556,
576,AliveStatements,27,bv_ring,FAIL,214.981431,internal exception #5
577,AliveStatements,27,bv_of_bool,FAIL,114.245593,internal exception #5
578,AliveStatements,27,bv_omega,FAIL,15.893411,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
579,AliveStatements,27,bv_automata_classic_prop,PASS,41383.94019,
580,AliveStatements,27,bv_automata_classic,FAIL,0.275015,"found multiple bitvector widths in the target: 
      OfNat.ofNat.{0} Nat 1 (instOfNatNat 1) → BitVec.ofNat (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))_uniq.889 → _uniq.4045"
581,AliveStatements,27,bv_normalize_automata_classic,PASS,5.108423,
582,AliveStatements,27,simp,PASS,63.926323,
583,AliveStatements,27,bv_normalize,PASS,4.56186,
584,AliveStatements,27,bv_decide,PASS,4.722171,
585,AliveStatements,27,bv_auto,PASS,72.248351,
586,AliveStatements,27,bv_automata_circuit_lean_prop,PASS,26.93567,
587,AliveStatements,27,bv_automata_circuit_lean,FAIL,0.211848,"found multiple bitvector widths in the target: 
      1 → 0#1; w → x✝¹"
588,AliveStatements,27,bv_normalize_automata_circuit_lean,PASS,4.768314,
589,AliveStatements,27,bv_automata_circuit_cadical_prop,PASS,156.393783,
590,AliveStatements,27,bv_automata_circuit_cadical,FAIL,2.325542,"found multiple bitvector widths in the target: 
      1 → 0#1; w → x✝¹"
591,AliveStatements,27,bv_normalize_automata_circuit_cadical,PASS,6.925792,
592,AliveStatements,27,bv_mba,FAIL,4.730137,"unable to reflect term '
      BitVec.ofBool (x✝ == x✝¹ && x✝ != x✝¹)'.
    Expected 'int * variable'."
593,AliveStatements,27,bv_normalize_mba,PASS,4.849002,
594,AliveStatements,28,rfl,FAIL,8.450762,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w)
    is not definitionally equal to the right-hand side
      (x✝ ||| x✝¹) ^^^ -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w) = (x✝ ||| x✝¹) ^^^ -1#w"
595,AliveStatements,28,bv_bitwise,PASS,497.822589,
596,AliveStatements,28,bv_ac,FAIL,56.985785,internal exception #5
597,AliveStatements,28,bv_distrib,FAIL,393.899658,internal exception #5
598,AliveStatements,28,bv_ring,FAIL,344.329466,internal exception #5
599,AliveStatements,28,bv_of_bool,FAIL,38.880601,simp made no progress
600,AliveStatements,28,bv_omega,FAIL,18.987918,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝ ||| x✝¹) ^^^ -1#w).toNat
     b := ↑((x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w)).toNat
     c := ↑2 ^ w"
601,AliveStatements,28,bv_automata_classic_prop,PASS,41141.579872,
602,AliveStatements,28,bv_automata_classic,PASS,8.897302,
603,AliveStatements,28,bv_normalize_automata_classic,PASS,22.119994,
604,AliveStatements,28,simp,FAIL,119.517539,simp made no progress
605,AliveStatements,28,bv_normalize,FAIL,13.908479,internal exception #5
606,AliveStatements,28,bv_decide,FAIL,79.464472,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w) ==
       ~~~(~~~x✝ &&& ~~~x✝¹) ^^^ -1#w]
    Consider the following assignment:
    (x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w) == ~~~(~~~x✝ &&& ~~~x✝¹) ^^^ -1#w = false"
607,AliveStatements,28,bv_auto,PASS,236.999432,
608,AliveStatements,28,bv_automata_circuit_lean_prop,PASS,33.486611,
609,AliveStatements,28,bv_automata_circuit_lean,PASS,18.743932,
610,AliveStatements,28,bv_normalize_automata_circuit_lean,PASS,32.324372,
611,AliveStatements,28,bv_automata_circuit_cadical_prop,PASS,275.401969,
612,AliveStatements,28,bv_automata_circuit_cadical,PASS,252.125804,
613,AliveStatements,28,bv_normalize_automata_circuit_cadical,PASS,264.852116,
614,AliveStatements,28,bv_mba,FAIL,5.435179,"unable to reflect term '
      (x✝ ^^^ BitVec.ofInt w (-1)) &&& (x✝¹ ^^^ BitVec.ofInt w (-1))'.
    Expected 'int * variable'."
615,AliveStatements,28,bv_normalize_mba,FAIL,19.249426,internal exception #5
616,AliveStatements,29,rfl,FAIL,6.086136,"tactic 'rfl' failed, the left-hand side
      (x✝ ||| x✝¹) &&& (x✝ &&& x✝¹ ^^^ -1#w)
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ||| x✝¹) &&& (x✝ &&& x✝¹ ^^^ -1#w) = x✝ ^^^ x✝¹"
617,AliveStatements,29,bv_bitwise,PASS,43850.884957,
618,AliveStatements,29,bv_ac,FAIL,34.164047,internal exception #5
619,AliveStatements,29,bv_distrib,FAIL,143.166893,internal exception #5
620,AliveStatements,29,bv_ring,FAIL,141.39863,internal exception #5
621,AliveStatements,29,bv_of_bool,FAIL,21.537024,simp made no progress
622,AliveStatements,29,bv_omega,FAIL,6.285659,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑((x✝ ||| x✝¹) &&& (x✝ &&& x✝¹ ^^^ -1#w)).toNat
     c := ↑2 ^ w"
623,AliveStatements,29,bv_automata_classic_prop,PASS,23.710634,
624,AliveStatements,29,bv_automata_classic,PASS,8.35631,
625,AliveStatements,29,bv_normalize_automata_classic,PASS,23.018436,
626,AliveStatements,29,simp,FAIL,118.477769,simp made no progress
627,AliveStatements,29,bv_normalize,FAIL,14.594454,internal exception #5
628,AliveStatements,29,bv_decide,FAIL,81.754979,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~x✝¹) &&&
         (x✝ &&& x✝¹ ^^^ -1#w) ==
       x✝ ^^^ x✝¹]
    Consider the following assignment:
    ~~~(~~~x✝ &&& ~~~x✝¹) &&& (x✝ &&& x✝¹ ^^^ -1#w) == x✝ ^^^ x✝¹ = false"
629,AliveStatements,29,bv_auto,PASS,311.360155,
630,AliveStatements,29,bv_automata_circuit_lean_prop,PASS,23.897819,
631,AliveStatements,29,bv_automata_circuit_lean,PASS,9.2449,
632,AliveStatements,29,bv_normalize_automata_circuit_lean,PASS,23.285584,
633,AliveStatements,29,bv_automata_circuit_cadical_prop,PASS,271.048181,
634,AliveStatements,29,bv_automata_circuit_cadical,PASS,250.95014,
635,AliveStatements,29,bv_normalize_automata_circuit_cadical,PASS,265.905284,
636,AliveStatements,29,bv_mba,FAIL,5.151687,"unable to reflect term '
      (x✝ ||| x✝¹) &&& (x✝ &&& x✝¹ ^^^ BitVec.ofInt w (-1))'.
    Expected 'int * variable'."
637,AliveStatements,29,bv_normalize_mba,FAIL,19.718557,internal exception #5
638,AliveStatements,30,rfl,FAIL,6.39628,"tactic 'rfl' failed, the left-hand side
      (x✝ &&& x✝¹ ^^^ -1#w) &&& (x✝ ||| x✝¹)
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ &&& x✝¹ ^^^ -1#w) &&& (x✝ ||| x✝¹) = x✝ ^^^ x✝¹"
639,AliveStatements,30,bv_bitwise,PASS,45943.189648,
640,AliveStatements,30,bv_ac,FAIL,33.852551,internal exception #5
641,AliveStatements,30,bv_distrib,FAIL,143.210601,internal exception #5
642,AliveStatements,30,bv_ring,FAIL,142.072084,internal exception #5
643,AliveStatements,30,bv_of_bool,FAIL,22.469834,simp made no progress
644,AliveStatements,30,bv_omega,FAIL,6.151746,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑((x✝ &&& x✝¹ ^^^ -1#w) &&& (x✝ ||| x✝¹)).toNat
     c := ↑2 ^ w"
645,AliveStatements,30,bv_automata_classic_prop,PASS,27.17476,
646,AliveStatements,30,bv_automata_classic,PASS,8.507039,
647,AliveStatements,30,bv_normalize_automata_classic,PASS,22.569778,
648,AliveStatements,30,simp,FAIL,118.6787,simp made no progress
649,AliveStatements,30,bv_normalize,FAIL,14.361886,internal exception #5
650,AliveStatements,30,bv_decide,FAIL,81.367563,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ &&& x✝¹ ^^^ -1#w) &&&
         ~~~(~~~x✝ &&& ~~~x✝¹) ==
       x✝ ^^^ x✝¹]
    Consider the following assignment:
    (x✝ &&& x✝¹ ^^^ -1#w) &&& ~~~(~~~x✝ &&& ~~~x✝¹) == x✝ ^^^ x✝¹ = false"
651,AliveStatements,30,bv_auto,PASS,308.910673,
652,AliveStatements,30,bv_automata_circuit_lean_prop,PASS,24.018113,
653,AliveStatements,30,bv_automata_circuit_lean,PASS,9.454367,
654,AliveStatements,30,bv_normalize_automata_circuit_lean,PASS,23.298026,
655,AliveStatements,30,bv_automata_circuit_cadical_prop,PASS,270.030294,
656,AliveStatements,30,bv_automata_circuit_cadical,PASS,250.471084,
657,AliveStatements,30,bv_normalize_automata_circuit_cadical,PASS,266.272834,
658,AliveStatements,30,bv_mba,FAIL,5.214573,"unable to reflect term '
      (x✝ &&& x✝¹ ^^^ BitVec.ofInt w (-1)) &&& (x✝ ||| x✝¹)'.
    Expected 'int * variable'."
659,AliveStatements,30,bv_normalize_mba,FAIL,19.722048,internal exception #5
660,AliveStatements,31,rfl,FAIL,7.765955,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ x✝¹) &&& x✝
    is not definitionally equal to the right-hand side
      x✝ &&& (x✝¹ ^^^ -1#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ x✝¹) &&& x✝ = x✝ &&& (x✝¹ ^^^ -1#w)"
661,AliveStatements,31,bv_bitwise,PASS,48080.292881,
662,AliveStatements,31,bv_ac,FAIL,33.776419,internal exception #5
663,AliveStatements,31,bv_distrib,FAIL,125.867465,internal exception #5
664,AliveStatements,31,bv_ring,FAIL,136.738665,internal exception #5
665,AliveStatements,31,bv_of_bool,FAIL,20.769524,simp made no progress
666,AliveStatements,31,bv_omega,FAIL,5.817373,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& (x✝¹ ^^^ -1#w)).toNat
     b := ↑((x✝ ^^^ x✝¹) &&& x✝).toNat
     c := ↑2 ^ w"
667,AliveStatements,31,bv_automata_classic_prop,PASS,24.007194,
668,AliveStatements,31,bv_automata_classic,PASS,7.884959,
669,AliveStatements,31,bv_normalize_automata_classic,PASS,19.035803,
670,AliveStatements,31,simp,FAIL,104.974916,simp made no progress
671,AliveStatements,31,bv_normalize,FAIL,11.172156,internal exception #5
672,AliveStatements,31,bv_decide,FAIL,77.907145,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ ^^^ x✝¹) &&& x✝ ==
       x✝ &&& (x✝¹ ^^^ -1#w)]
    Consider the following assignment:
    (x✝ ^^^ x✝¹) &&& x✝ == x✝ &&& (x✝¹ ^^^ -1#w) = false"
673,AliveStatements,31,bv_auto,PASS,281.28879,
674,AliveStatements,31,bv_automata_circuit_lean_prop,PASS,22.524908,
675,AliveStatements,31,bv_automata_circuit_lean,PASS,8.570024,
676,AliveStatements,31,bv_normalize_automata_circuit_lean,PASS,19.184326,
677,AliveStatements,31,bv_automata_circuit_cadical_prop,PASS,270.355763,
678,AliveStatements,31,bv_automata_circuit_cadical,PASS,249.945379,
679,AliveStatements,31,bv_normalize_automata_circuit_cadical,PASS,262.197129,
680,AliveStatements,31,bv_mba,FAIL,4.908112,"unable to reflect term '
      (x✝ ^^^ x✝¹) &&& x✝'.
    Expected 'int * variable'."
681,AliveStatements,31,bv_normalize_mba,FAIL,16.167151,internal exception #5
682,AliveStatements,32,rfl,FAIL,6.016195,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ -1#w ||| x✝¹) &&& x✝
    is not definitionally equal to the right-hand side
      x✝ &&& x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ -1#w ||| x✝¹) &&& x✝ = x✝ &&& x✝¹"
683,AliveStatements,32,bv_bitwise,PASS,50002.375563,
684,AliveStatements,32,bv_ac,FAIL,28.629522,internal exception #5
685,AliveStatements,32,bv_distrib,FAIL,125.534504,internal exception #5
686,AliveStatements,32,bv_ring,FAIL,140.805021,internal exception #5
687,AliveStatements,32,bv_of_bool,FAIL,21.041182,simp made no progress
688,AliveStatements,32,bv_omega,FAIL,6.049295,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& x✝¹).toNat
     b := ↑((x✝ ^^^ -1#w ||| x✝¹) &&& x✝).toNat
     c := ↑2 ^ w"
689,AliveStatements,32,bv_automata_classic_prop,PASS,22.664448,
690,AliveStatements,32,bv_automata_classic,PASS,8.308377,
691,AliveStatements,32,bv_normalize_automata_classic,PASS,21.844126,
692,AliveStatements,32,simp,FAIL,105.507866,simp made no progress
693,AliveStatements,32,bv_normalize,FAIL,14.03029,internal exception #5
694,AliveStatements,32,bv_decide,FAIL,80.79091,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(x✝ ^^^ -1#w) &&& ~~~x✝¹) &&&
         x✝ ==
       x✝ &&& x✝¹]
    Consider the following assignment:
    ~~~(~~~(x✝ ^^^ -1#w) &&& ~~~x✝¹) &&& x✝ == x✝ &&& x✝¹ = false"
695,AliveStatements,32,bv_auto,PASS,297.678698,
696,AliveStatements,32,bv_automata_circuit_lean_prop,PASS,23.707019,
697,AliveStatements,32,bv_automata_circuit_lean,PASS,8.911619,
698,AliveStatements,32,bv_normalize_automata_circuit_lean,PASS,22.387488,
699,AliveStatements,32,bv_automata_circuit_cadical_prop,PASS,271.102447,
700,AliveStatements,32,bv_automata_circuit_cadical,PASS,250.574423,
701,AliveStatements,32,bv_normalize_automata_circuit_cadical,PASS,266.140995,
702,AliveStatements,32,bv_mba,FAIL,5.278377,"unable to reflect term '
      (x✝ ^^^ BitVec.ofInt w (-1) ||| x✝¹) &&& x✝'.
    Expected 'int * variable'."
703,AliveStatements,32,bv_normalize_mba,FAIL,19.506976,internal exception #5
704,AliveStatements,33,rfl,FAIL,10.059219,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ x✝¹) &&& (x✝¹ ^^^ x✝² ^^^ x✝)
    is not definitionally equal to the right-hand side
      (x✝ ^^^ x✝¹) &&& (x✝² ^^^ -1#w)
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ x✝¹) &&& (x✝¹ ^^^ x✝² ^^^ x✝) = (x✝ ^^^ x✝¹) &&& (x✝² ^^^ -1#w)"
705,AliveStatements,33,bv_bitwise,PASS,51503.544815,
706,AliveStatements,33,bv_ac,FAIL,34.44512,internal exception #5
707,AliveStatements,33,bv_distrib,FAIL,166.010189,internal exception #5
708,AliveStatements,33,bv_ring,FAIL,138.335026,internal exception #5
709,AliveStatements,33,bv_of_bool,FAIL,22.771169,simp made no progress
710,AliveStatements,33,bv_omega,FAIL,6.319757,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝ ^^^ x✝¹) &&& (x✝² ^^^ -1#w)).toNat
     b := ↑((x✝ ^^^ x✝¹) &&& (x✝¹ ^^^ x✝² ^^^ x✝)).toNat
     c := ↑2 ^ w"
711,AliveStatements,33,bv_automata_classic_prop,PASS,23.674403,
712,AliveStatements,33,bv_automata_classic,PASS,9.05829,
713,AliveStatements,33,bv_normalize_automata_classic,PASS,21.474763,
714,AliveStatements,33,simp,FAIL,147.735815,simp made no progress
715,AliveStatements,33,bv_normalize,FAIL,12.482741,internal exception #5
716,AliveStatements,33,bv_decide,FAIL,79.276152,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ ^^^ x✝¹) &&& (x✝¹ ^^^ x✝² ^^^ x✝) ==
       (x✝ ^^^ x✝¹) &&& (x✝² ^^^ -1#w)]
    Consider the following assignment:
    (x✝ ^^^ x✝¹) &&& (x✝¹ ^^^ x✝² ^^^ x✝) == (x✝ ^^^ x✝¹) &&& (x✝² ^^^ -1#w) = false"
717,AliveStatements,33,bv_auto,PASS,365.246108,
718,AliveStatements,33,bv_automata_circuit_lean_prop,PASS,25.452341,
719,AliveStatements,33,bv_automata_circuit_lean,PASS,10.50295,
720,AliveStatements,33,bv_normalize_automata_circuit_lean,PASS,22.645233,
721,AliveStatements,33,bv_automata_circuit_cadical_prop,PASS,272.203846,
722,AliveStatements,33,bv_automata_circuit_cadical,PASS,250.187037,
723,AliveStatements,33,bv_normalize_automata_circuit_cadical,PASS,263.100023,
724,AliveStatements,33,bv_mba,FAIL,5.01183,"unable to reflect term '
      (x✝ ^^^ x✝¹) &&& (x✝¹ ^^^ x✝² ^^^ x✝)'.
    Expected 'int * variable'."
725,AliveStatements,33,bv_normalize_mba,FAIL,17.341925,internal exception #5
726,AliveStatements,34,rfl,FAIL,6.784127,"tactic 'rfl' failed, the left-hand side
      (x✝ ||| x✝¹) &&& (x✝ ^^^ -1#w ^^^ x✝¹)
    is not definitionally equal to the right-hand side
      x✝ &&& x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ||| x✝¹) &&& (x✝ ^^^ -1#w ^^^ x✝¹) = x✝ &&& x✝¹"
727,AliveStatements,34,bv_bitwise,PASS,54079.123022,
728,AliveStatements,34,bv_ac,FAIL,32.139706,internal exception #5
729,AliveStatements,34,bv_distrib,FAIL,140.989594,internal exception #5
730,AliveStatements,34,bv_ring,FAIL,141.088367,internal exception #5
731,AliveStatements,34,bv_of_bool,FAIL,21.958962,simp made no progress
732,AliveStatements,34,bv_omega,FAIL,6.293723,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& x✝¹).toNat
     b := ↑((x✝ ||| x✝¹) &&& (x✝ ^^^ -1#w ^^^ x✝¹)).toNat
     c := ↑2 ^ w"
733,AliveStatements,34,bv_automata_classic_prop,PASS,22.909988,
734,AliveStatements,34,bv_automata_classic,PASS,8.401514,
735,AliveStatements,34,bv_normalize_automata_classic,PASS,22.626963,
736,AliveStatements,34,simp,FAIL,118.471132,simp made no progress
737,AliveStatements,34,bv_normalize,FAIL,14.527084,internal exception #5
738,AliveStatements,34,bv_decide,FAIL,81.439264,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~x✝¹) &&&
         (x✝ ^^^ -1#w ^^^ x✝¹) ==
       x✝ &&& x✝¹]
    Consider the following assignment:
    ~~~(~~~x✝ &&& ~~~x✝¹) &&& (x✝ ^^^ -1#w ^^^ x✝¹) == x✝ &&& x✝¹ = false"
739,AliveStatements,34,bv_auto,PASS,322.21299,
740,AliveStatements,34,bv_automata_circuit_lean_prop,PASS,23.823703,
741,AliveStatements,34,bv_automata_circuit_lean,PASS,8.95762,
742,AliveStatements,34,bv_normalize_automata_circuit_lean,PASS,23.398035,
743,AliveStatements,34,bv_automata_circuit_cadical_prop,PASS,271.821237,
744,AliveStatements,34,bv_automata_circuit_cadical,PASS,254.38529,
745,AliveStatements,34,bv_normalize_automata_circuit_cadical,PASS,268.26483,
746,AliveStatements,34,bv_mba,FAIL,5.291173,"unable to reflect term '
      (x✝ ||| x✝¹) &&& (x✝ ^^^ BitVec.ofInt w (-1) ^^^ x✝¹)'.
    Expected 'int * variable'."
747,AliveStatements,34,bv_normalize_mba,FAIL,20.054413,internal exception #5
748,AliveStatements,35,rfl,FAIL,8.967783,"tactic 'rfl' failed, the left-hand side
      (x✝¹ <ᵤ x✝) || x✝ == x✝¹
    is not definitionally equal to the right-hand side
      x✝¹ ≤ᵤ x✝
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ ((x✝¹ <ᵤ x✝) || x✝ == x✝¹) = (x✝¹ ≤ᵤ x✝)"
749,AliveStatements,35,bv_bitwise,FAIL,0.280657,"no applicable extensionality theorem found for
      Bool"
750,AliveStatements,35,bv_ac,FAIL,29.997935,internal exception #5
751,AliveStatements,35,bv_distrib,FAIL,70.424566,internal exception #5
752,AliveStatements,35,bv_ring,FAIL,58.029575,internal exception #5
753,AliveStatements,35,bv_of_bool,PASS,160.641525,
754,AliveStatements,35,bv_omega,FAIL,14.897287,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
755,AliveStatements,35,bv_automata_classic_prop,FAIL,33.872961,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝¹ <ᵤ x✝) = true ∨ x✝ = x✝¹) = ((x✝¹ ≤ᵤ x✝) = true)"
756,AliveStatements,35,bv_automata_classic,FAIL,2.588823,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝¹ <ᵤ x✝) || x✝ == x✝¹) = (x✝¹ ≤ᵤ x✝)."
757,AliveStatements,35,bv_normalize_automata_classic,FAIL,47.432959,internal exception #5
758,AliveStatements,35,simp,FAIL,74.847244,simp made no progress
759,AliveStatements,35,bv_normalize,FAIL,20.519844,internal exception #5
760,AliveStatements,35,bv_decide,FAIL,83.412596,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ == x✝¹, x✝ <ᵤ x✝¹, x✝¹ <ᵤ x✝]
    Consider the following assignment:
    x✝¹ <ᵤ x✝ = true
    x✝ == x✝¹ = true
    x✝ <ᵤ x✝¹ = true"
761,AliveStatements,35,bv_auto,PASS,326.089384,
762,AliveStatements,35,bv_automata_circuit_lean_prop,FAIL,32.33861,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝¹ <ᵤ x✝) = true ∨ x✝ = x✝¹) = ((x✝¹ ≤ᵤ x✝) = true)"
763,AliveStatements,35,bv_automata_circuit_lean,FAIL,2.909112,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝¹ <ᵤ x✝) || x✝ == x✝¹) = (x✝¹ ≤ᵤ x✝)."
764,AliveStatements,35,bv_normalize_automata_circuit_lean,FAIL,25.858497,internal exception #5
765,AliveStatements,35,bv_automata_circuit_cadical_prop,FAIL,52.472782,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝¹ <ᵤ x✝) = true ∨ x✝ = x✝¹) = ((x✝¹ ≤ᵤ x✝) = true)"
766,AliveStatements,35,bv_automata_circuit_cadical,FAIL,5.530512,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝¹ <ᵤ x✝) || x✝ == x✝¹) = (x✝¹ ≤ᵤ x✝)."
767,AliveStatements,35,bv_normalize_automata_circuit_cadical,FAIL,41.65699,internal exception #5
768,AliveStatements,35,bv_mba,FAIL,1.463027,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      ((x✝¹ <ᵤ x✝) || x✝ == x✝¹) = (x✝¹ ≤ᵤ x✝)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ ((x✝¹ <ᵤ x✝) || x✝ == x✝¹) = (x✝¹ ≤ᵤ x✝)"
769,AliveStatements,35,bv_normalize_mba,FAIL,21.874662,internal exception #5
770,AliveStatements,36,rfl,FAIL,16.191651,"tactic 'rfl' failed, the left-hand side
      BitVec.ofBool ((x✝¹ ≤ᵤ x✝) || x✝ != x✝¹)
    is not definitionally equal to the right-hand side
      1#1
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ BitVec.ofBool ((x✝¹ ≤ᵤ x✝) || x✝ != x✝¹) = 1#1"
771,AliveStatements,36,bv_bitwise,FAIL,219.341045,internal exception #5
772,AliveStatements,36,bv_ac,FAIL,54.750324,internal exception #5
773,AliveStatements,36,bv_distrib,FAIL,188.114183,internal exception #5
774,AliveStatements,36,bv_ring,FAIL,257.531078,internal exception #5
775,AliveStatements,36,bv_of_bool,FAIL,118.9908,internal exception #5
776,AliveStatements,36,bv_omega,FAIL,7.930879,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
777,AliveStatements,36,bv_automata_classic_prop,FAIL,30.68543,"unknown boolean conditional, expected 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝¹ ≤ᵤ x✝) = true"
778,AliveStatements,36,bv_automata_classic,FAIL,0.448672,"found multiple bitvector widths in the target: 
      OfNat.ofNat.{0} Nat 1 (instOfNatNat 1) → BitVec.ofNat (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))_uniq.1438 → _uniq.4713"
779,AliveStatements,36,bv_normalize_automata_classic,FAIL,34.295002,internal exception #5
780,AliveStatements,36,simp,FAIL,163.90575,internal exception #5
781,AliveStatements,36,bv_normalize,FAIL,31.595265,internal exception #5
782,AliveStatements,36,bv_decide,FAIL,91.752121,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ == x✝¹, x✝ <ᵤ x✝¹]
    Consider the following assignment:
    x✝ <ᵤ x✝¹ = true
    x✝ == x✝¹ = true"
783,AliveStatements,36,bv_auto,PASS,55053.254227,
784,AliveStatements,36,bv_automata_circuit_lean_prop,FAIL,21.921674,"unknown boolean conditional, expected 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝¹ ≤ᵤ x✝) = true"
785,AliveStatements,36,bv_automata_circuit_lean,FAIL,0.201447,"found multiple bitvector widths in the target: 
      1 → 1#1; w → x✝"
786,AliveStatements,36,bv_normalize_automata_circuit_lean,FAIL,16.9985,internal exception #5
787,AliveStatements,36,bv_automata_circuit_cadical_prop,FAIL,22.821646,"unknown boolean conditional, expected 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝¹ ≤ᵤ x✝) = true"
788,AliveStatements,36,bv_automata_circuit_cadical,FAIL,2.064278,"found multiple bitvector widths in the target: 
      1 → 1#1; w → x✝"
789,AliveStatements,36,bv_normalize_automata_circuit_cadical,FAIL,18.661062,internal exception #5
790,AliveStatements,36,bv_mba,FAIL,4.104145,"unable to reflect term '
      BitVec.ofBool ((x✝¹ ≤ᵤ x✝) || x✝ != x✝¹)'.
    Expected 'int * variable'."
791,AliveStatements,36,bv_normalize_mba,FAIL,20.535386,internal exception #5
792,AliveStatements,37,rfl,FAIL,9.737213,"tactic 'rfl' failed, the left-hand side
      x✝ == 0#w || x✝¹ <ᵤ x✝
    is not definitionally equal to the right-hand side
      x✝¹ ≤ᵤ x✝ + -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)"
793,AliveStatements,37,bv_bitwise,FAIL,0.275525,"no applicable extensionality theorem found for
      Bool"
794,AliveStatements,37,bv_ac,FAIL,58.012094,internal exception #5
795,AliveStatements,37,bv_distrib,FAIL,302.109555,internal exception #5
796,AliveStatements,37,bv_ring,FAIL,381.775833,internal exception #5
797,AliveStatements,37,bv_of_bool,FAIL,138.400563,internal exception #5
798,AliveStatements,37,bv_omega,FAIL,7.757892,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
799,AliveStatements,37,bv_automata_classic_prop,FAIL,49.976997,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∨ (x✝¹ <ᵤ x✝) = true) = ((x✝¹ ≤ᵤ x✝ + -1#w) = true)"
800,AliveStatements,37,bv_automata_classic,FAIL,4.533323,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)."
801,AliveStatements,37,bv_normalize_automata_classic,FAIL,26.986686,internal exception #5
802,AliveStatements,37,simp,FAIL,238.357715,simp made no progress
803,AliveStatements,37,bv_normalize,FAIL,41.841218,internal exception #5
804,AliveStatements,37,bv_decide,FAIL,87.127647,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ + -1#w <ᵤ x✝¹, x✝¹ <ᵤ x✝, x✝ == 0#w]
    Consider the following assignment:
    x✝ == 0#w = true
    x✝¹ <ᵤ x✝ = true
    x✝ + -1#w <ᵤ x✝¹ = true"
805,AliveStatements,37,bv_auto,PASS,55280.392057,
806,AliveStatements,37,bv_automata_circuit_lean_prop,FAIL,22.662739,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∨ (x✝¹ <ᵤ x✝) = true) = ((x✝¹ ≤ᵤ x✝ + -1#w) = true)"
807,AliveStatements,37,bv_automata_circuit_lean,FAIL,2.481266,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)."
808,AliveStatements,37,bv_normalize_automata_circuit_lean,FAIL,16.086253,internal exception #5
809,AliveStatements,37,bv_automata_circuit_cadical_prop,FAIL,24.763119,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∨ (x✝¹ <ᵤ x✝) = true) = ((x✝¹ ≤ᵤ x✝ + -1#w) = true)"
810,AliveStatements,37,bv_automata_circuit_cadical,FAIL,4.334993,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)."
811,AliveStatements,37,bv_normalize_automata_circuit_cadical,FAIL,17.949762,internal exception #5
812,AliveStatements,37,bv_mba,FAIL,0.933994,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)"
813,AliveStatements,37,bv_normalize_mba,FAIL,14.670564,internal exception #5
814,AliveStatements,38,rfl,FAIL,32.622549,"tactic 'rfl' failed, the left-hand side
      x✝ == 0#w || x✝¹ <ᵤ x✝
    is not definitionally equal to the right-hand side
      x✝¹ ≤ᵤ x✝ + -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)"
815,AliveStatements,38,bv_bitwise,FAIL,0.26243,"no applicable extensionality theorem found for
      Bool"
816,AliveStatements,38,bv_ac,FAIL,47.2855,internal exception #5
817,AliveStatements,38,bv_distrib,FAIL,258.546494,internal exception #5
818,AliveStatements,38,bv_ring,FAIL,376.471227,internal exception #5
819,AliveStatements,38,bv_of_bool,FAIL,154.911029,internal exception #5
820,AliveStatements,38,bv_omega,FAIL,8.661692,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
821,AliveStatements,38,bv_automata_classic_prop,FAIL,52.591722,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∨ (x✝¹ <ᵤ x✝) = true) = ((x✝¹ ≤ᵤ x✝ + -1#w) = true)"
822,AliveStatements,38,bv_automata_classic,FAIL,4.962299,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)."
823,AliveStatements,38,bv_normalize_automata_classic,FAIL,28.86943,internal exception #5
824,AliveStatements,38,simp,FAIL,247.148108,simp made no progress
825,AliveStatements,38,bv_normalize,FAIL,42.290742,internal exception #5
826,AliveStatements,38,bv_decide,FAIL,90.527291,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ + -1#w <ᵤ x✝¹, x✝ == 0#w, x✝¹ <ᵤ x✝]
    Consider the following assignment:
    x✝ == 0#w = true
    x✝¹ <ᵤ x✝ = true
    x✝ + -1#w <ᵤ x✝¹ = true"
827,AliveStatements,38,bv_auto,PASS,55467.814843,
828,AliveStatements,38,bv_automata_circuit_lean_prop,FAIL,22.320928,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∨ (x✝¹ <ᵤ x✝) = true) = ((x✝¹ ≤ᵤ x✝ + -1#w) = true)"
829,AliveStatements,38,bv_automata_circuit_lean,FAIL,2.493209,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)."
830,AliveStatements,38,bv_normalize_automata_circuit_lean,FAIL,15.810103,internal exception #5
831,AliveStatements,38,bv_automata_circuit_cadical_prop,FAIL,25.280379,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ = 0#w ∨ (x✝¹ <ᵤ x✝) = true) = ((x✝¹ ≤ᵤ x✝ + -1#w) = true)"
832,AliveStatements,38,bv_automata_circuit_cadical,FAIL,4.393351,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)."
833,AliveStatements,38,bv_normalize_automata_circuit_cadical,FAIL,18.0456,internal exception #5
834,AliveStatements,38,bv_mba,FAIL,0.920924,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ == 0#w || x✝¹ <ᵤ x✝) = (x✝¹ ≤ᵤ x✝ + -1#w)"
835,AliveStatements,38,bv_normalize_mba,FAIL,14.713018,internal exception #5
836,AliveStatements,39,rfl,FAIL,26.558397,"tactic 'rfl' failed, the left-hand side
      x✝ != 0#w || x✝¹ != 0#w
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹ != 0#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ != 0#w || x✝¹ != 0#w) = (x✝ ||| x✝¹ != 0#w)"
837,AliveStatements,39,bv_bitwise,FAIL,0.279326,"no applicable extensionality theorem found for
      Bool"
838,AliveStatements,39,bv_ac,FAIL,58.401402,internal exception #5
839,AliveStatements,39,bv_distrib,FAIL,185.947333,internal exception #5
840,AliveStatements,39,bv_ring,FAIL,256.99527,internal exception #5
841,AliveStatements,39,bv_of_bool,FAIL,206.392235,internal exception #5
842,AliveStatements,39,bv_omega,FAIL,20.881475,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
843,AliveStatements,39,bv_automata_classic_prop,FAIL,66.027248,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ ≠ 0#w ∨ x✝¹ ≠ 0#w) = (x✝ ||| x✝¹ ≠ 0#w)"
844,AliveStatements,39,bv_automata_classic,FAIL,2.683529,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ != 0#w || x✝¹ != 0#w) = (x✝ ||| x✝¹ != 0#w)."
845,AliveStatements,39,bv_normalize_automata_classic,FAIL,38.321002,internal exception #5
846,AliveStatements,39,simp,FAIL,154.713308,simp made no progress
847,AliveStatements,39,bv_normalize,FAIL,57.83,internal exception #5
848,AliveStatements,39,bv_decide,FAIL,97.901516,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~x✝¹) == 0#w,
     x✝¹ == 0#w,
     x✝ == 0#w]
    Consider the following assignment:
    x✝ == 0#w = true
    x✝¹ == 0#w = true
    ~~~(~~~x✝ &&& ~~~x✝¹) == 0#w = false"
849,AliveStatements,39,bv_auto,PASS,56036.321387,
850,AliveStatements,39,bv_automata_circuit_lean_prop,FAIL,26.039107,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ ≠ 0#w ∨ x✝¹ ≠ 0#w) = (x✝ ||| x✝¹ ≠ 0#w)"
851,AliveStatements,39,bv_automata_circuit_lean,FAIL,2.147878,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ != 0#w || x✝¹ != 0#w) = (x✝ ||| x✝¹ != 0#w)."
852,AliveStatements,39,bv_normalize_automata_circuit_lean,FAIL,20.206886,internal exception #5
853,AliveStatements,39,bv_automata_circuit_cadical_prop,FAIL,28.200643,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      (x✝ ≠ 0#w ∨ x✝¹ ≠ 0#w) = (x✝ ||| x✝¹ ≠ 0#w)"
854,AliveStatements,39,bv_automata_circuit_cadical,FAIL,4.046536,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      (x✝ != 0#w || x✝¹ != 0#w) = (x✝ ||| x✝¹ != 0#w)."
855,AliveStatements,39,bv_normalize_automata_circuit_cadical,FAIL,22.347576,internal exception #5
856,AliveStatements,39,bv_mba,FAIL,0.954404,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      (x✝ != 0#w || x✝¹ != 0#w) = (x✝ ||| x✝¹ != 0#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ != 0#w || x✝¹ != 0#w) = (x✝ ||| x✝¹ != 0#w)"
857,AliveStatements,39,bv_normalize_mba,FAIL,19.362621,internal exception #5
858,AliveStatements,40,rfl,FAIL,7.912745,"tactic 'rfl' failed, the left-hand side
      x✝ ^^^ x✝¹ ||| x✝²
    is not definitionally equal to the right-hand side
      (x✝ ||| x✝²) ^^^ x✝¹ &&& ~~~x✝²
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ x✝ ^^^ x✝¹ ||| x✝² = (x✝ ||| x✝²) ^^^ x✝¹ &&& ~~~x✝²"
859,AliveStatements,40,bv_bitwise,PASS,57447.727739,
860,AliveStatements,40,bv_ac,FAIL,28.539854,internal exception #5
861,AliveStatements,40,bv_distrib,FAIL,138.644691,internal exception #5
862,AliveStatements,40,bv_ring,FAIL,91.893323,internal exception #5
863,AliveStatements,40,bv_of_bool,FAIL,21.665684,simp made no progress
864,AliveStatements,40,bv_omega,FAIL,6.229574,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝ ||| x✝²) ^^^ x✝¹ &&& ~~~x✝²).toNat
     b := ↑(x✝ ^^^ x✝¹ ||| x✝²).toNat
     c := ↑2 ^ w"
865,AliveStatements,40,bv_automata_classic_prop,PASS,22.956558,
866,AliveStatements,40,bv_automata_classic,PASS,8.705412,
867,AliveStatements,40,bv_normalize_automata_classic,PASS,23.272372,
868,AliveStatements,40,simp,FAIL,118.815062,simp made no progress
869,AliveStatements,40,bv_normalize,FAIL,14.370784,internal exception #5
870,AliveStatements,40,bv_decide,FAIL,81.820461,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(x✝ ^^^ x✝¹) &&& ~~~x✝²) ==
       ~~~(~~~x✝ &&& ~~~x✝²) ^^^ x✝¹ &&& ~~~x✝²]
    Consider the following assignment:
    ~~~(~~~(x✝ ^^^ x✝¹) &&& ~~~x✝²) == ~~~(~~~x✝ &&& ~~~x✝²) ^^^ x✝¹ &&& ~~~x✝² = false"
871,AliveStatements,40,bv_auto,PASS,243.653848,
872,AliveStatements,40,bv_automata_circuit_lean_prop,PASS,22.345961,
873,AliveStatements,40,bv_automata_circuit_lean,PASS,8.37449,
874,AliveStatements,40,bv_normalize_automata_circuit_lean,PASS,22.691207,
875,AliveStatements,40,bv_automata_circuit_cadical_prop,PASS,147.116231,
876,AliveStatements,40,bv_automata_circuit_cadical,PASS,129.369708,
877,AliveStatements,40,bv_normalize_automata_circuit_cadical,PASS,144.168573,
878,AliveStatements,40,bv_mba,FAIL,3.750282,"unable to reflect term '
      x✝ ^^^ x✝¹ ||| x✝²'.
    Expected 'int * variable'."
879,AliveStatements,40,bv_normalize_mba,FAIL,18.267278,internal exception #5
880,AliveStatements,41,rfl,FAIL,7.31396,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ -1#w) &&& x✝¹ ||| x✝
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ -1#w) &&& x✝¹ ||| x✝ = x✝ ||| x✝¹"
881,AliveStatements,41,bv_bitwise,PASS,58856.636624,
882,AliveStatements,41,bv_ac,FAIL,28.554972,internal exception #5
883,AliveStatements,41,bv_distrib,FAIL,125.635812,internal exception #5
884,AliveStatements,41,bv_ring,FAIL,140.864487,internal exception #5
885,AliveStatements,41,bv_of_bool,FAIL,21.218279,simp made no progress
886,AliveStatements,41,bv_omega,FAIL,6.169377,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹).toNat
     b := ↑((x✝ ^^^ -1#w) &&& x✝¹ ||| x✝).toNat
     c := ↑2 ^ w"
887,AliveStatements,41,bv_automata_classic_prop,PASS,24.196269,
888,AliveStatements,41,bv_automata_classic,PASS,7.88855,
889,AliveStatements,41,bv_normalize_automata_classic,PASS,23.780717,
890,AliveStatements,41,simp,FAIL,106.080322,simp made no progress
891,AliveStatements,41,bv_normalize,FAIL,16.082143,internal exception #5
892,AliveStatements,41,bv_decide,FAIL,83.194185,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~((x✝ ^^^ -1#w) &&& x✝¹) &&& ~~~x✝ ==
       ~~~x✝ &&& ~~~x✝¹]
    Consider the following assignment:
    ~~~((x✝ ^^^ -1#w) &&& x✝¹) &&& ~~~x✝ == ~~~x✝ &&& ~~~x✝¹ = false"
893,AliveStatements,41,bv_auto,PASS,298.894053,
894,AliveStatements,41,bv_automata_circuit_lean_prop,PASS,22.349544,
895,AliveStatements,41,bv_automata_circuit_lean,PASS,8.61472,
896,AliveStatements,41,bv_normalize_automata_circuit_lean,PASS,24.25882,
897,AliveStatements,41,bv_automata_circuit_cadical_prop,PASS,268.880542,
898,AliveStatements,41,bv_automata_circuit_cadical,PASS,251.033796,
899,AliveStatements,41,bv_normalize_automata_circuit_cadical,PASS,266.939113,
900,AliveStatements,41,bv_mba,FAIL,5.296642,"unable to reflect term '
      (x✝ ^^^ BitVec.ofInt w (-1)) &&& x✝¹ ||| x✝'.
    Expected 'int * variable'."
901,AliveStatements,41,bv_normalize_mba,FAIL,21.214293,internal exception #5
902,AliveStatements,42,rfl,FAIL,11.57718,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ ||| x✝ ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝ ^^^ -1#w ||| x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& x✝¹ ||| x✝ ^^^ -1#w = x✝ ^^^ -1#w ||| x✝¹"
903,AliveStatements,42,bv_bitwise,PASS,60869.40917,
904,AliveStatements,42,bv_ac,FAIL,29.41399,internal exception #5
905,AliveStatements,42,bv_distrib,FAIL,126.978718,internal exception #5
906,AliveStatements,42,bv_ring,FAIL,142.506934,internal exception #5
907,AliveStatements,42,bv_of_bool,FAIL,21.141966,simp made no progress
908,AliveStatements,42,bv_omega,FAIL,6.277004,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ -1#w ||| x✝¹).toNat
     b := ↑(x✝ &&& x✝¹ ||| x✝ ^^^ -1#w).toNat
     c := ↑2 ^ w"
909,AliveStatements,42,bv_automata_classic_prop,PASS,21.850917,
910,AliveStatements,42,bv_automata_classic,PASS,8.026307,
911,AliveStatements,42,bv_normalize_automata_classic,PASS,24.341258,
912,AliveStatements,42,simp,FAIL,106.158905,simp made no progress
913,AliveStatements,42,bv_normalize,FAIL,16.376465,internal exception #5
914,AliveStatements,42,bv_decide,FAIL,83.080551,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(x✝ &&& x✝¹) &&& ~~~(x✝ ^^^ -1#w) ==
       ~~~(x✝ ^^^ -1#w) &&& ~~~x✝¹]
    Consider the following assignment:
    ~~~(x✝ &&& x✝¹) &&& ~~~(x✝ ^^^ -1#w) == ~~~(x✝ ^^^ -1#w) &&& ~~~x✝¹ = false"
915,AliveStatements,42,bv_auto,PASS,307.482286,
916,AliveStatements,42,bv_automata_circuit_lean_prop,PASS,23.604955,
917,AliveStatements,42,bv_automata_circuit_lean,PASS,9.587529,
918,AliveStatements,42,bv_normalize_automata_circuit_lean,PASS,27.626181,
919,AliveStatements,42,bv_automata_circuit_cadical_prop,PASS,268.531869,
920,AliveStatements,42,bv_automata_circuit_cadical,PASS,251.487058,
921,AliveStatements,42,bv_normalize_automata_circuit_cadical,PASS,267.942598,
922,AliveStatements,42,bv_mba,FAIL,5.228648,"unable to reflect term '
      x✝ &&& x✝¹ ||| x✝ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
923,AliveStatements,42,bv_normalize_mba,FAIL,21.676075,internal exception #5
924,AliveStatements,43,rfl,FAIL,6.999618,"tactic 'rfl' failed, the left-hand side
      x✝ &&& (x✝¹ ^^^ -1#w) ||| x✝ ^^^ x✝¹
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& (x✝¹ ^^^ -1#w) ||| x✝ ^^^ x✝¹ = x✝ ^^^ x✝¹"
925,AliveStatements,43,bv_bitwise,PASS,1084.481607,
926,AliveStatements,43,bv_ac,FAIL,55.066944,internal exception #5
927,AliveStatements,43,bv_distrib,FAIL,310.783125,internal exception #5
928,AliveStatements,43,bv_ring,FAIL,346.678059,internal exception #5
929,AliveStatements,43,bv_of_bool,FAIL,36.878084,simp made no progress
930,AliveStatements,43,bv_omega,FAIL,10.716773,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑(x✝ &&& (x✝¹ ^^^ -1#w) ||| x✝ ^^^ x✝¹).toNat
     c := ↑2 ^ w"
931,AliveStatements,43,bv_automata_classic_prop,PASS,61043.113486,
932,AliveStatements,43,bv_automata_classic,PASS,8.286102,
933,AliveStatements,43,bv_normalize_automata_classic,PASS,20.920471,
934,AliveStatements,43,simp,FAIL,105.991833,simp made no progress
935,AliveStatements,43,bv_normalize,FAIL,13.023664,internal exception #5
936,AliveStatements,43,bv_decide,FAIL,78.384881,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(x✝ &&& (x✝¹ ^^^ -1#w)) &&&
           ~~~(x✝ ^^^ x✝¹)) ==
       x✝ ^^^ x✝¹]
    Consider the following assignment:
    ~~~(~~~(x✝ &&& (x✝¹ ^^^ -1#w)) &&& ~~~(x✝ ^^^ x✝¹)) == x✝ ^^^ x✝¹ = false"
937,AliveStatements,43,bv_auto,PASS,404.461525,
938,AliveStatements,43,bv_automata_circuit_lean_prop,PASS,22.500155,
939,AliveStatements,43,bv_automata_circuit_lean,PASS,8.336283,
940,AliveStatements,43,bv_normalize_automata_circuit_lean,PASS,24.483696,
941,AliveStatements,43,bv_automata_circuit_cadical_prop,PASS,270.896721,
942,AliveStatements,43,bv_automata_circuit_cadical,PASS,250.258061,
943,AliveStatements,43,bv_normalize_automata_circuit_cadical,PASS,264.628463,
944,AliveStatements,43,bv_mba,FAIL,5.246935,"unable to reflect term '
      x✝ &&& (x✝¹ ^^^ BitVec.ofInt w (-1)) ||| x✝ ^^^ x✝¹'.
    Expected 'int * variable'."
945,AliveStatements,43,bv_normalize_mba,FAIL,18.223643,internal exception #5
946,AliveStatements,44,rfl,FAIL,7.648936,"tactic 'rfl' failed, the left-hand side
      x✝ &&& (x✝¹ ^^^ -1#w) ||| (x✝ ^^^ -1#w) &&& x✝¹
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& (x✝¹ ^^^ -1#w) ||| (x✝ ^^^ -1#w) &&& x✝¹ = x✝ ^^^ x✝¹"
947,AliveStatements,44,bv_bitwise,PASS,64648.183081,
948,AliveStatements,44,bv_ac,FAIL,33.451648,internal exception #5
949,AliveStatements,44,bv_distrib,FAIL,155.971815,internal exception #5
950,AliveStatements,44,bv_ring,FAIL,141.05374,internal exception #5
951,AliveStatements,44,bv_of_bool,FAIL,22.171122,simp made no progress
952,AliveStatements,44,bv_omega,FAIL,6.36897,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑(x✝ &&& (x✝¹ ^^^ -1#w) ||| (x✝ ^^^ -1#w) &&& x✝¹).toNat
     c := ↑2 ^ w"
953,AliveStatements,44,bv_automata_classic_prop,PASS,23.148016,
954,AliveStatements,44,bv_automata_classic,PASS,8.828013,
955,AliveStatements,44,bv_normalize_automata_classic,PASS,22.771036,
956,AliveStatements,44,simp,FAIL,133.139744,simp made no progress
957,AliveStatements,44,bv_normalize,FAIL,14.308176,internal exception #5
958,AliveStatements,44,bv_decide,FAIL,81.589293,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(x✝ &&& (x✝¹ ^^^ -1#w)) &&&
           ~~~((x✝ ^^^ -1#w) &&& x✝¹)) ==
       x✝ ^^^ x✝¹]
    Consider the following assignment:
    ~~~(~~~(x✝ &&& (x✝¹ ^^^ -1#w)) &&& ~~~((x✝ ^^^ -1#w) &&& x✝¹)) == x✝ ^^^ x✝¹ = false"
959,AliveStatements,44,bv_auto,PASS,371.831245,
960,AliveStatements,44,bv_automata_circuit_lean_prop,PASS,24.636098,
961,AliveStatements,44,bv_automata_circuit_lean,PASS,10.309122,
962,AliveStatements,44,bv_normalize_automata_circuit_lean,PASS,23.892146,
963,AliveStatements,44,bv_automata_circuit_cadical_prop,PASS,270.548901,
964,AliveStatements,44,bv_automata_circuit_cadical,PASS,251.121805,
965,AliveStatements,44,bv_normalize_automata_circuit_cadical,PASS,266.295412,
966,AliveStatements,44,bv_mba,FAIL,5.530784,"unable to reflect term '
      x✝ &&& (x✝¹ ^^^ BitVec.ofInt w (-1)) ||| (x✝ ^^^ BitVec.ofInt w (-1)) &&& x✝¹'.
    Expected 'int * variable'."
967,AliveStatements,44,bv_normalize_mba,FAIL,19.793115,internal exception #5
968,AliveStatements,45,rfl,FAIL,7.950798,"tactic 'rfl' failed, the left-hand side
      x✝ ^^^ x✝¹ ||| x✝¹ ^^^ x✝² ^^^ x✝
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹ ||| x✝²
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ x✝ ^^^ x✝¹ ||| x✝¹ ^^^ x✝² ^^^ x✝ = x✝ ^^^ x✝¹ ||| x✝²"
969,AliveStatements,45,bv_bitwise,PASS,66601.598392,
970,AliveStatements,45,bv_ac,FAIL,22.485226,internal exception #5
971,AliveStatements,45,bv_distrib,FAIL,118.3714,internal exception #5
972,AliveStatements,45,bv_ring,FAIL,85.563763,internal exception #5
973,AliveStatements,45,bv_of_bool,FAIL,20.110401,simp made no progress
974,AliveStatements,45,bv_omega,FAIL,5.429579,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ x✝¹ ||| x✝²).toNat
     b := ↑(x✝ ^^^ x✝¹ ||| x✝¹ ^^^ x✝² ^^^ x✝).toNat
     c := ↑2 ^ w"
975,AliveStatements,45,bv_automata_classic_prop,PASS,20.919506,
976,AliveStatements,45,bv_automata_classic,PASS,7.871337,
977,AliveStatements,45,bv_normalize_automata_classic,PASS,23.337552,
978,AliveStatements,45,simp,FAIL,104.078488,simp made no progress
979,AliveStatements,45,bv_normalize,FAIL,15.473736,internal exception #5
980,AliveStatements,45,bv_decide,FAIL,82.32993,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(x✝ ^^^ x✝¹) &&&
         ~~~(x✝¹ ^^^ x✝² ^^^ x✝) ==
       ~~~(x✝ ^^^ x✝¹) &&& ~~~x✝²]
    Consider the following assignment:
    ~~~(x✝ ^^^ x✝¹) &&& ~~~(x✝¹ ^^^ x✝² ^^^ x✝) == ~~~(x✝ ^^^ x✝¹) &&& ~~~x✝² = false"
981,AliveStatements,45,bv_auto,PASS,235.922944,
982,AliveStatements,45,bv_automata_circuit_lean_prop,PASS,20.9532,
983,AliveStatements,45,bv_automata_circuit_lean,PASS,7.76721,
984,AliveStatements,45,bv_normalize_automata_circuit_lean,PASS,23.131345,
985,AliveStatements,45,bv_automata_circuit_cadical_prop,PASS,143.835122,
986,AliveStatements,45,bv_automata_circuit_cadical,PASS,128.882896,
987,AliveStatements,45,bv_normalize_automata_circuit_cadical,PASS,144.489857,
988,AliveStatements,45,bv_mba,FAIL,3.410288,"unable to reflect term '
      x✝ ^^^ x✝¹ ||| x✝¹ ^^^ x✝² ^^^ x✝'.
    Expected 'int * variable'."
989,AliveStatements,45,bv_normalize_mba,FAIL,19.018309,internal exception #5
990,AliveStatements,46,rfl,FAIL,6.866481,"tactic 'rfl' failed, the left-hand side
      (x✝ ||| x✝¹) &&& x✝² ||| x✝
    is not definitionally equal to the right-hand side
      x✝ ||| x✝² &&& x✝¹
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ ||| x✝¹) &&& x✝² ||| x✝ = x✝ ||| x✝² &&& x✝¹"
991,AliveStatements,46,bv_bitwise,PASS,68188.804087,
992,AliveStatements,46,bv_ac,FAIL,26.865947,internal exception #5
993,AliveStatements,46,bv_distrib,FAIL,122.314585,internal exception #5
994,AliveStatements,46,bv_ring,FAIL,85.145191,internal exception #5
995,AliveStatements,46,bv_of_bool,FAIL,18.961759,simp made no progress
996,AliveStatements,46,bv_omega,FAIL,5.583112,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝² &&& x✝¹).toNat
     b := ↑((x✝ ||| x✝¹) &&& x✝² ||| x✝).toNat
     c := ↑2 ^ w"
997,AliveStatements,46,bv_automata_classic_prop,PASS,21.387448,
998,AliveStatements,46,bv_automata_classic,PASS,7.925534,
999,AliveStatements,46,bv_normalize_automata_classic,PASS,25.21742,
1000,AliveStatements,46,simp,FAIL,104.781057,simp made no progress
1001,AliveStatements,46,bv_normalize,FAIL,17.420621,internal exception #5
1002,AliveStatements,46,bv_decide,FAIL,83.931149,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(~~~x✝ &&& ~~~x✝¹) &&& x✝²) &&&
         ~~~x✝ ==
       ~~~x✝ &&& ~~~(x✝² &&& x✝¹)]
    Consider the following assignment:
    ~~~(~~~(~~~x✝ &&& ~~~x✝¹) &&& x✝²) &&& ~~~x✝ == ~~~x✝ &&& ~~~(x✝² &&& x✝¹) = false"
1003,AliveStatements,46,bv_auto,PASS,218.051736,
1004,AliveStatements,46,bv_automata_circuit_lean_prop,PASS,23.557384,
1005,AliveStatements,46,bv_automata_circuit_lean,PASS,7.764408,
1006,AliveStatements,46,bv_normalize_automata_circuit_lean,PASS,25.144718,
1007,AliveStatements,46,bv_automata_circuit_cadical_prop,PASS,144.387757,
1008,AliveStatements,46,bv_automata_circuit_cadical,PASS,128.713136,
1009,AliveStatements,46,bv_normalize_automata_circuit_cadical,PASS,146.525932,
1010,AliveStatements,46,bv_mba,FAIL,3.602831,"unable to reflect term '
      (x✝ ||| x✝¹) &&& x✝² ||| x✝'.
    Expected 'int * variable'."
1011,AliveStatements,46,bv_normalize_mba,FAIL,21.270813,internal exception #5
1012,AliveStatements,47,rfl,FAIL,8.149872,"tactic 'rfl' failed, the left-hand side
      x✝ ^^^ -1#w ||| x✝¹ ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝ &&& x✝¹ ^^^ -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ ^^^ -1#w ||| x✝¹ ^^^ -1#w = x✝ &&& x✝¹ ^^^ -1#w"
1013,AliveStatements,47,bv_bitwise,PASS,626.780379,
1014,AliveStatements,47,bv_ac,FAIL,70.792622,internal exception #5
1015,AliveStatements,47,bv_distrib,FAIL,357.471412,internal exception #5
1016,AliveStatements,47,bv_ring,FAIL,372.542792,internal exception #5
1017,AliveStatements,47,bv_of_bool,FAIL,33.666349,simp made no progress
1018,AliveStatements,47,bv_omega,FAIL,11.909052,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& x✝¹ ^^^ -1#w).toNat
     b := ↑(x✝ ^^^ -1#w ||| x✝¹ ^^^ -1#w).toNat
     c := ↑2 ^ w"
1019,AliveStatements,47,bv_automata_classic_prop,PASS,68396.969859,
1020,AliveStatements,47,bv_automata_classic,PASS,8.763877,
1021,AliveStatements,47,bv_normalize_automata_classic,PASS,21.802545,
1022,AliveStatements,47,simp,FAIL,119.526176,simp made no progress
1023,AliveStatements,47,bv_normalize,FAIL,13.524307,internal exception #5
1024,AliveStatements,47,bv_decide,FAIL,79.679987,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(x✝ ^^^ -1#w) &&&
           ~~~(x✝¹ ^^^ -1#w)) ==
       x✝ &&& x✝¹ ^^^ -1#w]
    Consider the following assignment:
    ~~~(~~~(x✝ ^^^ -1#w) &&& ~~~(x✝¹ ^^^ -1#w)) == x✝ &&& x✝¹ ^^^ -1#w = false"
1025,AliveStatements,47,bv_auto,PASS,234.764462,
1026,AliveStatements,47,bv_automata_circuit_lean_prop,PASS,32.893249,
1027,AliveStatements,47,bv_automata_circuit_lean,PASS,18.515797,
1028,AliveStatements,47,bv_normalize_automata_circuit_lean,PASS,31.675548,
1029,AliveStatements,47,bv_automata_circuit_cadical_prop,PASS,271.183465,
1030,AliveStatements,47,bv_automata_circuit_cadical,PASS,250.506761,
1031,AliveStatements,47,bv_normalize_automata_circuit_cadical,PASS,266.290709,
1032,AliveStatements,47,bv_mba,FAIL,5.382703,"unable to reflect term '
      x✝ ^^^ BitVec.ofInt w (-1) ||| x✝¹ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1033,AliveStatements,47,bv_normalize_mba,FAIL,18.957546,internal exception #5
1034,AliveStatements,48,rfl,FAIL,7.698508,"tactic 'rfl' failed, the left-hand side
      x✝ ||| x✝ ^^^ x✝¹
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ ||| x✝ ^^^ x✝¹ = x✝ ||| x✝¹"
1035,AliveStatements,48,bv_bitwise,PASS,71346.634876,
1036,AliveStatements,48,bv_ac,FAIL,19.001191,internal exception #5
1037,AliveStatements,48,bv_distrib,FAIL,78.035393,internal exception #5
1038,AliveStatements,48,bv_ring,FAIL,84.94679,internal exception #5
1039,AliveStatements,48,bv_of_bool,FAIL,18.404018,simp made no progress
1040,AliveStatements,48,bv_omega,FAIL,5.178458,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹).toNat
     b := ↑(x✝ ||| x✝ ^^^ x✝¹).toNat
     c := ↑2 ^ w"
1041,AliveStatements,48,bv_automata_classic_prop,PASS,19.576552,
1042,AliveStatements,48,bv_automata_classic,PASS,6.888921,
1043,AliveStatements,48,bv_normalize_automata_classic,PASS,21.442981,
1044,AliveStatements,48,simp,FAIL,66.312143,simp made no progress
1045,AliveStatements,48,bv_normalize,FAIL,14.304021,internal exception #5
1046,AliveStatements,48,bv_decide,FAIL,81.280595,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~x✝ &&& ~~~(x✝ ^^^ x✝¹) ==
       ~~~x✝ &&& ~~~x✝¹]
    Consider the following assignment:
    ~~~x✝ &&& ~~~(x✝ ^^^ x✝¹) == ~~~x✝ &&& ~~~x✝¹ = false"
1047,AliveStatements,48,bv_auto,PASS,177.298279,
1048,AliveStatements,48,bv_automata_circuit_lean_prop,PASS,19.401173,
1049,AliveStatements,48,bv_automata_circuit_lean,PASS,6.974776,
1050,AliveStatements,48,bv_normalize_automata_circuit_lean,PASS,21.378602,
1051,AliveStatements,48,bv_automata_circuit_cadical_prop,PASS,143.542507,
1052,AliveStatements,48,bv_automata_circuit_cadical,PASS,129.13586,
1053,AliveStatements,48,bv_normalize_automata_circuit_cadical,PASS,144.033832,
1054,AliveStatements,48,bv_mba,FAIL,3.23208,"unable to reflect term '
      x✝ ||| x✝ ^^^ x✝¹'.
    Expected 'int * variable'."
1055,AliveStatements,48,bv_normalize_mba,FAIL,17.927491,internal exception #5
1056,AliveStatements,49,rfl,FAIL,11.058366,"tactic 'rfl' failed, the left-hand side
      x✝ ||| x✝ ^^^ -1#w ^^^ x✝¹
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹ ^^^ -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ ||| x✝ ^^^ -1#w ^^^ x✝¹ = x✝ ||| x✝¹ ^^^ -1#w"
1057,AliveStatements,49,bv_bitwise,PASS,72185.12951,
1058,AliveStatements,49,bv_ac,FAIL,31.146725,internal exception #5
1059,AliveStatements,49,bv_distrib,FAIL,136.749251,internal exception #5
1060,AliveStatements,49,bv_ring,FAIL,138.108929,internal exception #5
1061,AliveStatements,49,bv_of_bool,FAIL,20.299231,simp made no progress
1062,AliveStatements,49,bv_omega,FAIL,5.962155,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹ ^^^ -1#w).toNat
     b := ↑(x✝ ||| x✝ ^^^ -1#w ^^^ x✝¹).toNat
     c := ↑2 ^ w"
1063,AliveStatements,49,bv_automata_classic_prop,PASS,21.537039,
1064,AliveStatements,49,bv_automata_classic,PASS,8.594131,
1065,AliveStatements,49,bv_normalize_automata_classic,PASS,24.362389,
1066,AliveStatements,49,simp,FAIL,117.702859,simp made no progress
1067,AliveStatements,49,bv_normalize,FAIL,16.398327,internal exception #5
1068,AliveStatements,49,bv_decide,FAIL,83.999681,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~x✝ &&& ~~~(x✝ ^^^ -1#w ^^^ x✝¹) ==
       ~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w)]
    Consider the following assignment:
    ~~~x✝ &&& ~~~(x✝ ^^^ -1#w ^^^ x✝¹) == ~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w) = false"
1069,AliveStatements,49,bv_auto,PASS,361.067854,
1070,AliveStatements,49,bv_automata_circuit_lean_prop,PASS,34.148314,
1071,AliveStatements,49,bv_automata_circuit_lean,PASS,20.330449,
1072,AliveStatements,49,bv_normalize_automata_circuit_lean,PASS,36.622147,
1073,AliveStatements,49,bv_automata_circuit_cadical_prop,PASS,270.382742,
1074,AliveStatements,49,bv_automata_circuit_cadical,PASS,254.614089,
1075,AliveStatements,49,bv_normalize_automata_circuit_cadical,PASS,268.577228,
1076,AliveStatements,49,bv_mba,FAIL,5.293561,"unable to reflect term '
      x✝ ||| x✝ ^^^ BitVec.ofInt w (-1) ^^^ x✝¹'.
    Expected 'int * variable'."
1077,AliveStatements,49,bv_normalize_mba,FAIL,21.912647,internal exception #5
1078,AliveStatements,50,rfl,FAIL,8.524945,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ ||| x✝ ^^^ x✝¹
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& x✝¹ ||| x✝ ^^^ x✝¹ = x✝ ||| x✝¹"
1079,AliveStatements,50,bv_bitwise,PASS,74315.853041,
1080,AliveStatements,50,bv_ac,FAIL,26.352913,internal exception #5
1081,AliveStatements,50,bv_distrib,FAIL,98.607677,internal exception #5
1082,AliveStatements,50,bv_ring,FAIL,90.243534,internal exception #5
1083,AliveStatements,50,bv_of_bool,FAIL,19.750052,simp made no progress
1084,AliveStatements,50,bv_omega,FAIL,5.672021,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹).toNat
     b := ↑(x✝ &&& x✝¹ ||| x✝ ^^^ x✝¹).toNat
     c := ↑2 ^ w"
1085,AliveStatements,50,bv_automata_classic_prop,PASS,20.31445,
1086,AliveStatements,50,bv_automata_classic,PASS,7.203165,
1087,AliveStatements,50,bv_normalize_automata_classic,PASS,22.817998,
1088,AliveStatements,50,simp,FAIL,81.178833,simp made no progress
1089,AliveStatements,50,bv_normalize,FAIL,15.476467,internal exception #5
1090,AliveStatements,50,bv_decide,FAIL,82.338319,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(x✝ &&& x✝¹) &&& ~~~(x✝ ^^^ x✝¹) ==
       ~~~x✝ &&& ~~~x✝¹]
    Consider the following assignment:
    ~~~(x✝ &&& x✝¹) &&& ~~~(x✝ ^^^ x✝¹) == ~~~x✝ &&& ~~~x✝¹ = false"
1091,AliveStatements,50,bv_auto,PASS,198.501214,
1092,AliveStatements,50,bv_automata_circuit_lean_prop,PASS,21.317692,
1093,AliveStatements,50,bv_automata_circuit_lean,PASS,7.550931,
1094,AliveStatements,50,bv_normalize_automata_circuit_lean,PASS,22.710644,
1095,AliveStatements,50,bv_automata_circuit_cadical_prop,PASS,145.104616,
1096,AliveStatements,50,bv_automata_circuit_cadical,PASS,129.056499,
1097,AliveStatements,50,bv_normalize_automata_circuit_cadical,PASS,145.202617,
1098,AliveStatements,50,bv_mba,FAIL,3.519124,"unable to reflect term '
      x✝ &&& x✝¹ ||| x✝ ^^^ x✝¹'.
    Expected 'int * variable'."
1099,AliveStatements,50,bv_normalize_mba,FAIL,19.438168,internal exception #5
1100,AliveStatements,51,rfl,FAIL,6.565839,"tactic 'rfl' failed, the left-hand side
      x✝ ||| (x✝ ||| x✝¹) ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹ ^^^ -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ ||| (x✝ ||| x✝¹) ^^^ -1#w = x✝ ||| x✝¹ ^^^ -1#w"
1101,AliveStatements,51,bv_bitwise,PASS,75584.60992,
1102,AliveStatements,51,bv_ac,FAIL,34.998824,internal exception #5
1103,AliveStatements,51,bv_distrib,FAIL,139.432601,internal exception #5
1104,AliveStatements,51,bv_ring,FAIL,138.183016,internal exception #5
1105,AliveStatements,51,bv_of_bool,FAIL,20.333845,simp made no progress
1106,AliveStatements,51,bv_omega,FAIL,6.079481,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹ ^^^ -1#w).toNat
     b := ↑(x✝ ||| (x✝ ||| x✝¹) ^^^ -1#w).toNat
     c := ↑2 ^ w"
1107,AliveStatements,51,bv_automata_classic_prop,PASS,21.553098,
1108,AliveStatements,51,bv_automata_classic,PASS,8.018489,
1109,AliveStatements,51,bv_normalize_automata_classic,PASS,25.942039,
1110,AliveStatements,51,simp,FAIL,117.228782,simp made no progress
1111,AliveStatements,51,bv_normalize,FAIL,18.082866,internal exception #5
1112,AliveStatements,51,bv_decide,FAIL,84.746431,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~x✝ &&&
         ~~~(~~~(~~~x✝ &&& ~~~x✝¹) ^^^ -1#w) ==
       ~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w)]
    Consider the following assignment:
    ~~~x✝ &&& ~~~(~~~(~~~x✝ &&& ~~~x✝¹) ^^^ -1#w) == ~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w) = false"
1113,AliveStatements,51,bv_auto,PASS,339.486662,
1114,AliveStatements,51,bv_automata_circuit_lean_prop,PASS,33.856293,
1115,AliveStatements,51,bv_automata_circuit_lean,PASS,20.422852,
1116,AliveStatements,51,bv_normalize_automata_circuit_lean,PASS,38.222136,
1117,AliveStatements,51,bv_automata_circuit_cadical_prop,PASS,271.255504,
1118,AliveStatements,51,bv_automata_circuit_cadical,PASS,254.789171,
1119,AliveStatements,51,bv_normalize_automata_circuit_cadical,PASS,274.032904,
1120,AliveStatements,51,bv_mba,FAIL,5.118739,"unable to reflect term '
      x✝ ||| (x✝ ||| x✝¹) ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1121,AliveStatements,51,bv_normalize_mba,FAIL,23.315285,internal exception #5
1122,AliveStatements,52,rfl,FAIL,10.675432,"tactic 'rfl' failed, the left-hand side
      x✝ ||| x✝ ^^^ x✝¹ ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹ ^^^ -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ ||| x✝ ^^^ x✝¹ ^^^ -1#w = x✝ ||| x✝¹ ^^^ -1#w"
1123,AliveStatements,52,bv_bitwise,PASS,77774.452402,
1124,AliveStatements,52,bv_ac,FAIL,31.291913,internal exception #5
1125,AliveStatements,52,bv_distrib,FAIL,138.471018,internal exception #5
1126,AliveStatements,52,bv_ring,FAIL,137.655932,internal exception #5
1127,AliveStatements,52,bv_of_bool,FAIL,20.780696,simp made no progress
1128,AliveStatements,52,bv_omega,FAIL,6.114413,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹ ^^^ -1#w).toNat
     b := ↑(x✝ ||| x✝ ^^^ x✝¹ ^^^ -1#w).toNat
     c := ↑2 ^ w"
1129,AliveStatements,52,bv_automata_classic_prop,PASS,21.480124,
1130,AliveStatements,52,bv_automata_classic,PASS,10.12606,
1131,AliveStatements,52,bv_normalize_automata_classic,PASS,24.280813,
1132,AliveStatements,52,simp,FAIL,117.388179,simp made no progress
1133,AliveStatements,52,bv_normalize,FAIL,16.395513,internal exception #5
1134,AliveStatements,52,bv_decide,FAIL,83.390624,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~x✝ &&& ~~~(x✝ ^^^ x✝¹ ^^^ -1#w) ==
       ~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w)]
    Consider the following assignment:
    ~~~x✝ &&& ~~~(x✝ ^^^ x✝¹ ^^^ -1#w) == ~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w) = false"
1135,AliveStatements,52,bv_auto,PASS,341.421498,
1136,AliveStatements,52,bv_automata_circuit_lean_prop,PASS,35.31821,
1137,AliveStatements,52,bv_automata_circuit_lean,PASS,20.671524,
1138,AliveStatements,52,bv_normalize_automata_circuit_lean,PASS,36.437181,
1139,AliveStatements,52,bv_automata_circuit_cadical_prop,PASS,270.364132,
1140,AliveStatements,52,bv_automata_circuit_cadical,PASS,251.599293,
1141,AliveStatements,52,bv_normalize_automata_circuit_cadical,PASS,268.372005,
1142,AliveStatements,52,bv_mba,FAIL,5.136518,"unable to reflect term '
      x✝ ||| x✝ ^^^ x✝¹ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1143,AliveStatements,52,bv_normalize_mba,FAIL,21.688545,internal exception #5
1144,AliveStatements,53,rfl,FAIL,7.422086,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ ||| x✝ ^^^ -1#w ^^^ x✝¹
    is not definitionally equal to the right-hand side
      x✝ ^^^ -1#w ^^^ x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& x✝¹ ||| x✝ ^^^ -1#w ^^^ x✝¹ = x✝ ^^^ -1#w ^^^ x✝¹"
1145,AliveStatements,53,bv_bitwise,PASS,79764.800895,
1146,AliveStatements,53,bv_ac,FAIL,28.67675,internal exception #5
1147,AliveStatements,53,bv_distrib,FAIL,125.573522,internal exception #5
1148,AliveStatements,53,bv_ring,FAIL,139.604455,internal exception #5
1149,AliveStatements,53,bv_of_bool,FAIL,20.537311,simp made no progress
1150,AliveStatements,53,bv_omega,FAIL,5.933271,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ -1#w ^^^ x✝¹).toNat
     b := ↑(x✝ &&& x✝¹ ||| x✝ ^^^ -1#w ^^^ x✝¹).toNat
     c := ↑2 ^ w"
1151,AliveStatements,53,bv_automata_classic_prop,PASS,20.932898,
1152,AliveStatements,53,bv_automata_classic,PASS,8.019446,
1153,AliveStatements,53,bv_normalize_automata_classic,PASS,20.818758,
1154,AliveStatements,53,simp,FAIL,105.587474,simp made no progress
1155,AliveStatements,53,bv_normalize,FAIL,13.058398,internal exception #5
1156,AliveStatements,53,bv_decide,FAIL,79.96337,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(x✝ &&& x✝¹) &&&
           ~~~(x✝ ^^^ -1#w ^^^ x✝¹)) ==
       x✝ ^^^ -1#w ^^^ x✝¹]
    Consider the following assignment:
    ~~~(~~~(x✝ &&& x✝¹) &&& ~~~(x✝ ^^^ -1#w ^^^ x✝¹)) == x✝ ^^^ -1#w ^^^ x✝¹ = false"
1157,AliveStatements,53,bv_auto,PASS,513.742142,
1158,AliveStatements,53,bv_automata_circuit_lean_prop,PASS,24.087181,
1159,AliveStatements,53,bv_automata_circuit_lean,PASS,12.262316,
1160,AliveStatements,53,bv_normalize_automata_circuit_lean,PASS,23.745803,
1161,AliveStatements,53,bv_automata_circuit_cadical_prop,PASS,270.491923,
1162,AliveStatements,53,bv_automata_circuit_cadical,PASS,251.858701,
1163,AliveStatements,53,bv_normalize_automata_circuit_cadical,PASS,265.930271,
1164,AliveStatements,53,bv_mba,FAIL,5.191183,"unable to reflect term '
      x✝ &&& x✝¹ ||| x✝ ^^^ BitVec.ofInt w (-1) ^^^ x✝¹'.
    Expected 'int * variable'."
1165,AliveStatements,53,bv_normalize_mba,FAIL,18.253637,internal exception #5
1166,AliveStatements,54,rfl,FAIL,7.28848,"tactic 'rfl' failed, the left-hand side
      x✝ ||| x✝¹ ||| x✝²
    is not definitionally equal to the right-hand side
      x✝ ||| x✝² ||| x✝¹
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ x✝ ||| x✝¹ ||| x✝² = x✝ ||| x✝² ||| x✝¹"
1167,AliveStatements,54,bv_bitwise,PASS,82183.624229,
1168,AliveStatements,54,bv_ac,PASS,13.175181,
1169,AliveStatements,54,bv_distrib,PASS,172.545593,
1170,AliveStatements,54,bv_ring,FAIL,79.874097,internal exception #5
1171,AliveStatements,54,bv_of_bool,FAIL,18.365274,simp made no progress
1172,AliveStatements,54,bv_omega,FAIL,5.029669,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝² ||| x✝¹).toNat
     b := ↑(x✝ ||| x✝¹ ||| x✝²).toNat
     c := ↑2 ^ w"
1173,AliveStatements,54,bv_automata_classic_prop,PASS,19.168578,
1174,AliveStatements,54,bv_automata_classic,PASS,7.196614,
1175,AliveStatements,54,bv_normalize_automata_classic,PASS,27.188903,
1176,AliveStatements,54,simp,FAIL,91.343759,simp made no progress
1177,AliveStatements,54,bv_normalize,FAIL,20.087096,internal exception #5
1178,AliveStatements,54,bv_decide,FAIL,86.658587,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~x✝ &&& ~~~x✝¹ &&& ~~~x✝² ==
       ~~~x✝ &&& ~~~x✝² &&& ~~~x✝¹]
    Consider the following assignment:
    ~~~x✝ &&& ~~~x✝¹ &&& ~~~x✝² == ~~~x✝ &&& ~~~x✝² &&& ~~~x✝¹ = false"
1179,AliveStatements,54,bv_auto,PASS,203.57938,
1180,AliveStatements,54,bv_automata_circuit_lean_prop,PASS,19.348608,
1181,AliveStatements,54,bv_automata_circuit_lean,PASS,7.105868,
1182,AliveStatements,54,bv_normalize_automata_circuit_lean,PASS,28.85919,
1183,AliveStatements,54,bv_automata_circuit_cadical_prop,PASS,143.397384,
1184,AliveStatements,54,bv_automata_circuit_cadical,PASS,128.387664,
1185,AliveStatements,54,bv_normalize_automata_circuit_cadical,PASS,149.814039,
1186,AliveStatements,54,bv_mba,FAIL,3.103138,"unable to reflect term '
      x✝ ||| x✝¹ ||| x✝²'.
    Expected 'int * variable'."
1187,AliveStatements,54,bv_normalize_mba,FAIL,23.432312,internal exception #5
1188,AliveStatements,55,rfl,FAIL,7.65313,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ -1#w) &&& x✝¹ ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹ ^^^ -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ -1#w) &&& x✝¹ ^^^ -1#w = x✝ ||| x✝¹ ^^^ -1#w"
1189,AliveStatements,55,bv_bitwise,PASS,594.533502,
1190,AliveStatements,55,bv_ac,FAIL,64.074859,internal exception #5
1191,AliveStatements,55,bv_distrib,FAIL,351.555833,internal exception #5
1192,AliveStatements,55,bv_ring,FAIL,396.788211,internal exception #5
1193,AliveStatements,55,bv_of_bool,FAIL,38.326172,simp made no progress
1194,AliveStatements,55,bv_omega,FAIL,13.367318,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹ ^^^ -1#w).toNat
     b := ↑((x✝ ^^^ -1#w) &&& x✝¹ ^^^ -1#w).toNat
     c := ↑2 ^ w"
1195,AliveStatements,55,bv_automata_classic_prop,PASS,82206.299937,
1196,AliveStatements,55,bv_automata_classic,PASS,8.663324,
1197,AliveStatements,55,bv_normalize_automata_classic,PASS,21.777813,
1198,AliveStatements,55,simp,FAIL,121.773543,simp made no progress
1199,AliveStatements,55,bv_normalize,FAIL,13.732625,internal exception #5
1200,AliveStatements,55,bv_decide,FAIL,78.837314,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ ^^^ -1#w) &&& x✝¹ ^^^ -1#w ==
       ~~~(~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w))]
    Consider the following assignment:
    (x✝ ^^^ -1#w) &&& x✝¹ ^^^ -1#w == ~~~(~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w)) = false"
1201,AliveStatements,55,bv_auto,PASS,255.231107,
1202,AliveStatements,55,bv_automata_circuit_lean_prop,PASS,27.783086,
1203,AliveStatements,55,bv_automata_circuit_lean,PASS,13.907416,
1204,AliveStatements,55,bv_normalize_automata_circuit_lean,PASS,27.221446,
1205,AliveStatements,55,bv_automata_circuit_cadical_prop,PASS,271.731419,
1206,AliveStatements,55,bv_automata_circuit_cadical,PASS,251.498914,
1207,AliveStatements,55,bv_normalize_automata_circuit_cadical,PASS,266.298112,
1208,AliveStatements,55,bv_mba,FAIL,5.678255,"unable to reflect term '
      (x✝ ^^^ BitVec.ofInt w (-1)) &&& x✝¹ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1209,AliveStatements,55,bv_normalize_mba,FAIL,19.505678,internal exception #5
1210,AliveStatements,56,rfl,FAIL,22.0261,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ -1#w ||| x✝¹) ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝ &&& (x✝¹ ^^^ -1#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ^^^ -1#w ||| x✝¹) ^^^ -1#w = x✝ &&& (x✝¹ ^^^ -1#w)"
1211,AliveStatements,56,bv_bitwise,PASS,582.55171,
1212,AliveStatements,56,bv_ac,FAIL,59.478542,internal exception #5
1213,AliveStatements,56,bv_distrib,FAIL,337.534751,internal exception #5
1214,AliveStatements,56,bv_ring,FAIL,408.734633,internal exception #5
1215,AliveStatements,56,bv_of_bool,FAIL,42.071102,simp made no progress
1216,AliveStatements,56,bv_omega,FAIL,11.284814,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& (x✝¹ ^^^ -1#w)).toNat
     b := ↑((x✝ ^^^ -1#w ||| x✝¹) ^^^ -1#w).toNat
     c := ↑2 ^ w"
1217,AliveStatements,56,bv_automata_classic_prop,PASS,83790.949804,
1218,AliveStatements,56,bv_automata_classic,PASS,8.599834,
1219,AliveStatements,56,bv_normalize_automata_classic,PASS,21.89899,
1220,AliveStatements,56,simp,FAIL,122.202269,simp made no progress
1221,AliveStatements,56,bv_normalize,FAIL,13.766654,internal exception #5
1222,AliveStatements,56,bv_decide,FAIL,80.887978,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(x✝ ^^^ -1#w) &&& ~~~x✝¹) ^^^
         -1#w ==
       x✝ &&& (x✝¹ ^^^ -1#w)]
    Consider the following assignment:
    ~~~(~~~(x✝ ^^^ -1#w) &&& ~~~x✝¹) ^^^ -1#w == x✝ &&& (x✝¹ ^^^ -1#w) = false"
1223,AliveStatements,56,bv_auto,PASS,253.074573,
1224,AliveStatements,56,bv_automata_circuit_lean_prop,PASS,31.721751,
1225,AliveStatements,56,bv_automata_circuit_lean,PASS,18.447261,
1226,AliveStatements,56,bv_normalize_automata_circuit_lean,PASS,31.593943,
1227,AliveStatements,56,bv_automata_circuit_cadical_prop,PASS,273.307183,
1228,AliveStatements,56,bv_automata_circuit_cadical,PASS,252.82197,
1229,AliveStatements,56,bv_normalize_automata_circuit_cadical,PASS,267.292931,
1230,AliveStatements,56,bv_mba,FAIL,5.560813,"unable to reflect term '
      (x✝ ^^^ BitVec.ofInt w (-1) ||| x✝¹) ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1231,AliveStatements,56,bv_normalize_mba,FAIL,19.453431,internal exception #5
1232,AliveStatements,57,rfl,FAIL,8.569221,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝ ^^^ -1#w ||| x✝¹ ^^^ -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& x✝¹ ^^^ -1#w = x✝ ^^^ -1#w ||| x✝¹ ^^^ -1#w"
1233,AliveStatements,57,bv_bitwise,PASS,547.885509,
1234,AliveStatements,57,bv_ac,FAIL,58.057227,internal exception #5
1235,AliveStatements,57,bv_distrib,FAIL,336.879472,internal exception #5
1236,AliveStatements,57,bv_ring,FAIL,383.89867,internal exception #5
1237,AliveStatements,57,bv_of_bool,FAIL,40.152375,simp made no progress
1238,AliveStatements,57,bv_omega,FAIL,10.813344,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ -1#w ||| x✝¹ ^^^ -1#w).toNat
     b := ↑(x✝ &&& x✝¹ ^^^ -1#w).toNat
     c := ↑2 ^ w"
1239,AliveStatements,57,bv_automata_classic_prop,PASS,85446.953749,
1240,AliveStatements,57,bv_automata_classic,PASS,8.519916,
1241,AliveStatements,57,bv_normalize_automata_classic,PASS,21.590611,
1242,AliveStatements,57,simp,FAIL,118.740469,simp made no progress
1243,AliveStatements,57,bv_normalize,FAIL,13.500367,internal exception #5
1244,AliveStatements,57,bv_decide,FAIL,80.255669,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& x✝¹ ^^^ -1#w ==
       ~~~(~~~(x✝ ^^^ -1#w) &&& ~~~(x✝¹ ^^^ -1#w))]
    Consider the following assignment:
    x✝ &&& x✝¹ ^^^ -1#w == ~~~(~~~(x✝ ^^^ -1#w) &&& ~~~(x✝¹ ^^^ -1#w)) = false"
1245,AliveStatements,57,bv_auto,PASS,233.431519,
1246,AliveStatements,57,bv_automata_circuit_lean_prop,PASS,29.859361,
1247,AliveStatements,57,bv_automata_circuit_lean,PASS,16.074385,
1248,AliveStatements,57,bv_normalize_automata_circuit_lean,PASS,28.807655,
1249,AliveStatements,57,bv_automata_circuit_cadical_prop,PASS,274.020334,
1250,AliveStatements,57,bv_automata_circuit_cadical,PASS,253.030842,
1251,AliveStatements,57,bv_normalize_automata_circuit_cadical,PASS,266.307319,
1252,AliveStatements,57,bv_mba,FAIL,5.422576,"unable to reflect term '
      x✝ &&& x✝¹ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1253,AliveStatements,57,bv_normalize_mba,FAIL,18.858125,internal exception #5
1254,AliveStatements,58,rfl,FAIL,6.396149,"tactic 'rfl' failed, the left-hand side
      (x✝ ||| x✝¹) ^^^ -1#w
    is not definitionally equal to the right-hand side
      (x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ||| x✝¹) ^^^ -1#w = (x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w)"
1255,AliveStatements,58,bv_bitwise,PASS,549.934036,
1256,AliveStatements,58,bv_ac,FAIL,98.34871,internal exception #5
1257,AliveStatements,58,bv_distrib,FAIL,365.175956,internal exception #5
1258,AliveStatements,58,bv_ring,FAIL,345.026189,internal exception #5
1259,AliveStatements,58,bv_of_bool,FAIL,39.209546,simp made no progress
1260,AliveStatements,58,bv_omega,FAIL,11.173531,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w)).toNat
     b := ↑((x✝ ||| x✝¹) ^^^ -1#w).toNat
     c := ↑2 ^ w"
1261,AliveStatements,58,bv_automata_classic_prop,PASS,86918.414644,
1262,AliveStatements,58,bv_automata_classic,PASS,8.567121,
1263,AliveStatements,58,bv_normalize_automata_classic,PASS,22.041017,
1264,AliveStatements,58,simp,FAIL,119.470428,simp made no progress
1265,AliveStatements,58,bv_normalize,FAIL,13.745409,internal exception #5
1266,AliveStatements,58,bv_decide,FAIL,80.409074,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~x✝¹) ^^^ -1#w ==
       (x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w)]
    Consider the following assignment:
    ~~~(~~~x✝ &&& ~~~x✝¹) ^^^ -1#w == (x✝ ^^^ -1#w) &&& (x✝¹ ^^^ -1#w) = false"
1267,AliveStatements,58,bv_auto,PASS,235.733676,
1268,AliveStatements,58,bv_automata_circuit_lean_prop,PASS,30.970755,
1269,AliveStatements,58,bv_automata_circuit_lean,PASS,15.566142,
1270,AliveStatements,58,bv_normalize_automata_circuit_lean,PASS,28.893827,
1271,AliveStatements,58,bv_automata_circuit_cadical_prop,PASS,271.965121,
1272,AliveStatements,58,bv_automata_circuit_cadical,PASS,252.839702,
1273,AliveStatements,58,bv_normalize_automata_circuit_cadical,PASS,266.888409,
1274,AliveStatements,58,bv_mba,FAIL,5.423385,"unable to reflect term '
      (x✝ ||| x✝¹) ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1275,AliveStatements,58,bv_normalize_mba,FAIL,19.095645,internal exception #5
1276,AliveStatements,59,rfl,FAIL,19.855011,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ -1#w).sshiftRight' x✝¹ ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝.sshiftRight' x✝¹
    case neg
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝ : ¬x✝¹ ≥ ↑w
    ⊢ (x✝ ^^^ -1#w).sshiftRight' x✝¹ ^^^ -1#w = x✝.sshiftRight' x✝¹"
1277,AliveStatements,59,bv_bitwise,PASS,559.72094,
1278,AliveStatements,59,bv_ac,FAIL,61.770394,internal exception #5
1279,AliveStatements,59,bv_distrib,FAIL,458.359942,internal exception #5
1280,AliveStatements,59,bv_ring,FAIL,398.383461,internal exception #5
1281,AliveStatements,59,bv_of_bool,FAIL,37.085446,simp made no progress
1282,AliveStatements,59,bv_omega,FAIL,12.219143,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝¹.toNat
     c := ↑2 ^ w
     d := ↑(x✝.sshiftRight' x✝¹).toNat
     e := ↑((x✝ ^^^ -1#w).sshiftRight' x✝¹ ^^^ -1#w).toNat"
1283,AliveStatements,59,bv_automata_classic_prop,FAIL,88135.488271,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 2).xor Copy.Term.one.neg)
                      (Copy.Term.var 3)))) =
              true)) =
        true
    is false"
1284,AliveStatements,59,bv_automata_classic,FAIL,11.013882,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 2).xor Copy.Term.one.neg)
                      (Copy.Term.var 3)))) =
              true)) =
        true
    is false"
1285,AliveStatements,59,bv_normalize_automata_classic,FAIL,24.672211,internal exception #5
1286,AliveStatements,59,simp,FAIL,152.705084,internal exception #5
1287,AliveStatements,59,bv_normalize,FAIL,14.058146,internal exception #5
1288,AliveStatements,59,bv_decide,FAIL,81.087261,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ ^^^ -1#w).sshiftRight' x✝¹ ^^^
         -1#w ==
       x✝.sshiftRight' x✝¹,
     x✝¹ <ᵤ BitVec.ofNat w w]
    Consider the following assignment:
    x✝¹ <ᵤ BitVec.ofNat w w = true
    (x✝ ^^^ -1#w).sshiftRight' x✝¹ ^^^ -1#w == x✝.sshiftRight' x✝¹ = false"
1289,AliveStatements,59,bv_auto,PASS,230.230293,
1290,AliveStatements,59,bv_automata_circuit_lean_prop,FAIL,22.384446,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                      (Predicate.eq ((Term.var 2).xor Term.one.neg) (Term.var 3))).eval
                  vars w =
                false)) =
        true
    is false"
1291,AliveStatements,59,bv_automata_circuit_lean,FAIL,9.847852,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                      (Predicate.eq ((Term.var 2).xor Term.one.neg) (Term.var 3))).eval
                  vars w =
                false)) =
        true
    is false"
1292,AliveStatements,59,bv_normalize_automata_circuit_lean,FAIL,24.065733,internal exception #5
1293,AliveStatements,59,bv_automata_circuit_cadical_prop,FAIL,208.859618,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1294,AliveStatements,59,bv_automata_circuit_cadical,FAIL,191.601615,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1295,AliveStatements,59,bv_normalize_automata_circuit_cadical,FAIL,210.32425,internal exception #5
1296,AliveStatements,59,bv_mba,FAIL,4.96285,"unable to reflect term '
      (x✝ ^^^ BitVec.ofInt w (-1)).sshiftRight' x✝¹ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1297,AliveStatements,59,bv_normalize_mba,FAIL,19.132783,internal exception #5
1298,AliveStatements,60,rfl,FAIL,52.541195,"tactic 'rfl' failed, the left-hand side
      BitVec.ofBool (x✝ <ₛ x✝¹) ^^^ -1#1
    is not definitionally equal to the right-hand side
      BitVec.ofBool (x✝¹ ≤ₛ x✝)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ BitVec.ofBool (x✝ <ₛ x✝¹) ^^^ -1#1 = BitVec.ofBool (x✝¹ ≤ₛ x✝)"
1299,AliveStatements,60,bv_bitwise,FAIL,472.59393,internal exception #5
1300,AliveStatements,60,bv_ac,FAIL,70.130569,internal exception #5
1301,AliveStatements,60,bv_distrib,FAIL,380.336635,internal exception #5
1302,AliveStatements,60,bv_ring,FAIL,314.856906,internal exception #5
1303,AliveStatements,60,bv_of_bool,FAIL,196.47378,simp made no progress
1304,AliveStatements,60,bv_omega,FAIL,10.234105,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(BitVec.ofBool (x✝¹ ≤ₛ x✝)).toNat
     b := ↑(BitVec.ofBool (x✝ <ₛ x✝¹) ^^^ -1#1).toNat"
1305,AliveStatements,60,bv_automata_classic_prop,FAIL,18.753129,"found multiple bitvector widths in the target: 
      OfNat.ofNat.{0} Nat 1 (instOfNatNat 1) → BitVec.ofBool (BitVec.sle _uniq.3146 _uniq.5734 _uniq.5735)_uniq.3146 → _uniq.5734"
1306,AliveStatements,60,bv_automata_classic,FAIL,0.413209,"found multiple bitvector widths in the target: 
      OfNat.ofNat.{0} Nat 1 (instOfNatNat 1) → BitVec.ofBool (BitVec.sle _uniq.3146 _uniq.5734 _uniq.5735)_uniq.3146 → _uniq.5734"
1307,AliveStatements,60,bv_normalize_automata_classic,FAIL,74.626311,internal exception #5
1308,AliveStatements,60,simp,FAIL,302.780827,internal exception #5
1309,AliveStatements,60,bv_normalize,FAIL,83.180906,internal exception #5
1310,AliveStatements,60,bv_decide,PASS,89239.789041,
1311,AliveStatements,60,bv_auto,PASS,748.196882,
1312,AliveStatements,60,bv_automata_circuit_lean_prop,FAIL,12.249328,"found multiple bitvector widths in the target: 
      1 → BitVec.ofBool (x✝¹ ≤ₛ x✝); w → x✝¹"
1313,AliveStatements,60,bv_automata_circuit_lean,FAIL,0.192923,"found multiple bitvector widths in the target: 
      1 → BitVec.ofBool (x✝¹ ≤ₛ x✝); w → x✝¹"
1314,AliveStatements,60,bv_normalize_automata_circuit_lean,FAIL,28.422593,internal exception #5
1315,AliveStatements,60,bv_automata_circuit_cadical_prop,FAIL,14.111321,"found multiple bitvector widths in the target: 
      1 → BitVec.ofBool (x✝¹ ≤ₛ x✝); w → x✝¹"
1316,AliveStatements,60,bv_automata_circuit_cadical,FAIL,2.171784,"found multiple bitvector widths in the target: 
      1 → BitVec.ofBool (x✝¹ ≤ₛ x✝); w → x✝¹"
1317,AliveStatements,60,bv_normalize_automata_circuit_cadical,FAIL,30.167289,internal exception #5
1318,AliveStatements,60,bv_mba,FAIL,4.394181,"unable to reflect term '
      BitVec.ofBool (x✝ <ₛ x✝¹) ^^^ BitVec.ofInt 1 (-1)'.
    Expected 'int * variable'."
1319,AliveStatements,60,bv_normalize_mba,FAIL,31.998953,internal exception #5
1320,AliveStatements,61,rfl,FAIL,24.238048,"tactic 'rfl' failed, the left-hand side
      x✝ - x✝¹ ^^^ -1#w
    is not definitionally equal to the right-hand side
      x✝¹ + (-1#w - x✝)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ - x✝¹ ^^^ -1#w = x✝¹ + (-1#w - x✝)"
1321,AliveStatements,61,bv_bitwise,FAIL,675.662349,internal exception #5
1322,AliveStatements,61,bv_ac,FAIL,112.42941,internal exception #5
1323,AliveStatements,61,bv_distrib,FAIL,315.698942,internal exception #5
1324,AliveStatements,61,bv_ring,FAIL,553.246378,internal exception #5
1325,AliveStatements,61,bv_of_bool,FAIL,57.47976,simp made no progress
1326,AliveStatements,61,bv_omega,FAIL,24.26826,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝¹.toNat + ((2 ^ w - 1 % 2 ^ w) % 2 ^ w + (2 ^ w - x✝.toNat)) % 2 ^ w) % ↑(2 ^ w)
     b := ↑(x✝ - x✝¹ ^^^ -1#w).toNat
     c := ↑2 ^ w"
1327,AliveStatements,61,bv_automata_classic_prop,PASS,90853.368698,
1328,AliveStatements,61,bv_automata_classic,PASS,8.620054,
1329,AliveStatements,61,bv_normalize_automata_classic,PASS,24.282948,
1330,AliveStatements,61,simp,FAIL,117.817916,simp made no progress
1331,AliveStatements,61,bv_normalize,FAIL,15.614178,internal exception #5
1332,AliveStatements,61,bv_decide,FAIL,81.677949,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ + -x✝¹ ^^^ -1#w ==
       x✝¹ + (-1#w + -x✝)]
    Consider the following assignment:
    x✝ + -x✝¹ ^^^ -1#w == x✝¹ + (-1#w + -x✝) = false"
1333,AliveStatements,61,bv_auto,PASS,748.32079,
1334,AliveStatements,61,bv_automata_circuit_lean_prop,PASS,286.8051,
1335,AliveStatements,61,bv_automata_circuit_lean,PASS,272.213133,
1336,AliveStatements,61,bv_normalize_automata_circuit_lean,PASS,287.409937,
1337,AliveStatements,61,bv_automata_circuit_cadical_prop,PASS,275.598861,
1338,AliveStatements,61,bv_automata_circuit_cadical,PASS,251.722944,
1339,AliveStatements,61,bv_normalize_automata_circuit_cadical,PASS,268.725509,
1340,AliveStatements,61,bv_mba,FAIL,8.111474,"unable to reflect term '
      x✝ + -x✝¹ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1341,AliveStatements,61,bv_normalize_mba,FAIL,23.377668,internal exception #5
1342,AliveStatements,62,rfl,FAIL,41.373646,"tactic 'rfl' failed, the left-hand side
      x✝ + x✝¹ ^^^ -1#w
    is not definitionally equal to the right-hand side
      -1#w - x✝¹ - x✝
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ + x✝¹ ^^^ -1#w = -1#w - x✝¹ - x✝"
1343,AliveStatements,62,bv_bitwise,FAIL,729.808025,internal exception #5
1344,AliveStatements,62,bv_ac,FAIL,97.999029,internal exception #5
1345,AliveStatements,62,bv_distrib,FAIL,352.944734,internal exception #5
1346,AliveStatements,62,bv_ring,FAIL,586.521277,internal exception #5
1347,AliveStatements,62,bv_of_bool,FAIL,38.620312,simp made no progress
1348,AliveStatements,62,bv_omega,FAIL,20.797175,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(((2 ^ w - 1 % 2 ^ w) % 2 ^ w + (2 ^ w - x✝¹.toNat)) % 2 ^ w + (2 ^ w - x✝.toNat)) % ↑(2 ^ w)
     b := ↑(x✝ + x✝¹ ^^^ -1#w).toNat
     c := ↑2 ^ w"
1349,AliveStatements,62,bv_automata_classic_prop,PASS,94057.658146,
1350,AliveStatements,62,bv_automata_classic,PASS,8.423044,
1351,AliveStatements,62,bv_normalize_automata_classic,PASS,23.400768,
1352,AliveStatements,62,simp,FAIL,118.750107,simp made no progress
1353,AliveStatements,62,bv_normalize,FAIL,14.949007,internal exception #5
1354,AliveStatements,62,bv_decide,FAIL,82.399926,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ + x✝¹ ^^^ -1#w == -1#w + -x✝¹ + -x✝]
    Consider the following assignment:
    x✝ + x✝¹ ^^^ -1#w == -1#w + -x✝¹ + -x✝ = false"
1355,AliveStatements,62,bv_auto,PASS,722.144079,
1356,AliveStatements,62,bv_automata_circuit_lean_prop,PASS,261.158354,
1357,AliveStatements,62,bv_automata_circuit_lean,PASS,247.596216,
1358,AliveStatements,62,bv_normalize_automata_circuit_lean,PASS,261.736914,
1359,AliveStatements,62,bv_automata_circuit_cadical_prop,PASS,276.574016,
1360,AliveStatements,62,bv_automata_circuit_cadical,PASS,253.013162,
1361,AliveStatements,62,bv_normalize_automata_circuit_cadical,PASS,268.244213,
1362,AliveStatements,62,bv_mba,FAIL,8.72356,"unable to reflect term '
      x✝ + x✝¹ ^^^ BitVec.ofInt w (-1)'.
    Expected 'int * variable'."
1363,AliveStatements,62,bv_normalize_mba,FAIL,23.737556,internal exception #5
1364,AliveStatements,63,rfl,FAIL,6.404066,"tactic 'rfl' failed, the left-hand side
      (x✝ ||| x✝¹) ^^^ x✝¹
    is not definitionally equal to the right-hand side
      x✝ &&& (x✝¹ ^^^ -1#w)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ||| x✝¹) ^^^ x✝¹ = x✝ &&& (x✝¹ ^^^ -1#w)"
1365,AliveStatements,63,bv_bitwise,PASS,99147.442626,
1366,AliveStatements,63,bv_ac,FAIL,28.273744,internal exception #5
1367,AliveStatements,63,bv_distrib,FAIL,125.441694,internal exception #5
1368,AliveStatements,63,bv_ring,FAIL,138.854977,internal exception #5
1369,AliveStatements,63,bv_of_bool,FAIL,19.984385,simp made no progress
1370,AliveStatements,63,bv_omega,FAIL,6.040697,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& (x✝¹ ^^^ -1#w)).toNat
     b := ↑((x✝ ||| x✝¹) ^^^ x✝¹).toNat
     c := ↑2 ^ w"
1371,AliveStatements,63,bv_automata_classic_prop,PASS,20.221698,
1372,AliveStatements,63,bv_automata_classic,PASS,7.716452,
1373,AliveStatements,63,bv_normalize_automata_classic,PASS,22.600515,
1374,AliveStatements,63,simp,FAIL,104.993615,simp made no progress
1375,AliveStatements,63,bv_normalize,FAIL,13.157357,internal exception #5
1376,AliveStatements,63,bv_decide,FAIL,80.564505,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~x✝¹) ^^^ x✝¹ ==
       x✝ &&& (x✝¹ ^^^ -1#w)]
    Consider the following assignment:
    ~~~(~~~x✝ &&& ~~~x✝¹) ^^^ x✝¹ == x✝ &&& (x✝¹ ^^^ -1#w) = false"
1377,AliveStatements,63,bv_auto,PASS,286.990181,
1378,AliveStatements,63,bv_automata_circuit_lean_prop,PASS,20.877678,
1379,AliveStatements,63,bv_automata_circuit_lean,PASS,8.655837,
1380,AliveStatements,63,bv_normalize_automata_circuit_lean,PASS,21.369561,
1381,AliveStatements,63,bv_automata_circuit_cadical_prop,PASS,270.322628,
1382,AliveStatements,63,bv_automata_circuit_cadical,PASS,251.603702,
1383,AliveStatements,63,bv_normalize_automata_circuit_cadical,PASS,265.716066,
1384,AliveStatements,63,bv_mba,FAIL,5.046393,"unable to reflect term '
      (x✝ ||| x✝¹) ^^^ x✝¹'.
    Expected 'int * variable'."
1385,AliveStatements,63,bv_normalize_mba,FAIL,18.236601,internal exception #5
1386,AliveStatements,64,rfl,FAIL,6.374871,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ ^^^ x✝¹
    is not definitionally equal to the right-hand side
      (x✝ ^^^ -1#w) &&& x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& x✝¹ ^^^ x✝¹ = (x✝ ^^^ -1#w) &&& x✝¹"
1387,AliveStatements,64,bv_bitwise,PASS,100872.624975,
1388,AliveStatements,64,bv_ac,FAIL,27.934727,internal exception #5
1389,AliveStatements,64,bv_distrib,FAIL,123.817234,internal exception #5
1390,AliveStatements,64,bv_ring,FAIL,135.756629,internal exception #5
1391,AliveStatements,64,bv_of_bool,FAIL,19.018627,simp made no progress
1392,AliveStatements,64,bv_omega,FAIL,5.733803,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝ ^^^ -1#w) &&& x✝¹).toNat
     b := ↑(x✝ &&& x✝¹ ^^^ x✝¹).toNat
     c := ↑2 ^ w"
1393,AliveStatements,64,bv_automata_classic_prop,PASS,19.546207,
1394,AliveStatements,64,bv_automata_classic,PASS,7.235847,
1395,AliveStatements,64,bv_normalize_automata_classic,PASS,17.783143,
1396,AliveStatements,64,simp,FAIL,104.007391,simp made no progress
1397,AliveStatements,64,bv_normalize,FAIL,10.880486,internal exception #5
1398,AliveStatements,64,bv_decide,FAIL,78.187573,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& x✝¹ ^^^ x✝¹ ==
       (x✝ ^^^ -1#w) &&& x✝¹]
    Consider the following assignment:
    x✝ &&& x✝¹ ^^^ x✝¹ == (x✝ ^^^ -1#w) &&& x✝¹ = false"
1399,AliveStatements,64,bv_auto,PASS,278.075419,
1400,AliveStatements,64,bv_automata_circuit_lean_prop,PASS,20.70598,
1401,AliveStatements,64,bv_automata_circuit_lean,PASS,9.965323,
1402,AliveStatements,64,bv_normalize_automata_circuit_lean,PASS,18.628159,
1403,AliveStatements,64,bv_automata_circuit_cadical_prop,PASS,268.369061,
1404,AliveStatements,64,bv_automata_circuit_cadical,PASS,251.612139,
1405,AliveStatements,64,bv_normalize_automata_circuit_cadical,PASS,263.871244,
1406,AliveStatements,64,bv_mba,FAIL,5.11198,"unable to reflect term '
      x✝ &&& x✝¹ ^^^ x✝¹'.
    Expected 'int * variable'."
1407,AliveStatements,64,bv_normalize_mba,FAIL,15.855394,internal exception #5
1408,AliveStatements,65,rfl,FAIL,8.337535,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ ^^^ (x✝ ||| x✝¹)
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& x✝¹ ^^^ (x✝ ||| x✝¹) = x✝ ^^^ x✝¹"
1409,AliveStatements,65,bv_bitwise,PASS,102759.64379,
1410,AliveStatements,65,bv_ac,FAIL,25.917093,internal exception #5
1411,AliveStatements,65,bv_distrib,FAIL,98.87695,internal exception #5
1412,AliveStatements,65,bv_ring,FAIL,88.878666,internal exception #5
1413,AliveStatements,65,bv_of_bool,FAIL,18.9144,simp made no progress
1414,AliveStatements,65,bv_omega,FAIL,5.631464,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑(x✝ &&& x✝¹ ^^^ (x✝ ||| x✝¹)).toNat
     c := ↑2 ^ w"
1415,AliveStatements,65,bv_automata_classic_prop,PASS,19.38163,
1416,AliveStatements,65,bv_automata_classic,PASS,7.241139,
1417,AliveStatements,65,bv_normalize_automata_classic,PASS,21.855825,
1418,AliveStatements,65,simp,FAIL,80.68791,simp made no progress
1419,AliveStatements,65,bv_normalize,FAIL,14.74389,internal exception #5
1420,AliveStatements,65,bv_decide,FAIL,81.394971,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& x✝¹ ^^^ ~~~(~~~x✝ &&& ~~~x✝¹) ==
       x✝ ^^^ x✝¹]
    Consider the following assignment:
    x✝ &&& x✝¹ ^^^ ~~~(~~~x✝ &&& ~~~x✝¹) == x✝ ^^^ x✝¹ = false"
1421,AliveStatements,65,bv_auto,PASS,194.385273,
1422,AliveStatements,65,bv_automata_circuit_lean_prop,PASS,19.884071,
1423,AliveStatements,65,bv_automata_circuit_lean,PASS,7.454383,
1424,AliveStatements,65,bv_normalize_automata_circuit_lean,PASS,21.859504,
1425,AliveStatements,65,bv_automata_circuit_cadical_prop,PASS,144.16811,
1426,AliveStatements,65,bv_automata_circuit_cadical,PASS,129.258515,
1427,AliveStatements,65,bv_normalize_automata_circuit_cadical,PASS,145.148541,
1428,AliveStatements,65,bv_mba,FAIL,3.434429,"unable to reflect term '
      x✝ &&& x✝¹ ^^^ (x✝ ||| x✝¹)'.
    Expected 'int * variable'."
1429,AliveStatements,65,bv_normalize_mba,FAIL,18.312942,internal exception #5
1430,AliveStatements,66,rfl,FAIL,8.696797,"tactic 'rfl' failed, the left-hand side
      (x✝ ||| x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w ||| x✝¹)
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (x✝ ||| x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w ||| x✝¹) = x✝ ^^^ x✝¹"
1431,AliveStatements,66,bv_bitwise,PASS,104020.216904,
1432,AliveStatements,66,bv_ac,FAIL,31.162216,internal exception #5
1433,AliveStatements,66,bv_distrib,FAIL,153.622034,internal exception #5
1434,AliveStatements,66,bv_ring,FAIL,136.262175,internal exception #5
1435,AliveStatements,66,bv_of_bool,FAIL,20.638404,simp made no progress
1436,AliveStatements,66,bv_omega,FAIL,6.057318,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑((x✝ ||| x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w ||| x✝¹)).toNat
     c := ↑2 ^ w"
1437,AliveStatements,66,bv_automata_classic_prop,PASS,20.852691,
1438,AliveStatements,66,bv_automata_classic,PASS,8.269631,
1439,AliveStatements,66,bv_normalize_automata_classic,PASS,26.06451,
1440,AliveStatements,66,simp,FAIL,134.453879,simp made no progress
1441,AliveStatements,66,bv_normalize,FAIL,17.758488,internal exception #5
1442,AliveStatements,66,bv_decide,FAIL,85.542557,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w)) ^^^
         ~~~(~~~(x✝ ^^^ -1#w) &&& ~~~x✝¹) ==
       x✝ ^^^ x✝¹]
    Consider the following assignment:
    ~~~(~~~x✝ &&& ~~~(x✝¹ ^^^ -1#w)) ^^^ ~~~(~~~(x✝ ^^^ -1#w) &&& ~~~x✝¹) == x✝ ^^^ x✝¹ = false"
1443,AliveStatements,66,bv_auto,PASS,377.991422,
1444,AliveStatements,66,bv_automata_circuit_lean_prop,PASS,22.57117,
1445,AliveStatements,66,bv_automata_circuit_lean,PASS,9.726213,
1446,AliveStatements,66,bv_normalize_automata_circuit_lean,PASS,27.065195,
1447,AliveStatements,66,bv_automata_circuit_cadical_prop,PASS,270.988838,
1448,AliveStatements,66,bv_automata_circuit_cadical,PASS,252.779018,
1449,AliveStatements,66,bv_normalize_automata_circuit_cadical,PASS,271.19535,
1450,AliveStatements,66,bv_mba,FAIL,5.44234,"unable to reflect term '
      (x✝ ||| x✝¹ ^^^ BitVec.ofInt w (-1)) ^^^ (x✝ ^^^ BitVec.ofInt w (-1) ||| x✝¹)'.
    Expected 'int * variable'."
1451,AliveStatements,66,bv_normalize_mba,FAIL,23.198149,internal exception #5
1452,AliveStatements,67,rfl,FAIL,7.148235,"tactic 'rfl' failed, the left-hand side
      x✝ &&& (x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w) &&& x✝¹
    is not definitionally equal to the right-hand side
      x✝ ^^^ x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& (x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w) &&& x✝¹ = x✝ ^^^ x✝¹"
1453,AliveStatements,67,bv_bitwise,PASS,106253.824247,
1454,AliveStatements,67,bv_ac,FAIL,32.337468,internal exception #5
1455,AliveStatements,67,bv_distrib,FAIL,154.945094,internal exception #5
1456,AliveStatements,67,bv_ring,FAIL,136.554636,internal exception #5
1457,AliveStatements,67,bv_of_bool,FAIL,20.150635,simp made no progress
1458,AliveStatements,67,bv_omega,FAIL,6.001942,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ^^^ x✝¹).toNat
     b := ↑(x✝ &&& (x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w) &&& x✝¹).toNat
     c := ↑2 ^ w"
1459,AliveStatements,67,bv_automata_classic_prop,PASS,20.444683,
1460,AliveStatements,67,bv_automata_classic,PASS,8.261462,
1461,AliveStatements,67,bv_normalize_automata_classic,PASS,22.24149,
1462,AliveStatements,67,simp,FAIL,130.902682,simp made no progress
1463,AliveStatements,67,bv_normalize,FAIL,14.192136,internal exception #5
1464,AliveStatements,67,bv_decide,FAIL,81.51384,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& (x✝¹ ^^^ -1#w) ^^^
         (x✝ ^^^ -1#w) &&& x✝¹ ==
       x✝ ^^^ x✝¹]
    Consider the following assignment:
    x✝ &&& (x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w) &&& x✝¹ == x✝ ^^^ x✝¹ = false"
1465,AliveStatements,67,bv_auto,PASS,369.517982,
1466,AliveStatements,67,bv_automata_circuit_lean_prop,PASS,22.716851,
1467,AliveStatements,67,bv_automata_circuit_lean,PASS,11.936814,
1468,AliveStatements,67,bv_normalize_automata_circuit_lean,PASS,23.86174,
1469,AliveStatements,67,bv_automata_circuit_cadical_prop,PASS,269.954281,
1470,AliveStatements,67,bv_automata_circuit_cadical,PASS,251.959513,
1471,AliveStatements,67,bv_normalize_automata_circuit_cadical,PASS,266.814673,
1472,AliveStatements,67,bv_mba,FAIL,5.422355,"unable to reflect term '
      x✝ &&& (x✝¹ ^^^ BitVec.ofInt w (-1)) ^^^ (x✝ ^^^ BitVec.ofInt w (-1)) &&& x✝¹'.
    Expected 'int * variable'."
1473,AliveStatements,67,bv_normalize_mba,FAIL,19.698537,internal exception #5
1474,AliveStatements,68,rfl,FAIL,9.540597,"tactic 'rfl' failed, the left-hand side
      x✝ ^^^ x✝¹ ^^^ (x✝ ||| x✝²)
    is not definitionally equal to the right-hand side
      (x✝ ^^^ -1#w) &&& x✝² ^^^ x✝¹
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ x✝ ^^^ x✝¹ ^^^ (x✝ ||| x✝²) = (x✝ ^^^ -1#w) &&& x✝² ^^^ x✝¹"
1475,AliveStatements,68,bv_bitwise,PASS,108101.724366,
1476,AliveStatements,68,bv_ac,FAIL,33.935338,internal exception #5
1477,AliveStatements,68,bv_distrib,FAIL,169.984519,internal exception #5
1478,AliveStatements,68,bv_ring,FAIL,142.859341,internal exception #5
1479,AliveStatements,68,bv_of_bool,FAIL,21.011843,simp made no progress
1480,AliveStatements,68,bv_omega,FAIL,6.551973,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑((x✝ ^^^ -1#w) &&& x✝² ^^^ x✝¹).toNat
     b := ↑(x✝ ^^^ x✝¹ ^^^ (x✝ ||| x✝²)).toNat
     c := ↑2 ^ w"
1481,AliveStatements,68,bv_automata_classic_prop,PASS,21.957995,
1482,AliveStatements,68,bv_automata_classic,PASS,8.818701,
1483,AliveStatements,68,bv_normalize_automata_classic,PASS,25.359909,
1484,AliveStatements,68,simp,FAIL,144.853116,simp made no progress
1485,AliveStatements,68,bv_normalize,FAIL,16.699055,internal exception #5
1486,AliveStatements,68,bv_decide,FAIL,84.466196,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ ^^^ x✝¹ ^^^ ~~~(~~~x✝ &&& ~~~x✝²) ==
       (x✝ ^^^ -1#w) &&& x✝² ^^^ x✝¹]
    Consider the following assignment:
    x✝ ^^^ x✝¹ ^^^ ~~~(~~~x✝ &&& ~~~x✝²) == (x✝ ^^^ -1#w) &&& x✝² ^^^ x✝¹ = false"
1487,AliveStatements,68,bv_auto,PASS,373.985512,
1488,AliveStatements,68,bv_automata_circuit_lean_prop,PASS,23.622317,
1489,AliveStatements,68,bv_automata_circuit_lean,PASS,10.434862,
1490,AliveStatements,68,bv_normalize_automata_circuit_lean,PASS,26.708544,
1491,AliveStatements,68,bv_automata_circuit_cadical_prop,PASS,271.909872,
1492,AliveStatements,68,bv_automata_circuit_cadical,PASS,253.526923,
1493,AliveStatements,68,bv_normalize_automata_circuit_cadical,PASS,270.652355,
1494,AliveStatements,68,bv_mba,FAIL,5.515821,"unable to reflect term '
      x✝ ^^^ x✝¹ ^^^ (x✝ ||| x✝²)'.
    Expected 'int * variable'."
1495,AliveStatements,68,bv_normalize_mba,FAIL,22.09219,internal exception #5
1496,AliveStatements,69,rfl,FAIL,6.614461,"tactic 'rfl' failed, the left-hand side
      x✝ &&& x✝¹ ^^^ (x✝ ^^^ x✝¹)
    is not definitionally equal to the right-hand side
      x✝ ||| x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& x✝¹ ^^^ (x✝ ^^^ x✝¹) = x✝ ||| x✝¹"
1497,AliveStatements,69,bv_bitwise,PASS,110721.03452,
1498,AliveStatements,69,bv_ac,FAIL,24.138317,internal exception #5
1499,AliveStatements,69,bv_distrib,FAIL,96.268098,internal exception #5
1500,AliveStatements,69,bv_ring,FAIL,88.702433,internal exception #5
1501,AliveStatements,69,bv_of_bool,FAIL,18.571911,simp made no progress
1502,AliveStatements,69,bv_omega,FAIL,5.570138,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ ||| x✝¹).toNat
     b := ↑(x✝ &&& x✝¹ ^^^ (x✝ ^^^ x✝¹)).toNat
     c := ↑2 ^ w"
1503,AliveStatements,69,bv_automata_classic_prop,PASS,20.501596,
1504,AliveStatements,69,bv_automata_classic,PASS,7.111029,
1505,AliveStatements,69,bv_normalize_automata_classic,PASS,19.145957,
1506,AliveStatements,69,simp,FAIL,80.381917,simp made no progress
1507,AliveStatements,69,bv_normalize,FAIL,12.131843,internal exception #5
1508,AliveStatements,69,bv_decide,FAIL,80.008025,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& x✝¹ ^^^ (x✝ ^^^ x✝¹) ==
       ~~~(~~~x✝ &&& ~~~x✝¹)]
    Consider the following assignment:
    x✝ &&& x✝¹ ^^^ (x✝ ^^^ x✝¹) == ~~~(~~~x✝ &&& ~~~x✝¹) = false"
1509,AliveStatements,69,bv_auto,PASS,194.522791,
1510,AliveStatements,69,bv_automata_circuit_lean_prop,PASS,19.319766,
1511,AliveStatements,69,bv_automata_circuit_lean,PASS,7.198751,
1512,AliveStatements,69,bv_normalize_automata_circuit_lean,PASS,19.026707,
1513,AliveStatements,69,bv_automata_circuit_cadical_prop,PASS,145.028757,
1514,AliveStatements,69,bv_automata_circuit_cadical,PASS,129.456954,
1515,AliveStatements,69,bv_normalize_automata_circuit_cadical,PASS,141.762514,
1516,AliveStatements,69,bv_mba,FAIL,3.507861,"unable to reflect term '
      x✝ &&& x✝¹ ^^^ (x✝ ^^^ x✝¹)'.
    Expected 'int * variable'."
1517,AliveStatements,69,bv_normalize_mba,FAIL,15.597344,internal exception #5
1518,AliveStatements,70,rfl,FAIL,11.208439,"tactic 'rfl' failed, the left-hand side
      x✝ &&& (x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w)
    is not definitionally equal to the right-hand side
      x✝ &&& x✝¹ ^^^ -1#w
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ x✝ &&& (x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w) = x✝ &&& x✝¹ ^^^ -1#w"
1519,AliveStatements,70,bv_bitwise,PASS,111966.365781,
1520,AliveStatements,70,bv_ac,FAIL,35.388606,internal exception #5
1521,AliveStatements,70,bv_distrib,FAIL,154.660281,internal exception #5
1522,AliveStatements,70,bv_ring,FAIL,138.404549,internal exception #5
1523,AliveStatements,70,bv_of_bool,FAIL,20.267546,simp made no progress
1524,AliveStatements,70,bv_omega,FAIL,6.106271,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝ &&& x✝¹ ^^^ -1#w).toNat
     b := ↑(x✝ &&& (x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w)).toNat
     c := ↑2 ^ w"
1525,AliveStatements,70,bv_automata_classic_prop,PASS,20.777749,
1526,AliveStatements,70,bv_automata_classic,PASS,8.271357,
1527,AliveStatements,70,bv_normalize_automata_classic,PASS,22.589972,
1528,AliveStatements,70,simp,FAIL,130.66068,simp made no progress
1529,AliveStatements,70,bv_normalize,FAIL,14.839827,internal exception #5
1530,AliveStatements,70,bv_decide,FAIL,82.330946,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ &&& (x✝¹ ^^^ -1#w) ^^^
         (x✝ ^^^ -1#w) ==
       x✝ &&& x✝¹ ^^^ -1#w]
    Consider the following assignment:
    x✝ &&& (x✝¹ ^^^ -1#w) ^^^ (x✝ ^^^ -1#w) == x✝ &&& x✝¹ ^^^ -1#w = false"
1531,AliveStatements,70,bv_auto,PASS,386.451669,
1532,AliveStatements,70,bv_automata_circuit_lean_prop,PASS,96.575319,
1533,AliveStatements,70,bv_automata_circuit_lean,PASS,83.676503,
1534,AliveStatements,70,bv_normalize_automata_circuit_lean,PASS,98.046038,
1535,AliveStatements,70,bv_automata_circuit_cadical_prop,PASS,275.420648,
1536,AliveStatements,70,bv_automata_circuit_cadical,PASS,253.347502,
1537,AliveStatements,70,bv_normalize_automata_circuit_cadical,PASS,267.700207,
1538,AliveStatements,70,bv_mba,FAIL,5.302675,"unable to reflect term '
      x✝ &&& (x✝¹ ^^^ BitVec.ofInt w (-1)) ^^^ (x✝ ^^^ BitVec.ofInt w (-1))'.
    Expected 'int * variable'."
1539,AliveStatements,70,bv_normalize_mba,FAIL,20.121331,internal exception #5
1540,AliveStatements,71,rfl,FAIL,8.29185,"tactic 'rfl' failed, the left-hand side
      (x✝ ≤ᵤ x✝¹) ^^ x✝ != x✝¹
    is not definitionally equal to the right-hand side
      x✝¹ ≤ᵤ x✝
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ ((x✝ ≤ᵤ x✝¹) ^^ x✝ != x✝¹) = (x✝¹ ≤ᵤ x✝)"
1541,AliveStatements,71,bv_bitwise,FAIL,0.216653,"no applicable extensionality theorem found for
      Bool"
1542,AliveStatements,71,bv_ac,FAIL,48.483803,internal exception #5
1543,AliveStatements,71,bv_distrib,FAIL,101.342637,internal exception #5
1544,AliveStatements,71,bv_ring,FAIL,102.578815,internal exception #5
1545,AliveStatements,71,bv_of_bool,PASS,195.686127,
1546,AliveStatements,71,bv_omega,FAIL,6.485314,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
1547,AliveStatements,71,bv_automata_classic_prop,FAIL,29.470673,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝ ≤ᵤ x✝¹) ≠ (x✝ != x✝¹)) = ((x✝¹ ≤ᵤ x✝) = true)"
1548,AliveStatements,71,bv_automata_classic,FAIL,2.612882,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝ ≤ᵤ x✝¹) ^^ x✝ != x✝¹) = (x✝¹ ≤ᵤ x✝)."
1549,AliveStatements,71,bv_normalize_automata_classic,FAIL,33.622121,internal exception #5
1550,AliveStatements,71,simp,FAIL,74.088019,simp made no progress
1551,AliveStatements,71,bv_normalize,FAIL,60.135165,internal exception #5
1552,AliveStatements,71,bv_decide,FAIL,90.566802,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝¹ <ᵤ x✝, x✝ == x✝¹, x✝ <ᵤ x✝¹]
    Consider the following assignment:
    x✝¹ <ᵤ x✝ = true
    x✝ == x✝¹ = true
    x✝ <ᵤ x✝¹ = false"
1553,AliveStatements,71,bv_auto,PASS,428.031438,
1554,AliveStatements,71,bv_automata_circuit_lean_prop,FAIL,29.735462,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝ ≤ᵤ x✝¹) ≠ (x✝ != x✝¹)) = ((x✝¹ ≤ᵤ x✝) = true)"
1555,AliveStatements,71,bv_automata_circuit_lean,FAIL,2.608084,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝ ≤ᵤ x✝¹) ^^ x✝ != x✝¹) = (x✝¹ ≤ᵤ x✝)."
1556,AliveStatements,71,bv_normalize_automata_circuit_lean,FAIL,50.981321,internal exception #5
1557,AliveStatements,71,bv_automata_circuit_cadical_prop,FAIL,30.55888,"unknown equality kind, expected 'bv = bv' or 'bv.slt bv = true' or 'bv.sle bv = true'. Found 
      ((x✝ ≤ᵤ x✝¹) ≠ (x✝ != x✝¹)) = ((x✝¹ ≤ᵤ x✝) = true)"
1558,AliveStatements,71,bv_automata_circuit_cadical,FAIL,5.631755,"only boolean conditionals allowed are 'bv.slt bv = true', 'bv.sle bv = true'. Found 
      ((x✝ ≤ᵤ x✝¹) ^^ x✝ != x✝¹) = (x✝¹ ≤ᵤ x✝)."
1559,AliveStatements,71,bv_normalize_automata_circuit_cadical,FAIL,56.71398,internal exception #5
1560,AliveStatements,71,bv_mba,FAIL,1.275599,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      ((x✝ ≤ᵤ x✝¹) ^^ x✝ != x✝¹) = (x✝¹ ≤ᵤ x✝)
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ ((x✝ ≤ᵤ x✝¹) ^^ x✝ != x✝¹) = (x✝¹ ≤ᵤ x✝)"
1561,AliveStatements,71,bv_normalize_mba,FAIL,32.680821,internal exception #5
1562,AliveStatements,72,rfl,FAIL,61.763695,"tactic 'rfl' failed, the left-hand side
      x✝ * -1#w
    is not definitionally equal to the right-hand side
      0#w - x✝
    case some
    w : ℕ
    x✝ : BitVec w
    ⊢ x✝ * -1#w = 0#w - x✝"
1563,AliveStatements,72,bv_bitwise,PASS,392.397742,
1564,AliveStatements,72,bv_ac,FAIL,93.284192,internal exception #5
1565,AliveStatements,72,bv_distrib,PASS,547.943447,
1566,AliveStatements,72,bv_ring,FAIL,544.94685,internal exception #5
1567,AliveStatements,72,bv_of_bool,FAIL,38.535733,simp made no progress
1568,AliveStatements,72,bv_omega,FAIL,21.067074,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(0 % 2 ^ w + (2 ^ w - x✝.toNat)) % ↑(2 ^ w)
     b := ↑(x✝.toNat * ((2 ^ w - 1 % 2 ^ w) % 2 ^ w)) % ↑(2 ^ w)
     c := ↑2 ^ w"
1569,AliveStatements,72,bv_automata_classic_prop,FAIL,112931.037004,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0)
                    (Copy.Term.zero.sub (Copy.Term.var 1)))) =
              true)) =
        true
    is false"
1570,AliveStatements,72,bv_automata_classic,FAIL,6.889344,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0)
                    (Copy.Term.zero.sub (Copy.Term.var 1)))) =
              true)) =
        true
    is false"
1571,AliveStatements,72,bv_normalize_automata_classic,FAIL,18.377951,internal exception #5
1572,AliveStatements,72,simp,PASS,201.267778,
1573,AliveStatements,72,bv_normalize,FAIL,11.260479,internal exception #5
1574,AliveStatements,72,bv_decide,FAIL,78.970269,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ * -1#w == -x✝]
    Consider the following assignment:
    x✝ * -1#w == -x✝ = false"
1575,AliveStatements,72,bv_auto,PASS,145.542879,
1576,AliveStatements,72,bv_automata_circuit_lean_prop,FAIL,17.537369,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq (Term.var 0) (Term.zero.sub (Term.var 1))).eval vars w = false)) =
        true
    is false"
1577,AliveStatements,72,bv_automata_circuit_lean,FAIL,6.763538,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq (Term.var 0) (Term.zero.sub (Term.var 1))).eval vars w = false)) =
        true
    is false"
1578,AliveStatements,72,bv_normalize_automata_circuit_lean,FAIL,18.065899,internal exception #5
1579,AliveStatements,72,bv_automata_circuit_cadical_prop,FAIL,207.347514,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1580,AliveStatements,72,bv_automata_circuit_cadical,FAIL,190.069768,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1581,AliveStatements,72,bv_normalize_automata_circuit_cadical,FAIL,202.095459,internal exception #5
1582,AliveStatements,72,bv_mba,FAIL,6.978713,"unable to reflect term coefficient '
      x✝'. Expected an integer."
1583,AliveStatements,72,bv_normalize_mba,FAIL,18.045525,internal exception #5
1584,AliveStatements,73,rfl,FAIL,10.891973,"tactic 'rfl' failed, the left-hand side
      (x✝ + x✝¹) * x✝²
    is not definitionally equal to the right-hand side
      x✝ * x✝² + x✝¹ * x✝²
    case some.some.some
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    ⊢ (x✝ + x✝¹) * x✝² = x✝ * x✝² + x✝¹ * x✝²"
1585,AliveStatements,73,bv_bitwise,FAIL,401.145683,internal exception #5
1586,AliveStatements,73,bv_ac,FAIL,91.650737,internal exception #5
1587,AliveStatements,73,bv_distrib,FAIL,414.655293,internal exception #5
1588,AliveStatements,73,bv_ring,PASS,248.770077,
1589,AliveStatements,73,bv_of_bool,FAIL,34.352175,simp made no progress
1590,AliveStatements,73,bv_omega,FAIL,20.4439,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝.toNat * x✝².toNat % 2 ^ w + x✝¹.toNat * x✝².toNat % 2 ^ w) % ↑(2 ^ w)
     b := ↑((x✝.toNat + x✝¹.toNat) % 2 ^ w * x✝².toNat) % ↑(2 ^ w)
     c := ↑2 ^ w"
1591,AliveStatements,73,bv_automata_classic_prop,FAIL,114180.25071,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0)
                    ((Copy.Term.var 1).add (Copy.Term.var 2)))) =
              true)) =
        true
    is false"
1592,AliveStatements,73,bv_automata_classic,FAIL,7.219794,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0)
                    ((Copy.Term.var 1).add (Copy.Term.var 2)))) =
              true)) =
        true
    is false"
1593,AliveStatements,73,bv_normalize_automata_classic,FAIL,20.023592,internal exception #5
1594,AliveStatements,73,simp,FAIL,135.570196,simp made no progress
1595,AliveStatements,73,bv_normalize,FAIL,12.808238,internal exception #5
1596,AliveStatements,73,bv_decide,FAIL,79.667412,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ + x✝¹) * x✝² ==
       x✝ * x✝² + x✝¹ * x✝²]
    Consider the following assignment:
    (x✝ + x✝¹) * x✝² == x✝ * x✝² + x✝¹ * x✝² = false"
1597,AliveStatements,73,bv_auto,PASS,477.422107,
1598,AliveStatements,73,bv_automata_circuit_lean_prop,FAIL,18.968286,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq (Term.var 0) ((Term.var 1).add (Term.var 2))).eval vars w = false)) =
        true
    is false"
1599,AliveStatements,73,bv_automata_circuit_lean,FAIL,6.969485,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq (Term.var 0) ((Term.var 1).add (Term.var 2))).eval vars w = false)) =
        true
    is false"
1600,AliveStatements,73,bv_normalize_automata_circuit_lean,FAIL,19.679717,internal exception #5
1601,AliveStatements,73,bv_automata_circuit_cadical_prop,FAIL,208.11844,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1602,AliveStatements,73,bv_automata_circuit_cadical,FAIL,190.541482,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1603,AliveStatements,73,bv_normalize_automata_circuit_cadical,FAIL,204.695632,internal exception #5
1604,AliveStatements,73,bv_mba,FAIL,5.25936,"unable to reflect term coefficient '
      x✝ + x✝¹'. Expected an integer."
1605,AliveStatements,73,bv_normalize_mba,FAIL,18.173932,internal exception #5
1606,AliveStatements,74,rfl,FAIL,22.163184,"tactic 'rfl' failed, the left-hand side
      (0#w - x✝) * (0#w - x✝¹)
    is not definitionally equal to the right-hand side
      x✝ * x✝¹
    case some.some
    w : ℕ
    x✝¹ x✝ : BitVec w
    ⊢ (0#w - x✝) * (0#w - x✝¹) = x✝ * x✝¹"
1607,AliveStatements,74,bv_bitwise,PASS,786.56596,
1608,AliveStatements,74,bv_ac,FAIL,101.069156,internal exception #5
1609,AliveStatements,74,bv_distrib,PASS,724.370428,
1610,AliveStatements,74,bv_ring,FAIL,404.347962,internal exception #5
1611,AliveStatements,74,bv_of_bool,FAIL,21.670806,simp made no progress
1612,AliveStatements,74,bv_omega,FAIL,12.188707,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(x✝.toNat * x✝¹.toNat) % ↑(2 ^ w)
     b := ↑((0 % 2 ^ w + (2 ^ w - x✝.toNat)) % 2 ^ w * ((0 % 2 ^ w + (2 ^ w - x✝¹.toNat)) % 2 ^ w)) % ↑(2 ^ w)
     c := ↑2 ^ w"
1613,AliveStatements,74,bv_automata_classic_prop,FAIL,115195.388204,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) (Copy.Term.var 1))) =
              true)) =
        true
    is false"
1614,AliveStatements,74,bv_automata_classic,FAIL,8.598921,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) (Copy.Term.var 1))) =
              true)) =
        true
    is false"
1615,AliveStatements,74,bv_normalize_automata_classic,FAIL,21.65664,internal exception #5
1616,AliveStatements,74,simp,PASS,295.519027,
1617,AliveStatements,74,bv_normalize,FAIL,13.118687,internal exception #5
1618,AliveStatements,74,bv_decide,FAIL,80.77821,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [-x✝ * -x✝¹ == x✝ * x✝¹]
    Consider the following assignment:
    -x✝ * -x✝¹ == x✝ * x✝¹ = false"
1619,AliveStatements,74,bv_auto,PASS,314.965523,
1620,AliveStatements,74,bv_automata_circuit_lean_prop,FAIL,17.787016,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide (∀ (w : ℕ) (vars : List BitStream), (Predicate.eq (Term.var 0) (Term.var 1)).eval vars w = false)) =
        true
    is false"
1621,AliveStatements,74,bv_automata_circuit_lean,FAIL,8.114987,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide (∀ (w : ℕ) (vars : List BitStream), (Predicate.eq (Term.var 0) (Term.var 1)).eval vars w = false)) =
        true
    is false"
1622,AliveStatements,74,bv_normalize_automata_circuit_lean,FAIL,19.607226,internal exception #5
1623,AliveStatements,74,bv_automata_circuit_cadical_prop,FAIL,208.545451,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1624,AliveStatements,74,bv_automata_circuit_cadical,FAIL,191.33391,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1625,AliveStatements,74,bv_normalize_automata_circuit_cadical,FAIL,204.172716,internal exception #5
1626,AliveStatements,74,bv_mba,FAIL,4.843627,"unable to reflect term coefficient '
      BitVec.ofInt w 0 + -x✝'. Expected an integer."
1627,AliveStatements,74,bv_normalize_mba,FAIL,17.947409,internal exception #5
1628,AliveStatements,75,rfl,FAIL,23.759843,"tactic 'rfl' failed, the left-hand side
      x✝ / x✝¹ * x✝¹
    is not definitionally equal to the right-hand side
      x✝ - x✝ % x✝¹
    case neg
    x✝¹ x✝ : BitVec 5
    h✝ : ¬x✝¹ = 0
    ⊢ x✝ / x✝¹ * x✝¹ = x✝ - x✝ % x✝¹"
1629,AliveStatements,75,bv_bitwise,FAIL,484.519748,internal exception #5
1630,AliveStatements,75,bv_ac,FAIL,58.69262,internal exception #5
1631,AliveStatements,75,bv_distrib,FAIL,425.352698,internal exception #5
1632,AliveStatements,75,bv_ring,FAIL,309.411987,internal exception #5
1633,AliveStatements,75,bv_of_bool,FAIL,38.161114,simp made no progress
1634,AliveStatements,75,bv_omega,FAIL,37.132529,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      1 ≤ f ≤ 31
      0 ≤ e ≤ 32
      c ≥ 0
      0 ≤ c - 32*d ≤ 31
      0 ≤ a ≤ 31
      a - 32*b - c + 32*d - e ≥ -31
      -32 ≤ a - 32*b - e ≤ -1
    where
     a := ↑x✝.toNat
     b := ↑(x✝.toNat + (2 ^ 5 - x✝.toNat % x✝¹.toNat)) / 32
     c := ↑(x✝.toNat / x✝¹.toNat) * ↑x✝¹.toNat
     d := ↑(x✝.toNat / x✝¹.toNat * x✝¹.toNat) / 32
     e := ↑x✝.toNat % ↑x✝¹.toNat
     f := ↑x✝¹.toNat"
1635,AliveStatements,75,bv_automata_classic_prop,FAIL,117203.333488,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1)
                      ((Copy.Term.var 2).sub (Copy.Term.var 3))))) =
              true)) =
        true
    is false"
1636,AliveStatements,75,bv_automata_classic,FAIL,11.460366,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1)
                      ((Copy.Term.var 2).sub (Copy.Term.var 3))))) =
              true)) =
        true
    is false"
1637,AliveStatements,75,bv_normalize_automata_classic,FAIL,39.79153,internal exception #5
1638,AliveStatements,75,simp,FAIL,168.411774,simp made no progress
1639,AliveStatements,75,bv_normalize,FAIL,28.664626,internal exception #5
1640,AliveStatements,75,bv_decide,PASS,126.744974,
1641,AliveStatements,75,bv_auto,PASS,739.619247,
1642,AliveStatements,75,bv_automata_circuit_lean_prop,FAIL,22.945651,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      (Predicate.eq (Term.var 1) ((Term.var 2).sub (Term.var 3)))).eval
                  vars w =
                false)) =
        true
    is false"
1643,AliveStatements,75,bv_automata_circuit_lean,FAIL,10.471755,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      (Predicate.eq (Term.var 1) ((Term.var 2).sub (Term.var 3)))).eval
                  vars w =
                false)) =
        true
    is false"
1644,AliveStatements,75,bv_normalize_automata_circuit_lean,FAIL,38.813544,internal exception #5
1645,AliveStatements,75,bv_automata_circuit_cadical_prop,FAIL,211.504319,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1646,AliveStatements,75,bv_automata_circuit_cadical,FAIL,193.771677,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1647,AliveStatements,75,bv_normalize_automata_circuit_cadical,FAIL,223.59011,internal exception #5
1648,AliveStatements,75,bv_mba,FAIL,5.344172,"unable to reflect term coefficient '
      x✝ / x✝¹'. Expected an integer."
1649,AliveStatements,75,bv_normalize_mba,FAIL,33.873961,internal exception #5
1650,AliveStatements,76,rfl,FAIL,7.997013,"tactic 'rfl' failed, the left-hand side
      x✝.sdiv x✝¹ * x✝¹
    is not definitionally equal to the right-hand side
      x✝ - x✝.srem x✝¹
    case neg
    x✝¹ x✝ : BitVec 5
    h✝ : ¬(x✝¹ == 0 || 5 != 1 && x✝ == BitVec.intMin 5 && x✝¹ == -1) = true
    ⊢ x✝.sdiv x✝¹ * x✝¹ = x✝ - x✝.srem x✝¹"
1651,AliveStatements,76,bv_bitwise,FAIL,472.107807,internal exception #5
1652,AliveStatements,76,bv_ac,FAIL,73.330769,internal exception #5
1653,AliveStatements,76,bv_distrib,FAIL,304.003588,internal exception #5
1654,AliveStatements,76,bv_ring,FAIL,300.070323,internal exception #5
1655,AliveStatements,76,bv_of_bool,FAIL,30.459458,simp made no progress
1656,AliveStatements,76,bv_omega,FAIL,57.57328,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 31
      c ≥ 0
      0 ≤ c - 32*d ≤ 31
      0 ≤ a ≤ 31
      a - 32*b - c + 32*d - e ≥ -31
      -32 ≤ a - 32*b - e ≤ -1
    where
     a := ↑x✝.toNat
     b := ↑(x✝.toNat + (2 ^ 5 - (x✝.srem x✝¹).toNat)) / 32
     c := ↑(match decide (2 ^ (5 - 1) ≤ x✝.toNat), decide (2 ^ (5 - 1) ≤ x✝¹.toNat) with
        | false, false => (x✝.udiv x✝¹).toNat
        | false, true => (2 ^ 5 - (x✝.udiv (-x✝¹)).toNat) % 2 ^ 5
        | true, false => (2 ^ 5 - ((-x✝).udiv x✝¹).toNat) % 2 ^ 5
        | true, true => ((-x✝).udiv (-x✝¹)).toNat) *
      ↑x✝¹.toNat
     d := ↑((match decide (2 ^ (5 - 1) ≤ x✝.toNat), decide (2 ^ (5 - 1) ≤ x✝¹.toNat) with
          | false, false => (x✝.udiv x✝¹).toNat
          | false, true => (2 ^ 5 - (x✝.udiv (-x✝¹)).toNat) % 2 ^ 5
          | true, false => (2 ^ 5 - ((-x✝).udiv x✝¹).toNat) % 2 ^ 5
          | true, true => ((-x✝).udiv (-x✝¹)).toNat) *
          x✝¹.toNat) /
      32
     e := ↑(x✝.srem x✝¹).toNat"
1657,AliveStatements,76,bv_automata_classic_prop,FAIL,119770.691944,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    (((Copy.Predicate.width Copy.WidthPredicate.neq 1).land
                          ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1) (Copy.Term.var 2)).land
                            (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.one.neg))).lor
                      (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 3)
                        ((Copy.Term.var 1).sub (Copy.Term.var 4)))))) =
              true)) =
        true
    is false"
1658,AliveStatements,76,bv_automata_classic,FAIL,27.682157,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    (((Copy.Predicate.width Copy.WidthPredicate.neq 1).land
                          ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1) (Copy.Term.var 2)).land
                            (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.one.neg))).lor
                      (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 3)
                        ((Copy.Term.var 1).sub (Copy.Term.var 4)))))) =
              true)) =
        true
    is false"
1659,AliveStatements,76,bv_normalize_automata_classic,FAIL,104.103793,internal exception #5
1660,AliveStatements,76,simp,FAIL,110.195118,simp made no progress
1661,AliveStatements,76,bv_normalize,FAIL,77.004373,internal exception #5
1662,AliveStatements,76,bv_decide,PASS,419.883461,
1663,AliveStatements,76,bv_auto,PASS,965.34183,
1664,AliveStatements,76,bv_automata_circuit_lean_prop,FAIL,37.543251,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      (((Predicate.widthNeq 1).land
                            ((Predicate.eq (Term.var 1) (Term.var 2)).land
                              (Predicate.eq (Term.var 0) Term.one.neg))).lor
                        (Predicate.eq (Term.var 3) ((Term.var 1).sub (Term.var 4))))).eval
                  vars w =
                false)) =
        true
    is false"
1665,AliveStatements,76,bv_automata_circuit_lean,FAIL,25.20723,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      (((Predicate.widthNeq 1).land
                            ((Predicate.eq (Term.var 1) (Term.var 2)).land
                              (Predicate.eq (Term.var 0) Term.one.neg))).lor
                        (Predicate.eq (Term.var 3) ((Term.var 1).sub (Term.var 4))))).eval
                  vars w =
                false)) =
        true
    is false"
1666,AliveStatements,76,bv_normalize_automata_circuit_lean,FAIL,102.118355,internal exception #5
1667,AliveStatements,76,bv_automata_circuit_cadical_prop,FAIL,226.864325,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1668,AliveStatements,76,bv_automata_circuit_cadical,FAIL,207.545426,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1669,AliveStatements,76,bv_normalize_automata_circuit_cadical,FAIL,286.86188,internal exception #5
1670,AliveStatements,76,bv_mba,FAIL,4.754323,"unable to reflect term coefficient '
      x✝.sdiv x✝¹'. Expected an integer."
1671,AliveStatements,76,bv_normalize_mba,FAIL,81.981672,internal exception #5
1672,AliveStatements,77,rfl,FAIL,26.340746,"tactic 'rfl' failed, the left-hand side
      x✝.sdiv x✝¹ * (0#5 - x✝¹)
    is not definitionally equal to the right-hand side
      x✝.srem x✝¹ - x✝
    case neg
    x✝¹ x✝ : BitVec 5
    h✝ : ¬(x✝¹ == 0 || 5 != 1 && x✝ == BitVec.intMin 5 && x✝¹ == -1) = true
    ⊢ x✝.sdiv x✝¹ * (0#5 - x✝¹) = x✝.srem x✝¹ - x✝"
1673,AliveStatements,77,bv_bitwise,FAIL,821.630588,internal exception #5
1674,AliveStatements,77,bv_ac,FAIL,57.916493,internal exception #5
1675,AliveStatements,77,bv_distrib,FAIL,491.155007,internal exception #5
1676,AliveStatements,77,bv_ring,FAIL,339.669322,internal exception #5
1677,AliveStatements,77,bv_of_bool,FAIL,31.380569,simp made no progress
1678,AliveStatements,77,bv_omega,FAIL,54.626599,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ e ≤ 31
      c ≥ 0
      0 ≤ c - 32*d ≤ 31
      0 ≤ a ≤ 31
      a - 32*b - c + 32*d - e ≥ -31
      -32 ≤ a - 32*b - e ≤ -1
    where
     a := ↑(x✝.srem x✝¹).toNat
     b := ↑((x✝.srem x✝¹).toNat + (2 ^ 5 - x✝.toNat)) / 32
     c := ↑(match decide (2 ^ (5 - 1) ≤ x✝.toNat), decide (2 ^ (5 - 1) ≤ x✝¹.toNat) with
        | false, false => (x✝.udiv x✝¹).toNat
        | false, true => (2 ^ 5 - (x✝.udiv (-x✝¹)).toNat) % 2 ^ 5
        | true, false => (2 ^ 5 - ((-x✝).udiv x✝¹).toNat) % 2 ^ 5
        | true, true => ((-x✝).udiv (-x✝¹)).toNat) *
      ↑((0 % 2 ^ 5 + (2 ^ 5 - x✝¹.toNat)) % 2 ^ 5)
     d := ↑((match decide (2 ^ (5 - 1) ≤ x✝.toNat), decide (2 ^ (5 - 1) ≤ x✝¹.toNat) with
          | false, false => (x✝.udiv x✝¹).toNat
          | false, true => (2 ^ 5 - (x✝.udiv (-x✝¹)).toNat) % 2 ^ 5
          | true, false => (2 ^ 5 - ((-x✝).udiv x✝¹).toNat) % 2 ^ 5
          | true, true => ((-x✝).udiv (-x✝¹)).toNat) *
          ((0 % 2 ^ 5 + (2 ^ 5 - x✝¹.toNat)) % 2 ^ 5)) /
      32
     e := ↑x✝.toNat"
1679,AliveStatements,77,bv_automata_classic_prop,FAIL,122720.838324,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    (((Copy.Predicate.width Copy.WidthPredicate.neq 1).land
                          ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1) (Copy.Term.var 2)).land
                            (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.one.neg))).lor
                      (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 3)
                        ((Copy.Term.var 4).sub (Copy.Term.var 1)))))) =
              true)) =
        true
    is false"
1680,AliveStatements,77,bv_automata_classic,FAIL,28.088123,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    (((Copy.Predicate.width Copy.WidthPredicate.neq 1).land
                          ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1) (Copy.Term.var 2)).land
                            (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.one.neg))).lor
                      (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 3)
                        ((Copy.Term.var 4).sub (Copy.Term.var 1)))))) =
              true)) =
        true
    is false"
1681,AliveStatements,77,bv_normalize_automata_classic,FAIL,115.104513,internal exception #5
1682,AliveStatements,77,simp,FAIL,193.296598,internal exception #5
1683,AliveStatements,77,bv_normalize,FAIL,86.614361,internal exception #5
1684,AliveStatements,77,bv_decide,PASS,366.031886,
1685,AliveStatements,77,bv_auto,PASS,1194.812982,
1686,AliveStatements,77,bv_automata_circuit_lean_prop,FAIL,37.837466,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      (((Predicate.widthNeq 1).land
                            ((Predicate.eq (Term.var 1) (Term.var 2)).land
                              (Predicate.eq (Term.var 0) Term.one.neg))).lor
                        (Predicate.eq (Term.var 3) ((Term.var 4).sub (Term.var 1))))).eval
                  vars w =
                false)) =
        true
    is false"
1687,AliveStatements,77,bv_automata_circuit_lean,FAIL,28.996349,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      (((Predicate.widthNeq 1).land
                            ((Predicate.eq (Term.var 1) (Term.var 2)).land
                              (Predicate.eq (Term.var 0) Term.one.neg))).lor
                        (Predicate.eq (Term.var 3) ((Term.var 4).sub (Term.var 1))))).eval
                  vars w =
                false)) =
        true
    is false"
1688,AliveStatements,77,bv_normalize_automata_circuit_lean,FAIL,112.448868,internal exception #5
1689,AliveStatements,77,bv_automata_circuit_cadical_prop,FAIL,228.358323,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1690,AliveStatements,77,bv_automata_circuit_cadical,FAIL,209.40033,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1691,AliveStatements,77,bv_normalize_automata_circuit_cadical,FAIL,297.402234,internal exception #5
1692,AliveStatements,77,bv_mba,FAIL,5.470558,"unable to reflect term coefficient '
      x✝.sdiv x✝¹'. Expected an integer."
1693,AliveStatements,77,bv_normalize_mba,FAIL,92.953395,internal exception #5
1694,AliveStatements,78,rfl,FAIL,35.451785,"tactic 'rfl' failed, the left-hand side
      x✝ / x✝¹ * (0#5 - x✝¹)
    is not definitionally equal to the right-hand side
      x✝ % x✝¹ - x✝
    case neg
    x✝¹ x✝ : BitVec 5
    h✝ : ¬x✝¹ = 0
    ⊢ x✝ / x✝¹ * (0#5 - x✝¹) = x✝ % x✝¹ - x✝"
1695,AliveStatements,78,bv_bitwise,FAIL,960.379264,internal exception #5
1696,AliveStatements,78,bv_ac,FAIL,33.151966,internal exception #5
1697,AliveStatements,78,bv_distrib,FAIL,623.224915,internal exception #5
1698,AliveStatements,78,bv_ring,FAIL,311.571543,internal exception #5
1699,AliveStatements,78,bv_of_bool,FAIL,38.548017,simp made no progress
1700,AliveStatements,78,bv_omega,FAIL,61.096371,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      1 ≤ f ≤ 31
      0 ≤ e ≤ 31
      c ≥ 0
      0 ≤ c - 32*d ≤ 31
      a ≥ 0
      a - 32*b - c + 32*d - e ≥ -31
      -32 ≤ a - 32*b - e ≤ -1
    where
     a := ↑x✝.toNat % ↑x✝¹.toNat
     b := ↑(x✝.toNat % x✝¹.toNat + (2 ^ 5 - x✝.toNat)) / 32
     c := ↑(x✝.toNat / x✝¹.toNat) * ↑((0 % 2 ^ 5 + (2 ^ 5 - x✝¹.toNat)) % 2 ^ 5)
     d := ↑(x✝.toNat / x✝¹.toNat * ((0 % 2 ^ 5 + (2 ^ 5 - x✝¹.toNat)) % 2 ^ 5)) / 32
     e := ↑x✝.toNat
     f := ↑x✝¹.toNat"
1701,AliveStatements,78,bv_automata_classic_prop,FAIL,126556.696277,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1)
                      ((Copy.Term.var 2).sub (Copy.Term.var 3))))) =
              true)) =
        true
    is false"
1702,AliveStatements,78,bv_automata_classic,FAIL,12.363484,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1)
                      ((Copy.Term.var 2).sub (Copy.Term.var 3))))) =
              true)) =
        true
    is false"
1703,AliveStatements,78,bv_normalize_automata_classic,FAIL,53.241811,internal exception #5
1704,AliveStatements,78,simp,FAIL,301.759743,internal exception #5
1705,AliveStatements,78,bv_normalize,FAIL,41.289705,internal exception #5
1706,AliveStatements,78,bv_decide,PASS,138.435473,
1707,AliveStatements,78,bv_auto,PASS,1116.359592,
1708,AliveStatements,78,bv_automata_circuit_lean_prop,FAIL,23.707127,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      (Predicate.eq (Term.var 1) ((Term.var 2).sub (Term.var 3)))).eval
                  vars w =
                false)) =
        true
    is false"
1709,AliveStatements,78,bv_automata_circuit_lean,FAIL,10.846454,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      (Predicate.eq (Term.var 1) ((Term.var 2).sub (Term.var 3)))).eval
                  vars w =
                false)) =
        true
    is false"
1710,AliveStatements,78,bv_normalize_automata_circuit_lean,FAIL,52.066864,internal exception #5
1711,AliveStatements,78,bv_automata_circuit_cadical_prop,FAIL,215.566868,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1712,AliveStatements,78,bv_automata_circuit_cadical,FAIL,196.538144,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1713,AliveStatements,78,bv_normalize_automata_circuit_cadical,FAIL,238.444171,internal exception #5
1714,AliveStatements,78,bv_mba,FAIL,6.025254,"unable to reflect term coefficient '
      x✝ / x✝¹'. Expected an integer."
1715,AliveStatements,78,bv_normalize_mba,FAIL,47.319031,internal exception #5
1716,AliveStatements,79,rfl,FAIL,5.352767,"tactic 'rfl' failed, the left-hand side
      x✝ * x✝¹
    is not definitionally equal to the right-hand side
      x✝ &&& x✝¹
    case some.some
    x✝¹ x✝ : BitVec 1
    ⊢ x✝ * x✝¹ = x✝ &&& x✝¹"
1717,AliveStatements,79,bv_bitwise,PASS,248.474383,
1718,AliveStatements,79,bv_ac,FAIL,49.448247,internal exception #5
1719,AliveStatements,79,bv_distrib,FAIL,224.449313,internal exception #5
1720,AliveStatements,79,bv_ring,FAIL,272.631111,internal exception #5
1721,AliveStatements,79,bv_of_bool,FAIL,33.203102,simp made no progress
1722,AliveStatements,79,bv_omega,FAIL,20.266118,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      0 ≤ b - 2*c ≤ 1
      0 ≤ a ≤ 1
      a - b + 2*c ≥ 1
    where
     a := ↑(x✝ &&& x✝¹).toNat
     b := ↑x✝.toNat * ↑x✝¹.toNat
     c := ↑(x✝.toNat * x✝¹.toNat) / 2"
1723,AliveStatements,79,bv_automata_classic_prop,FAIL,131638.646417,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0)
                    ((Copy.Term.var 1).and (Copy.Term.var 2)))) =
              true)) =
        true
    is false"
1724,AliveStatements,79,bv_automata_classic,FAIL,6.648072,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0)
                    ((Copy.Term.var 1).and (Copy.Term.var 2)))) =
              true)) =
        true
    is false"
1725,AliveStatements,79,bv_normalize_automata_classic,PASS,4.353017,
1726,AliveStatements,79,simp,FAIL,82.826749,simp made no progress
1727,AliveStatements,79,bv_normalize,PASS,3.810705,
1728,AliveStatements,79,bv_decide,PASS,3.851677,
1729,AliveStatements,79,bv_auto,PASS,84.037462,
1730,AliveStatements,79,bv_automata_circuit_lean_prop,FAIL,16.820031,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq (Term.var 0) ((Term.var 1).and (Term.var 2))).eval vars w = false)) =
        true
    is false"
1731,AliveStatements,79,bv_automata_circuit_lean,FAIL,6.169118,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              (Predicate.eq (Term.var 0) ((Term.var 1).and (Term.var 2))).eval vars w = false)) =
        true
    is false"
1732,AliveStatements,79,bv_normalize_automata_circuit_lean,PASS,4.142072,
1733,AliveStatements,79,bv_automata_circuit_cadical_prop,FAIL,210.505932,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1734,AliveStatements,79,bv_automata_circuit_cadical,FAIL,191.840283,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1735,AliveStatements,79,bv_normalize_automata_circuit_cadical,PASS,6.877876,
1736,AliveStatements,79,bv_mba,FAIL,3.183954,"unable to reflect term coefficient '
      x✝'. Expected an integer."
1737,AliveStatements,79,bv_normalize_mba,PASS,4.080547,
1738,AliveStatements,80,rfl,FAIL,27.547548,"tactic 'rfl' failed, the left-hand side
      1#w <<< x✝ * x✝¹
    is not definitionally equal to the right-hand side
      x✝¹ <<< x✝
    case neg
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝ : ¬x✝ ≥ ↑w
    ⊢ 1#w <<< x✝ * x✝¹ = x✝¹ <<< x✝"
1739,AliveStatements,80,bv_bitwise,PASS,525.766336,
1740,AliveStatements,80,bv_ac,FAIL,62.544623,internal exception #5
1741,AliveStatements,80,bv_distrib,PASS,438.148001,
1742,AliveStatements,80,bv_ring,FAIL,255.426623,internal exception #5
1743,AliveStatements,80,bv_of_bool,FAIL,22.644761,simp made no progress
1744,AliveStatements,80,bv_omega,FAIL,17.250808,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝.toNat
     c := ↑2 ^ w
     d := ↑(x✝¹ <<< x✝).toNat
     e := ↑((1#w <<< x✝).toNat * x✝¹.toNat) % ↑(2 ^ w)"
1745,AliveStatements,80,bv_automata_classic_prop,FAIL,20.570789,"expected shiftLeft by natural number, found symbolic shift amount 'x✝' at '
      x✝¹ <<< x✝'"
1746,AliveStatements,80,bv_automata_classic,FAIL,7.465346,"expected shiftLeft by natural number, found symbolic shift amount 'x✝' at '
      x✝¹ <<< x✝'"
1747,AliveStatements,80,bv_normalize_automata_classic,FAIL,28.160144,internal exception #5
1748,AliveStatements,80,simp,PASS,396.077266,
1749,AliveStatements,80,bv_normalize,FAIL,28.857549,internal exception #5
1750,AliveStatements,80,bv_decide,FAIL,91.109864,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ <ᵤ BitVec.ofNat w w,
     1#w <<< x✝ * x✝¹ == x✝¹ <<< x✝]
    Consider the following assignment:
    x✝ <ᵤ BitVec.ofNat w w = true
    1#w <<< x✝ * x✝¹ == x✝¹ <<< x✝ = false"
1751,AliveStatements,80,bv_auto,PASS,358.680137,
1752,AliveStatements,80,bv_automata_circuit_lean_prop,FAIL,26.783165,"expected shiftLeft by natural number, found symbolic shift amount 'x✝' at '
      x✝¹ <<< x✝'"
1753,AliveStatements,80,bv_automata_circuit_lean,FAIL,9.507293,"expected shiftLeft by natural number, found symbolic shift amount 'x✝' at '
      x✝¹ <<< x✝'"
1754,AliveStatements,80,bv_normalize_automata_circuit_lean,FAIL,42.965546,internal exception #5
1755,AliveStatements,80,bv_automata_circuit_cadical_prop,FAIL,42.935424,"expected shiftLeft by natural number, found symbolic shift amount 'x✝' at '
      x✝¹ <<< x✝'"
1756,AliveStatements,80,bv_automata_circuit_cadical,FAIL,6.37267,"expected shiftLeft by natural number, found symbolic shift amount 'x✝' at '
      x✝¹ <<< x✝'"
1757,AliveStatements,80,bv_normalize_automata_circuit_cadical,FAIL,26.533293,internal exception #5
1758,AliveStatements,80,bv_mba,FAIL,6.592928,"unable to reflect term coefficient '
      BitVec.ofInt w 1 <<< x✝'. Expected an integer."
1759,AliveStatements,80,bv_normalize_mba,FAIL,19.390097,internal exception #5
1760,AliveStatements,81,rfl,FAIL,1.250384,"tactic 'rfl' failed, the left-hand side
      some ((x✝ - x✝ % x✝¹) / x✝¹)
    is not definitionally equal to the right-hand side
      none
    case pos
    x✝¹ x✝ : BitVec 9
    h✝¹ : ¬(x✝¹ = 0 ∨ x✝¹ = 0)
    h✝ : x✝¹ = 0
    ⊢ some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1761,AliveStatements,81,bv_bitwise,FAIL,0.142155,"applyExtTheorem only applies to equations, not
      some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1762,AliveStatements,81,bv_ac,FAIL,19.616161,internal exception #5
1763,AliveStatements,81,bv_distrib,FAIL,174.945208,internal exception #5
1764,AliveStatements,81,bv_ring,FAIL,295.371387,internal exception #5
1765,AliveStatements,81,bv_of_bool,FAIL,46.385822,simp made no progress
1766,AliveStatements,81,bv_omega,PASS,21.236468,
1767,AliveStatements,81,bv_automata_classic_prop,FAIL,33.386557,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1768,AliveStatements,81,bv_automata_classic,FAIL,12.573609,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1769,AliveStatements,81,bv_normalize_automata_classic,PASS,49.39537,
1770,AliveStatements,81,simp,FAIL,187.351295,simp made no progress
1771,AliveStatements,81,bv_normalize,PASS,27.071471,
1772,AliveStatements,81,bv_decide,PASS,50.48349,
1773,AliveStatements,81,bv_auto,PASS,490.844148,
1774,AliveStatements,81,bv_automata_circuit_lean_prop,FAIL,24.066126,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1775,AliveStatements,81,bv_automata_circuit_lean,FAIL,12.393136,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1776,AliveStatements,81,bv_normalize_automata_circuit_lean,PASS,60.211938,
1777,AliveStatements,81,bv_automata_circuit_cadical_prop,FAIL,28.933355,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1778,AliveStatements,81,bv_automata_circuit_cadical,FAIL,13.579366,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1779,AliveStatements,81,bv_normalize_automata_circuit_cadical,PASS,47.755247,
1780,AliveStatements,81,bv_mba,FAIL,0.218464,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none
    case pos
    x✝¹ x✝ : BitVec 9
    h✝¹ : ¬(x✝¹ = 0 ∨ x✝¹ = 0)
    h✝ : x✝¹ = 0
    ⊢ some ((x✝ - x✝ % x✝¹) / x✝¹) ⊑ none"
1781,AliveStatements,81,bv_normalize_mba,PASS,50.391442,
1782,AliveStatements,82,rfl,FAIL,10.219934,"tactic 'rfl' failed, the left-hand side
      (x✝ - x✝ % x✝¹) / x✝¹
    is not definitionally equal to the right-hand side
      x✝ / x✝¹
    case neg
    x✝¹ x✝ : BitVec 9
    h✝¹ : ¬(x✝¹ = 0 ∨ x✝¹ = 0)
    h✝ : ¬x✝¹ = 0
    ⊢ (x✝ - x✝ % x✝¹) / x✝¹ = x✝ / x✝¹"
1783,AliveStatements,82,bv_bitwise,FAIL,274.150789,internal exception #5
1784,AliveStatements,82,bv_ac,FAIL,15.88255,internal exception #5
1785,AliveStatements,82,bv_distrib,FAIL,189.349496,internal exception #5
1786,AliveStatements,82,bv_ring,FAIL,184.093729,internal exception #5
1787,AliveStatements,82,bv_of_bool,FAIL,39.42739,simp made no progress
1788,AliveStatements,82,bv_omega,FAIL,25.408765,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      1 ≤ c ≤ 511
      a - b ≥ 1
    where
     a := ↑x✝.toNat / ↑x✝¹.toNat
     b := ↑((x✝.toNat + (2 ^ 9 - x✝.toNat % x✝¹.toNat)) % 2 ^ 9) / ↑x✝¹.toNat
     c := ↑x✝¹.toNat"
1789,AliveStatements,82,bv_automata_classic_prop,FAIL,129558.973623,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                      ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                        (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1) (Copy.Term.var 2)))))) =
              true)) =
        true
    is false"
1790,AliveStatements,82,bv_automata_classic,FAIL,12.213144,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                    ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                      ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.zero).lor
                        (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1) (Copy.Term.var 2)))))) =
              true)) =
        true
    is false"
1791,AliveStatements,82,bv_normalize_automata_classic,FAIL,43.585572,internal exception #5
1792,AliveStatements,82,simp,FAIL,102.403457,simp made no progress
1793,AliveStatements,82,bv_normalize,FAIL,31.853386,internal exception #5
1794,AliveStatements,82,bv_decide,PASS,2025.293985,
1795,AliveStatements,82,bv_auto,PASS,2522.179834,
1796,AliveStatements,82,bv_automata_circuit_lean_prop,FAIL,24.265466,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      ((Predicate.eq (Term.var 0) Term.zero).lor
                        ((Predicate.eq (Term.var 0) Term.zero).lor (Predicate.eq (Term.var 1) (Term.var 2))))).eval
                  vars w =
                false)) =
        true
    is false"
1797,AliveStatements,82,bv_automata_circuit_lean,FAIL,11.206001,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.zero).lor
                      ((Predicate.eq (Term.var 0) Term.zero).lor
                        ((Predicate.eq (Term.var 0) Term.zero).lor (Predicate.eq (Term.var 1) (Term.var 2))))).eval
                  vars w =
                false)) =
        true
    is false"
1798,AliveStatements,82,bv_normalize_automata_circuit_lean,FAIL,43.660454,internal exception #5
1799,AliveStatements,82,bv_automata_circuit_cadical_prop,FAIL,220.01435,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1800,AliveStatements,82,bv_automata_circuit_cadical,FAIL,198.34317,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1801,AliveStatements,82,bv_normalize_automata_circuit_cadical,FAIL,231.575278,internal exception #5
1802,AliveStatements,82,bv_mba,FAIL,4.31264,"unable to reflect term '
      (x✝ + -(x✝ % x✝¹)) / x✝¹'.
    Expected 'int * variable'."
1803,AliveStatements,82,bv_normalize_mba,FAIL,36.748371,internal exception #5
1804,AliveStatements,83,rfl,FAIL,29.992956,"tactic 'rfl' failed, the left-hand side
      x✝.sdiv (-1#w)
    is not definitionally equal to the right-hand side
      0#w - x✝
    case neg
    w : ℕ
    x✝ : BitVec w
    h✝ : ¬(-1#w == 0 || w != 1 && x✝ == BitVec.intMin w && -1#w == -1) = true
    ⊢ x✝.sdiv (-1#w) = 0#w - x✝"
1805,AliveStatements,83,bv_bitwise,PASS,377.555723,
1806,AliveStatements,83,bv_ac,FAIL,69.579539,internal exception #5
1807,AliveStatements,83,bv_distrib,FAIL,235.28272,internal exception #5
1808,AliveStatements,83,bv_ring,FAIL,437.965771,internal exception #5
1809,AliveStatements,83,bv_of_bool,FAIL,33.350882,simp made no progress
1810,AliveStatements,83,bv_omega,FAIL,46.1671,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      b ≥ 0
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(0 % 2 ^ w + (2 ^ w - x✝.toNat)) % ↑(2 ^ w)
     b := ↑(match decide (2 ^ (w - 1) ≤ x✝.toNat), decide (2 ^ (w - 1) ≤ (2 ^ w - 1 % 2 ^ w) % 2 ^ w) with
      | false, false => (x✝.udiv (-1#w)).toNat
      | false, true => (2 ^ w - (x✝.udiv (- -1#w)).toNat) % 2 ^ w
      | true, false => (2 ^ w - ((-x✝).udiv (-1#w)).toNat) % 2 ^ w
      | true, true => ((-x✝).udiv (- -1#w)).toNat)
     c := ↑2 ^ w"
1811,AliveStatements,83,bv_automata_classic_prop,FAIL,139612.159348,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq Copy.Term.one.neg Copy.Term.zero).lor
                    (((Copy.Predicate.width Copy.WidthPredicate.neq 1).land
                          ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) (Copy.Term.var 1)).land
                            (Copy.Predicate.binary Copy.BinaryPredicate.eq Copy.Term.one.neg Copy.Term.one.neg))).lor
                      (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 2)
                        (Copy.Term.zero.sub (Copy.Term.var 0)))))) =
              true)) =
        true
    is false"
1812,AliveStatements,83,bv_automata_classic,FAIL,24.646033,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq Copy.Term.one.neg Copy.Term.zero).lor
                    (((Copy.Predicate.width Copy.WidthPredicate.neq 1).land
                          ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) (Copy.Term.var 1)).land
                            (Copy.Predicate.binary Copy.BinaryPredicate.eq Copy.Term.one.neg Copy.Term.one.neg))).lor
                      (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 2)
                        (Copy.Term.zero.sub (Copy.Term.var 0)))))) =
              true)) =
        true
    is false"
1813,AliveStatements,83,bv_normalize_automata_classic,FAIL,62.774833,internal exception #5
1814,AliveStatements,83,simp,FAIL,97.032864,internal exception #5
1815,AliveStatements,83,bv_normalize,FAIL,43.282418,internal exception #5
1816,AliveStatements,83,bv_decide,FAIL,113.519288,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ == BitVec.intMin w,
     -1#w == 0#w,
     w != 1,
     (bif BitVec.extractLsb' (w - 1) 1 x✝ == 1#1 then
         bif BitVec.extractLsb' (w - 1) 1 (-1#w) == 1#1 then -x✝ / - -1#w else -(-x✝ / -1#w)
       else bif BitVec.extractLsb' (w - 1) 1 (-1#w) == 1#1 then -(x✝ / - -1#w) else x✝ / -1#w) ==
       -x✝]
    Consider the following assignment:
    (bif BitVec.extractLsb' (w - 1) 1 x✝ == 1#1 then
        bif BitVec.extractLsb' (w - 1) 1 (-1#w) == 1#1 then -x✝ / - -1#w else -(-x✝ / -1#w)
      else bif BitVec.extractLsb' (w - 1) 1 (-1#w) == 1#1 then -(x✝ / - -1#w) else x✝ / -1#w) ==
      -x✝ = false
    -1#w == 0#w = false
    w != 1 = false
    x✝ == BitVec.intMin w = false"
1817,AliveStatements,83,bv_auto,PASS,151.995315,
1818,AliveStatements,83,bv_automata_circuit_lean_prop,FAIL,34.810347,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq Term.one.neg Term.zero).lor
                      (((Predicate.widthNeq 1).land
                            ((Predicate.eq (Term.var 0) (Term.var 1)).land
                              (Predicate.eq Term.one.neg Term.one.neg))).lor
                        (Predicate.eq (Term.var 2) (Term.zero.sub (Term.var 0))))).eval
                  vars w =
                false)) =
        true
    is false"
1819,AliveStatements,83,bv_automata_circuit_lean,FAIL,24.303596,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq Term.one.neg Term.zero).lor
                      (((Predicate.widthNeq 1).land
                            ((Predicate.eq (Term.var 0) (Term.var 1)).land
                              (Predicate.eq Term.one.neg Term.one.neg))).lor
                        (Predicate.eq (Term.var 2) (Term.zero.sub (Term.var 0))))).eval
                  vars w =
                false)) =
        true
    is false"
1820,AliveStatements,83,bv_normalize_automata_circuit_lean,FAIL,63.297421,internal exception #5
1821,AliveStatements,83,bv_automata_circuit_cadical_prop,FAIL,227.171472,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1822,AliveStatements,83,bv_automata_circuit_cadical,FAIL,209.893583,"failed to prove goal, since decideIfZerosM established that theorem is not true."
1823,AliveStatements,83,bv_normalize_automata_circuit_cadical,FAIL,252.655358,internal exception #5
1824,AliveStatements,83,bv_mba,FAIL,6.619476,"unable to reflect term '
      x✝.sdiv (BitVec.ofInt w (-1))'.
    Expected 'int * variable'."
1825,AliveStatements,83,bv_normalize_mba,FAIL,49.938721,internal exception #5
1826,AliveStatements,84,rfl,FAIL,1.124528,"tactic 'rfl' failed, the left-hand side
      some (x✝ ^^^ -1#1)
    is not definitionally equal to the right-hand side
      none
    case pos
    x✝ : BitVec 1
    h✝ : x✝ = 1#1
    ⊢ some (x✝ ^^^ -1#1) ⊑ none"
1827,AliveStatements,84,bv_bitwise,FAIL,0.147174,"applyExtTheorem only applies to equations, not
      some (x✝ ^^^ -1#1) ⊑ none"
1828,AliveStatements,84,bv_ac,FAIL,29.858435,internal exception #5
1829,AliveStatements,84,bv_distrib,FAIL,216.624039,internal exception #5
1830,AliveStatements,84,bv_ring,FAIL,255.658706,internal exception #5
1831,AliveStatements,84,bv_of_bool,FAIL,46.928131,simp made no progress
1832,AliveStatements,84,bv_omega,FAIL,11.468299,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
1833,AliveStatements,84,bv_automata_classic_prop,FAIL,25.347863,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1834,AliveStatements,84,bv_automata_classic,FAIL,5.529311,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1835,AliveStatements,84,bv_normalize_automata_classic,FAIL,19.487653,internal exception #5
1836,AliveStatements,84,simp,FAIL,176.774206,internal exception #5
1837,AliveStatements,84,bv_normalize,FAIL,15.65423,internal exception #5
1838,AliveStatements,84,bv_decide,FAIL,72.924148,"The prover found a potentially spurious counterexample:
    - The following potentially relevant hypotheses could not be used: [a✝]
    Consider the following assignment:
    x✝ = 1#1"
1839,AliveStatements,84,bv_auto,FAIL,552.278856,internal exception #5
1840,AliveStatements,84,bv_automata_circuit_lean_prop,FAIL,21.781975,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1841,AliveStatements,84,bv_automata_circuit_lean,FAIL,5.284754,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1842,AliveStatements,84,bv_normalize_automata_circuit_lean,FAIL,36.753858,internal exception #5
1843,AliveStatements,84,bv_automata_circuit_cadical_prop,FAIL,19.475214,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1844,AliveStatements,84,bv_automata_circuit_cadical,FAIL,6.749698,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1845,AliveStatements,84,bv_normalize_automata_circuit_cadical,FAIL,26.548086,internal exception #5
1846,AliveStatements,84,bv_mba,FAIL,0.281154,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some (x✝ ^^^ -1#1) ⊑ none
    case pos
    x✝ : BitVec 1
    h✝ : x✝ = 1#1
    ⊢ some (x✝ ^^^ -1#1) ⊑ none"
1847,AliveStatements,84,bv_normalize_mba,FAIL,16.325487,internal exception #5
1848,AliveStatements,85,rfl,FAIL,8.860804,"tactic 'rfl' failed, the left-hand side
      x✝ ^^^ -1#1
    is not definitionally equal to the right-hand side
      (x✝ ^^^ -1#1) &&& x✝¹
    case pos
    x✝¹ x✝ : BitVec 1
    h✝ : x✝ = 1#1
    ⊢ x✝ ^^^ -1#1 = (x✝ ^^^ -1#1) &&& x✝¹"
1849,AliveStatements,85,bv_bitwise,FAIL,503.628133,internal exception #5
1850,AliveStatements,85,bv_ac,FAIL,50.02636,internal exception #5
1851,AliveStatements,85,bv_distrib,FAIL,181.312606,internal exception #5
1852,AliveStatements,85,bv_ring,FAIL,252.932497,internal exception #5
1853,AliveStatements,85,bv_of_bool,FAIL,23.801721,simp made no progress
1854,AliveStatements,85,bv_omega,FAIL,10.303319,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑((x✝ ^^^ -1#1) &&& x✝¹).toNat
     b := ↑(x✝ ^^^ -1#1).toNat"
1855,AliveStatements,85,bv_automata_classic_prop,FAIL,138798.753812,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.neq (Copy.Term.var 0) Copy.Term.one).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 0).xor Copy.Term.one.neg)
                      (((Copy.Term.var 0).xor Copy.Term.one.neg).and (Copy.Term.var 1))))) =
              true)) =
        true
    is false"
1856,AliveStatements,85,bv_automata_classic,FAIL,8.882266,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.neq (Copy.Term.var 0) Copy.Term.one).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 0).xor Copy.Term.one.neg)
                      (((Copy.Term.var 0).xor Copy.Term.one.neg).and (Copy.Term.var 1))))) =
              true)) =
        true
    is false"
1857,AliveStatements,85,bv_normalize_automata_classic,FAIL,24.050247,internal exception #5
1858,AliveStatements,85,simp,FAIL,125.07449,internal exception #5
1859,AliveStatements,85,bv_normalize,FAIL,15.157263,internal exception #5
1860,AliveStatements,85,bv_decide,PASS,89.041146,
1861,AliveStatements,85,bv_auto,PASS,710.617193,
1862,AliveStatements,85,bv_automata_circuit_lean_prop,FAIL,20.857015,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.neq (Term.var 0) Term.one).lor
                      (Predicate.eq ((Term.var 0).xor Term.one.neg)
                        (((Term.var 0).xor Term.one.neg).and (Term.var 1)))).eval
                  vars w =
                false)) =
        true
    is false"
1863,AliveStatements,85,bv_automata_circuit_lean,FAIL,10.036816,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.neq (Term.var 0) Term.one).lor
                      (Predicate.eq ((Term.var 0).xor Term.one.neg)
                        (((Term.var 0).xor Term.one.neg).and (Term.var 1)))).eval
                  vars w =
                false)) =
        true
    is false"
1864,AliveStatements,85,bv_normalize_automata_circuit_lean,FAIL,24.843696,internal exception #5
1865,AliveStatements,85,bv_automata_circuit_cadical_prop,PASS,272.439774,
1866,AliveStatements,85,bv_automata_circuit_cadical,PASS,256.304021,
1867,AliveStatements,85,bv_normalize_automata_circuit_cadical,PASS,272.535376,
1868,AliveStatements,85,bv_mba,FAIL,4.946166,"unable to reflect term '
      x✝ ^^^ BitVec.ofInt 1 (-1)'.
    Expected 'int * variable'."
1869,AliveStatements,85,bv_normalize_mba,FAIL,20.387952,internal exception #5
1870,AliveStatements,86,rfl,FAIL,1.361403,"tactic 'rfl' failed, the left-hand side
      x✝¹
    is not definitionally equal to the right-hand side
      (x✝ ^^^ -1#1) &&& x✝¹
    case neg
    x✝¹ x✝ : BitVec 1
    h✝ : ¬x✝ = 1#1
    ⊢ x✝¹ = (x✝ ^^^ -1#1) &&& x✝¹"
1871,AliveStatements,86,bv_bitwise,FAIL,320.531192,internal exception #5
1872,AliveStatements,86,bv_ac,FAIL,18.643879,internal exception #5
1873,AliveStatements,86,bv_distrib,FAIL,136.613057,internal exception #5
1874,AliveStatements,86,bv_ring,FAIL,122.22721,internal exception #5
1875,AliveStatements,86,bv_of_bool,FAIL,17.523383,simp made no progress
1876,AliveStatements,86,bv_omega,FAIL,8.747586,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑((x✝ ^^^ -1#1) &&& x✝¹).toNat
     b := ↑x✝¹.toNat"
1877,AliveStatements,86,bv_automata_classic_prop,FAIL,20.235021,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.one).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1)
                      (((Copy.Term.var 0).xor Copy.Term.one.neg).and (Copy.Term.var 1))))) =
              true)) =
        true
    is false"
1878,AliveStatements,86,bv_automata_classic,FAIL,9.141308,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.one).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1)
                      (((Copy.Term.var 0).xor Copy.Term.one.neg).and (Copy.Term.var 1))))) =
              true)) =
        true
    is false"
1879,AliveStatements,86,bv_normalize_automata_classic,FAIL,27.659172,internal exception #5
1880,AliveStatements,86,simp,FAIL,126.553199,internal exception #5
1881,AliveStatements,86,bv_normalize,FAIL,18.792078,internal exception #5
1882,AliveStatements,86,bv_decide,PASS,95.731323,
1883,AliveStatements,86,bv_auto,PASS,727.219742,
1884,AliveStatements,86,bv_automata_circuit_lean_prop,FAIL,20.993271,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.one).lor
                      (Predicate.eq (Term.var 1) (((Term.var 0).xor Term.one.neg).and (Term.var 1)))).eval
                  vars w =
                false)) =
        true
    is false"
1885,AliveStatements,86,bv_automata_circuit_lean,FAIL,9.620739,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.one).lor
                      (Predicate.eq (Term.var 1) (((Term.var 0).xor Term.one.neg).and (Term.var 1)))).eval
                  vars w =
                false)) =
        true
    is false"
1886,AliveStatements,86,bv_normalize_automata_circuit_lean,FAIL,28.193806,internal exception #5
1887,AliveStatements,86,bv_automata_circuit_cadical_prop,PASS,273.299841,
1888,AliveStatements,86,bv_automata_circuit_cadical,PASS,263.690977,
1889,AliveStatements,86,bv_normalize_automata_circuit_cadical,PASS,277.402403,
1890,AliveStatements,86,bv_mba,FAIL,4.851648,"unable to reflect term '
      x✝¹'.
    Expected 'int * variable'."
1891,AliveStatements,86,bv_normalize_mba,FAIL,24.003006,internal exception #5
1892,AliveStatements,87,rfl,FAIL,1.934274,"tactic 'rfl' failed, the left-hand side
      some (x✝ ^^^ -1#1)
    is not definitionally equal to the right-hand side
      none
    case neg
    x✝ : BitVec 1
    h✝ : ¬x✝ = 1#1
    ⊢ some (x✝ ^^^ -1#1) ⊑ none"
1893,AliveStatements,87,bv_bitwise,FAIL,0.146626,"applyExtTheorem only applies to equations, not
      some (x✝ ^^^ -1#1) ⊑ none"
1894,AliveStatements,87,bv_ac,FAIL,28.146338,internal exception #5
1895,AliveStatements,87,bv_distrib,FAIL,221.24963,internal exception #5
1896,AliveStatements,87,bv_ring,FAIL,284.403883,internal exception #5
1897,AliveStatements,87,bv_of_bool,FAIL,31.105397,simp made no progress
1898,AliveStatements,87,bv_omega,FAIL,15.244869,"omega could not prove the goal:
    No usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
1899,AliveStatements,87,bv_automata_classic_prop,FAIL,23.145999,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1900,AliveStatements,87,bv_automata_classic,FAIL,10.992667,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1901,AliveStatements,87,bv_normalize_automata_classic,FAIL,27.4095,internal exception #5
1902,AliveStatements,87,simp,FAIL,200.189211,internal exception #5
1903,AliveStatements,87,bv_normalize,FAIL,13.635426,internal exception #5
1904,AliveStatements,87,bv_decide,FAIL,77.967327,"The prover found a potentially spurious counterexample:
    - The following potentially relevant hypotheses could not be used: [a✝]
    Consider the following assignment:
    x✝ = 0#1"
1905,AliveStatements,87,bv_auto,FAIL,581.254881,internal exception #5
1906,AliveStatements,87,bv_automata_circuit_lean_prop,FAIL,20.220626,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1907,AliveStatements,87,bv_automata_circuit_lean,FAIL,7.159393,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1908,AliveStatements,87,bv_normalize_automata_circuit_lean,FAIL,25.348188,internal exception #5
1909,AliveStatements,87,bv_automata_circuit_cadical_prop,FAIL,41.023229,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1910,AliveStatements,87,bv_automata_circuit_cadical,FAIL,7.264866,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ ^^^ -1#1) ⊑ none"
1911,AliveStatements,87,bv_normalize_automata_circuit_cadical,FAIL,31.555427,internal exception #5
1912,AliveStatements,87,bv_mba,FAIL,0.220386,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some (x✝ ^^^ -1#1) ⊑ none
    case neg
    x✝ : BitVec 1
    h✝ : ¬x✝ = 1#1
    ⊢ some (x✝ ^^^ -1#1) ⊑ none"
1913,AliveStatements,87,bv_normalize_mba,FAIL,21.88635,internal exception #5
1914,AliveStatements,88,rfl,FAIL,1.535669,"tactic 'rfl' failed, the left-hand side
      x✝¹
    is not definitionally equal to the right-hand side
      x✝ ^^^ -1#1 ||| x✝¹
    case pos
    x✝¹ x✝ : BitVec 1
    h✝ : x✝ = 1#1
    ⊢ x✝¹ = x✝ ^^^ -1#1 ||| x✝¹"
1915,AliveStatements,88,bv_bitwise,FAIL,435.211006,internal exception #5
1916,AliveStatements,88,bv_ac,FAIL,19.302864,internal exception #5
1917,AliveStatements,88,bv_distrib,FAIL,241.96528,internal exception #5
1918,AliveStatements,88,bv_ring,FAIL,263.457936,internal exception #5
1919,AliveStatements,88,bv_of_bool,FAIL,21.07279,simp made no progress
1920,AliveStatements,88,bv_omega,FAIL,9.098388,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(x✝ ^^^ -1#1 ||| x✝¹).toNat
     b := ↑x✝¹.toNat"
1921,AliveStatements,88,bv_automata_classic_prop,FAIL,144361.251294,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.neq (Copy.Term.var 0) Copy.Term.one).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1)
                      (((Copy.Term.var 0).xor Copy.Term.one.neg).or (Copy.Term.var 1))))) =
              true)) =
        true
    is false"
1922,AliveStatements,88,bv_automata_classic,FAIL,9.062487,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.neq (Copy.Term.var 0) Copy.Term.one).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 1)
                      (((Copy.Term.var 0).xor Copy.Term.one.neg).or (Copy.Term.var 1))))) =
              true)) =
        true
    is false"
1923,AliveStatements,88,bv_normalize_automata_classic,FAIL,25.713642,internal exception #5
1924,AliveStatements,88,simp,FAIL,126.889755,internal exception #5
1925,AliveStatements,88,bv_normalize,FAIL,16.831009,internal exception #5
1926,AliveStatements,88,bv_decide,PASS,91.519822,
1927,AliveStatements,88,bv_auto,PASS,707.714536,
1928,AliveStatements,88,bv_automata_circuit_lean_prop,FAIL,20.163482,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.neq (Term.var 0) Term.one).lor
                      (Predicate.eq (Term.var 1) (((Term.var 0).xor Term.one.neg).or (Term.var 1)))).eval
                  vars w =
                false)) =
        true
    is false"
1929,AliveStatements,88,bv_automata_circuit_lean,FAIL,8.997337,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.neq (Term.var 0) Term.one).lor
                      (Predicate.eq (Term.var 1) (((Term.var 0).xor Term.one.neg).or (Term.var 1)))).eval
                  vars w =
                false)) =
        true
    is false"
1930,AliveStatements,88,bv_normalize_automata_circuit_lean,FAIL,25.625608,internal exception #5
1931,AliveStatements,88,bv_automata_circuit_cadical_prop,PASS,276.191017,
1932,AliveStatements,88,bv_automata_circuit_cadical,PASS,257.701331,
1933,AliveStatements,88,bv_normalize_automata_circuit_cadical,PASS,275.14485,
1934,AliveStatements,88,bv_mba,FAIL,4.950234,"unable to reflect term '
      x✝¹'.
    Expected 'int * variable'."
1935,AliveStatements,88,bv_normalize_mba,FAIL,21.982838,internal exception #5
1936,AliveStatements,89,rfl,FAIL,3.567301,"tactic 'rfl' failed, the left-hand side
      x✝ ^^^ -1#1
    is not definitionally equal to the right-hand side
      x✝ ^^^ -1#1 ||| x✝¹
    case neg
    x✝¹ x✝ : BitVec 1
    h✝ : ¬x✝ = 1#1
    ⊢ x✝ ^^^ -1#1 = x✝ ^^^ -1#1 ||| x✝¹"
1937,AliveStatements,89,bv_bitwise,FAIL,341.462805,internal exception #5
1938,AliveStatements,89,bv_ac,FAIL,20.599645,internal exception #5
1939,AliveStatements,89,bv_distrib,FAIL,137.889135,internal exception #5
1940,AliveStatements,89,bv_ring,FAIL,124.280247,internal exception #5
1941,AliveStatements,89,bv_of_bool,FAIL,17.191981,simp made no progress
1942,AliveStatements,89,bv_omega,FAIL,8.820154,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      0 ≤ b ≤ 1
      0 ≤ a ≤ 1
      a - b ≥ 1
    where
     a := ↑(x✝ ^^^ -1#1 ||| x✝¹).toNat
     b := ↑(x✝ ^^^ -1#1).toNat"
1943,AliveStatements,89,bv_automata_classic_prop,FAIL,19.799597,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.one).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 0).xor Copy.Term.one.neg)
                      (((Copy.Term.var 0).xor Copy.Term.one.neg).or (Copy.Term.var 1))))) =
              true)) =
        true
    is false"
1944,AliveStatements,89,bv_automata_classic,FAIL,9.129267,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 0) Copy.Term.one).lor
                    (Copy.Predicate.binary Copy.BinaryPredicate.eq ((Copy.Term.var 0).xor Copy.Term.one.neg)
                      (((Copy.Term.var 0).xor Copy.Term.one.neg).or (Copy.Term.var 1))))) =
              true)) =
        true
    is false"
1945,AliveStatements,89,bv_normalize_automata_classic,FAIL,29.663087,internal exception #5
1946,AliveStatements,89,simp,FAIL,125.898961,internal exception #5
1947,AliveStatements,89,bv_normalize,FAIL,20.628393,internal exception #5
1948,AliveStatements,89,bv_decide,PASS,94.005944,
1949,AliveStatements,89,bv_auto,PASS,759.74255,
1950,AliveStatements,89,bv_automata_circuit_lean_prop,FAIL,21.225611,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.one).lor
                      (Predicate.eq ((Term.var 0).xor Term.one.neg)
                        (((Term.var 0).xor Term.one.neg).or (Term.var 1)))).eval
                  vars w =
                false)) =
        true
    is false"
1951,AliveStatements,89,bv_automata_circuit_lean,FAIL,10.413326,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.eq (Term.var 0) Term.one).lor
                      (Predicate.eq ((Term.var 0).xor Term.one.neg)
                        (((Term.var 0).xor Term.one.neg).or (Term.var 1)))).eval
                  vars w =
                false)) =
        true
    is false"
1952,AliveStatements,89,bv_normalize_automata_circuit_lean,FAIL,30.928457,internal exception #5
1953,AliveStatements,89,bv_automata_circuit_cadical_prop,PASS,273.82247,
1954,AliveStatements,89,bv_automata_circuit_cadical,PASS,258.293622,
1955,AliveStatements,89,bv_normalize_automata_circuit_cadical,PASS,280.849912,
1956,AliveStatements,89,bv_mba,FAIL,5.044058,"unable to reflect term '
      x✝ ^^^ BitVec.ofInt 1 (-1)'.
    Expected 'int * variable'."
1957,AliveStatements,89,bv_normalize_mba,FAIL,26.256711,internal exception #5
1958,AliveStatements,90,rfl,FAIL,1.13434,"tactic 'rfl' failed, the left-hand side
      some x✝
    is not definitionally equal to the right-hand side
      none
    case pos
    w : ℕ
    x✝ : BitVec w
    h✝ : 0#1 = 1#1
    ⊢ some x✝ ⊑ none"
1959,AliveStatements,90,bv_bitwise,FAIL,0.144972,"applyExtTheorem only applies to equations, not
      some x✝ ⊑ none"
1960,AliveStatements,90,bv_ac,PASS,10.872778,
1961,AliveStatements,90,bv_distrib,FAIL,27.949894,internal exception #5
1962,AliveStatements,90,bv_ring,FAIL,21.366799,internal exception #5
1963,AliveStatements,90,bv_of_bool,FAIL,38.768048,simp made no progress
1964,AliveStatements,90,bv_omega,PASS,17.292251,
1965,AliveStatements,90,bv_automata_classic_prop,FAIL,19.187711,"expected predicate over bitvectors (no quantification), found:  
      some x✝ ⊑ none"
1966,AliveStatements,90,bv_automata_classic,FAIL,3.927845,"expected predicate over bitvectors (no quantification), found:  
      some x✝ ⊑ none"
1967,AliveStatements,90,bv_normalize_automata_classic,PASS,9.531003,
1968,AliveStatements,90,simp,FAIL,33.993964,simp made no progress
1969,AliveStatements,90,bv_normalize,PASS,8.506098,
1970,AliveStatements,90,bv_decide,PASS,8.566781,
1971,AliveStatements,90,bv_auto,PASS,18.995614,
1972,AliveStatements,90,bv_automata_circuit_lean_prop,FAIL,17.540489,"expected predicate over bitvectors (no quantification), found:  
      some x✝ ⊑ none"
1973,AliveStatements,90,bv_automata_circuit_lean,FAIL,3.888674,"expected predicate over bitvectors (no quantification), found:  
      some x✝ ⊑ none"
1974,AliveStatements,90,bv_normalize_automata_circuit_lean,PASS,9.588857,
1975,AliveStatements,90,bv_automata_circuit_cadical_prop,FAIL,26.256517,"expected predicate over bitvectors (no quantification), found:  
      some x✝ ⊑ none"
1976,AliveStatements,90,bv_automata_circuit_cadical,FAIL,7.011778,"expected predicate over bitvectors (no quantification), found:  
      some x✝ ⊑ none"
1977,AliveStatements,90,bv_normalize_automata_circuit_cadical,PASS,14.763137,
1978,AliveStatements,90,bv_mba,FAIL,0.283445,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some x✝ ⊑ none
    case pos
    w : ℕ
    x✝ : BitVec w
    h✝ : 0#1 = 1#1
    ⊢ some x✝ ⊑ none"
1979,AliveStatements,90,bv_normalize_mba,PASS,10.039772,
1980,AliveStatements,91,rfl,FAIL,1.425779,"tactic 'rfl' failed, the left-hand side
      x✝
    is not definitionally equal to the right-hand side
      x✝¹
    case pos
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝ : 0#1 = 1#1
    ⊢ x✝ = x✝¹"
1981,AliveStatements,91,bv_bitwise,PASS,88.403232,
1982,AliveStatements,91,bv_ac,PASS,9.593728,
1983,AliveStatements,91,bv_distrib,FAIL,78.260994,internal exception #5
1984,AliveStatements,91,bv_ring,FAIL,20.708644,internal exception #5
1985,AliveStatements,91,bv_of_bool,FAIL,25.989021,simp made no progress
1986,AliveStatements,91,bv_omega,PASS,15.531649,
1987,AliveStatements,91,bv_automata_classic_prop,PASS,152904.776363,
1988,AliveStatements,91,bv_automata_classic,PASS,9.475136,
1989,AliveStatements,91,bv_normalize_automata_classic,PASS,5.487672,
1990,AliveStatements,91,simp,FAIL,25.716243,simp made no progress
1991,AliveStatements,91,bv_normalize,PASS,4.360382,
1992,AliveStatements,91,bv_decide,PASS,4.070448,
1993,AliveStatements,91,bv_auto,PASS,40.403053,
1994,AliveStatements,91,bv_automata_circuit_lean_prop,PASS,15.109725,
1995,AliveStatements,91,bv_automata_circuit_lean,PASS,6.589136,
1996,AliveStatements,91,bv_normalize_automata_circuit_lean,PASS,4.170007,
1997,AliveStatements,91,bv_automata_circuit_cadical_prop,PASS,276.907531,
1998,AliveStatements,91,bv_automata_circuit_cadical,PASS,256.719976,
1999,AliveStatements,91,bv_normalize_automata_circuit_cadical,PASS,7.25464,
2000,AliveStatements,91,bv_mba,FAIL,2.403037,"unable to reflect term '
      x✝'.
    Expected 'int * variable'."
2001,AliveStatements,91,bv_normalize_mba,PASS,4.288422,
2002,AliveStatements,92,rfl,FAIL,1.109767,"tactic 'rfl' failed, the left-hand side
      some (x✝ <<< x✝¹ >>> x✝¹)
    is not definitionally equal to the right-hand side
      none
    case pos
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : x✝¹ ≥ ↑w
    ⊢ some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2003,AliveStatements,92,bv_bitwise,FAIL,0.150153,"applyExtTheorem only applies to equations, not
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2004,AliveStatements,92,bv_ac,FAIL,16.9078,internal exception #5
2005,AliveStatements,92,bv_distrib,FAIL,281.91067,internal exception #5
2006,AliveStatements,92,bv_ring,FAIL,145.075195,internal exception #5
2007,AliveStatements,92,bv_of_bool,FAIL,26.185346,simp made no progress
2008,AliveStatements,92,bv_omega,PASS,17.624795,
2009,AliveStatements,92,bv_automata_classic_prop,FAIL,45.041627,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2010,AliveStatements,92,bv_automata_classic,FAIL,23.550456,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2011,AliveStatements,92,bv_normalize_automata_classic,PASS,17.681122,
2012,AliveStatements,92,simp,FAIL,204.270501,internal exception #5
2013,AliveStatements,92,bv_normalize,PASS,22.740751,
2014,AliveStatements,92,bv_decide,PASS,26.324314,
2015,AliveStatements,92,bv_auto,PASS,473.803073,
2016,AliveStatements,92,bv_automata_circuit_lean_prop,FAIL,21.836732,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2017,AliveStatements,92,bv_automata_circuit_lean,FAIL,25.840157,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2018,AliveStatements,92,bv_normalize_automata_circuit_lean,PASS,17.944489,
2019,AliveStatements,92,bv_automata_circuit_cadical_prop,FAIL,27.140041,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2020,AliveStatements,92,bv_automata_circuit_cadical,FAIL,8.891948,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2021,AliveStatements,92,bv_normalize_automata_circuit_cadical,PASS,21.52147,
2022,AliveStatements,92,bv_mba,FAIL,0.224354,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none
    case pos
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : x✝¹ ≥ ↑w
    ⊢ some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2023,AliveStatements,92,bv_normalize_mba,PASS,15.583658,
2024,AliveStatements,93,rfl,FAIL,2.689126,"tactic 'rfl' failed, the left-hand side
      x✝ <<< x✝¹ >>> x✝¹
    is not definitionally equal to the right-hand side
      x✝ &&& (-1#w) >>> x✝¹
    case neg
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : ¬x✝¹ ≥ ↑w
    ⊢ x✝ <<< x✝¹ >>> x✝¹ = x✝ &&& (-1#w) >>> x✝¹"
2025,AliveStatements,93,bv_bitwise,PASS,151952.607073,
2026,AliveStatements,93,bv_ac,FAIL,16.916336,internal exception #5
2027,AliveStatements,93,bv_distrib,FAIL,209.478841,internal exception #5
2028,AliveStatements,93,bv_ring,FAIL,135.329822,internal exception #5
2029,AliveStatements,93,bv_of_bool,FAIL,18.697332,simp made no progress
2030,AliveStatements,93,bv_omega,FAIL,8.790737,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝¹.toNat
     c := ↑2 ^ w
     d := ↑(x✝ &&& (-1#w) >>> x✝¹).toNat
     e := ↑(x✝ <<< x✝¹ >>> x✝¹).toNat"
2031,AliveStatements,93,bv_automata_classic_prop,FAIL,30.702137,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                    ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                      ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                        (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 2)
                          ((Copy.Term.var 3).and (Copy.Term.var 4))))))) =
              true)) =
        true
    is false"
2032,AliveStatements,93,bv_automata_classic,FAIL,19.473594,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                    ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                      ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                        (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 2)
                          ((Copy.Term.var 3).and (Copy.Term.var 4))))))) =
              true)) =
        true
    is false"
2033,AliveStatements,93,bv_normalize_automata_classic,FAIL,41.409374,internal exception #5
2034,AliveStatements,93,simp,FAIL,200.554566,internal exception #5
2035,AliveStatements,93,bv_normalize,FAIL,21.381735,internal exception #5
2036,AliveStatements,93,bv_decide,FAIL,90.99402,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ <<< x✝¹ >>> x✝¹ ==
       x✝ &&& (-1#w) >>> x✝¹,
     x✝¹ <ᵤ BitVec.ofNat w w]
    Consider the following assignment:
    x✝¹ <ᵤ BitVec.ofNat w w = true
    x✝ <<< x✝¹ >>> x✝¹ == x✝ &&& (-1#w) >>> x✝¹ = false"
2037,AliveStatements,93,bv_auto,PASS,494.013886,
2038,AliveStatements,93,bv_automata_circuit_lean_prop,FAIL,23.661456,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                      ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                        ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                          (Predicate.eq (Term.var 2) ((Term.var 3).and (Term.var 4)))))).eval
                  vars w =
                false)) =
        true
    is false"
2039,AliveStatements,93,bv_automata_circuit_lean,FAIL,11.959044,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                      ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                        ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                          (Predicate.eq (Term.var 2) ((Term.var 3).and (Term.var 4)))))).eval
                  vars w =
                false)) =
        true
    is false"
2040,AliveStatements,93,bv_normalize_automata_circuit_lean,FAIL,33.213145,internal exception #5
2041,AliveStatements,93,bv_automata_circuit_cadical_prop,FAIL,214.519654,"failed to prove goal, since decideIfZerosM established that theorem is not true."
2042,AliveStatements,93,bv_automata_circuit_cadical,FAIL,198.427621,"failed to prove goal, since decideIfZerosM established that theorem is not true."
2043,AliveStatements,93,bv_normalize_automata_circuit_cadical,FAIL,221.361559,internal exception #5
2044,AliveStatements,93,bv_mba,FAIL,5.172567,"unable to reflect term '
      x✝ <<< x✝¹ >>> x✝¹'.
    Expected 'int * variable'."
2045,AliveStatements,93,bv_normalize_mba,FAIL,26.669115,internal exception #5
2046,AliveStatements,94,rfl,FAIL,1.202773,"tactic 'rfl' failed, the left-hand side
      some (x✝ >>> x✝¹ <<< x✝¹)
    is not definitionally equal to the right-hand side
      none
    case pos
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : x✝¹ ≥ ↑w
    ⊢ some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2047,AliveStatements,94,bv_bitwise,FAIL,0.145955,"applyExtTheorem only applies to equations, not
      some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2048,AliveStatements,94,bv_ac,FAIL,23.999444,internal exception #5
2049,AliveStatements,94,bv_distrib,FAIL,487.401089,internal exception #5
2050,AliveStatements,94,bv_ring,FAIL,161.500109,internal exception #5
2051,AliveStatements,94,bv_of_bool,FAIL,21.12037,simp made no progress
2052,AliveStatements,94,bv_omega,PASS,16.988871,
2053,AliveStatements,94,bv_automata_classic_prop,FAIL,23.928458,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2054,AliveStatements,94,bv_automata_classic,FAIL,9.352272,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2055,AliveStatements,94,bv_normalize_automata_classic,PASS,24.086828,
2056,AliveStatements,94,simp,FAIL,510.921149,internal exception #5
2057,AliveStatements,94,bv_normalize,PASS,26.687494,
2058,AliveStatements,94,bv_decide,PASS,20.536572,
2059,AliveStatements,94,bv_auto,PASS,692.043834,
2060,AliveStatements,94,bv_automata_circuit_lean_prop,FAIL,22.894898,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2061,AliveStatements,94,bv_automata_circuit_lean,FAIL,9.522702,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2062,AliveStatements,94,bv_normalize_automata_circuit_lean,PASS,20.98816,
2063,AliveStatements,94,bv_automata_circuit_cadical_prop,FAIL,44.180292,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2064,AliveStatements,94,bv_automata_circuit_cadical,FAIL,9.105762,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2065,AliveStatements,94,bv_normalize_automata_circuit_cadical,PASS,17.044493,
2066,AliveStatements,94,bv_mba,FAIL,0.230329,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none
    case pos
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : x✝¹ ≥ ↑w
    ⊢ some (x✝ >>> x✝¹ <<< x✝¹) ⊑ none"
2067,AliveStatements,94,bv_normalize_mba,PASS,16.628142,
2068,AliveStatements,95,rfl,FAIL,4.080212,"tactic 'rfl' failed, the left-hand side
      x✝ >>> x✝¹ <<< x✝¹
    is not definitionally equal to the right-hand side
      x✝ &&& (-1#w) <<< x✝¹
    case neg
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : ¬x✝¹ ≥ ↑w
    ⊢ x✝ >>> x✝¹ <<< x✝¹ = x✝ &&& (-1#w) <<< x✝¹"
2069,AliveStatements,95,bv_bitwise,PASS,585.798364,
2070,AliveStatements,95,bv_ac,FAIL,19.368452,internal exception #5
2071,AliveStatements,95,bv_distrib,FAIL,416.585003,internal exception #5
2072,AliveStatements,95,bv_ring,FAIL,154.792786,internal exception #5
2073,AliveStatements,95,bv_of_bool,FAIL,35.994497,simp made no progress
2074,AliveStatements,95,bv_omega,FAIL,9.903568,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝¹.toNat
     c := ↑2 ^ w
     d := ↑(x✝ &&& (-1#w) <<< x✝¹).toNat
     e := ↑(x✝ >>> x✝¹ <<< x✝¹).toNat"
2075,AliveStatements,95,bv_automata_classic_prop,FAIL,23.219068,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      x✝ >>> x✝¹ <<< x✝¹'"
2076,AliveStatements,95,bv_automata_classic,FAIL,6.199683,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      x✝ >>> x✝¹ <<< x✝¹'"
2077,AliveStatements,95,bv_normalize_automata_classic,FAIL,28.196307,internal exception #5
2078,AliveStatements,95,simp,FAIL,389.066015,internal exception #5
2079,AliveStatements,95,bv_normalize,FAIL,25.343103,internal exception #5
2080,AliveStatements,95,bv_decide,FAIL,91.554681,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ >>> x✝¹ <<< x✝¹ ==
       x✝ &&& (-1#w) <<< x✝¹,
     x✝¹ <ᵤ BitVec.ofNat w w]
    Consider the following assignment:
    x✝¹ <ᵤ BitVec.ofNat w w = true
    x✝ >>> x✝¹ <<< x✝¹ == x✝ &&& (-1#w) <<< x✝¹ = false"
2081,AliveStatements,95,bv_auto,PASS,569.372638,
2082,AliveStatements,95,bv_automata_circuit_lean_prop,FAIL,31.765836,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      x✝ >>> x✝¹ <<< x✝¹'"
2083,AliveStatements,95,bv_automata_circuit_lean,FAIL,6.143633,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      x✝ >>> x✝¹ <<< x✝¹'"
2084,AliveStatements,95,bv_normalize_automata_circuit_lean,FAIL,28.420251,internal exception #5
2085,AliveStatements,95,bv_automata_circuit_cadical_prop,FAIL,21.419063,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      x✝ >>> x✝¹ <<< x✝¹'"
2086,AliveStatements,95,bv_automata_circuit_cadical,FAIL,8.135313,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      x✝ >>> x✝¹ <<< x✝¹'"
2087,AliveStatements,95,bv_normalize_automata_circuit_cadical,FAIL,30.785073,internal exception #5
2088,AliveStatements,95,bv_mba,FAIL,4.971663,"unable to reflect term '
      x✝ >>> x✝¹ <<< x✝¹'.
    Expected 'int * variable'."
2089,AliveStatements,95,bv_normalize_mba,FAIL,26.943188,internal exception #5
2090,AliveStatements,96,rfl,FAIL,3.335246,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²
    is not definitionally equal to the right-hand side
      x✝¹ &&& x✝³ <<< x✝² ^^^ x✝ <<< x✝²
    case neg
    w : ℕ
    x✝³ x✝² x✝¹ x✝ : BitVec w
    h✝ : ¬(x✝² ≥ ↑w ∨ x✝² ≥ ↑w)
    ⊢ (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝² = x✝¹ &&& x✝³ <<< x✝² ^^^ x✝ <<< x✝²"
2091,AliveStatements,96,bv_bitwise,FAIL,1001.554754,internal exception #5
2092,AliveStatements,96,bv_ac,FAIL,49.407045,internal exception #5
2093,AliveStatements,96,bv_distrib,PASS,1267.714166,
2094,AliveStatements,96,bv_ring,FAIL,130.012867,internal exception #5
2095,AliveStatements,96,bv_of_bool,FAIL,23.60871,simp made no progress
2096,AliveStatements,96,bv_omega,FAIL,8.706663,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝².toNat
     c := ↑2 ^ w
     d := ↑(x✝¹ &&& x✝³ <<< x✝² ^^^ x✝ <<< x✝²).toNat
     e := ↑((x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²).toNat"
2097,AliveStatements,96,bv_automata_classic_prop,FAIL,24.020015,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²'"
2098,AliveStatements,96,bv_automata_classic,FAIL,6.543404,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²'"
2099,AliveStatements,96,bv_normalize_automata_classic,FAIL,39.148511,internal exception #5
2100,AliveStatements,96,simp,FAIL,533.968894,internal exception #5
2101,AliveStatements,96,bv_normalize,FAIL,31.820851,internal exception #5
2102,AliveStatements,96,bv_decide,FAIL,81.642276,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [(x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝² ==
       x✝¹ &&& x✝³ <<< x✝² ^^^ x✝ <<< x✝²,
     x✝² <ᵤ BitVec.ofNat w w]
    Consider the following assignment:
    x✝² <ᵤ BitVec.ofNat w w = true
    (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝² == x✝¹ &&& x✝³ <<< x✝² ^^^ x✝ <<< x✝² = false"
2103,AliveStatements,96,bv_auto,PASS,2029.723621,
2104,AliveStatements,96,bv_automata_circuit_lean_prop,FAIL,19.528686,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²'"
2105,AliveStatements,96,bv_automata_circuit_lean,FAIL,6.223992,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²'"
2106,AliveStatements,96,bv_normalize_automata_circuit_lean,FAIL,27.129217,internal exception #5
2107,AliveStatements,96,bv_automata_circuit_cadical_prop,FAIL,25.117881,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²'"
2108,AliveStatements,96,bv_automata_circuit_cadical,FAIL,8.119585,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²'"
2109,AliveStatements,96,bv_normalize_automata_circuit_cadical,FAIL,30.156171,internal exception #5
2110,AliveStatements,96,bv_mba,FAIL,4.970573,"unable to reflect term '
      (x✝ ^^^ x✝¹ >>> x✝² &&& x✝³) <<< x✝²'.
    Expected 'int * variable'."
2111,AliveStatements,96,bv_normalize_mba,FAIL,23.418893,internal exception #5
2112,AliveStatements,97,rfl,FAIL,5.830747,"tactic 'rfl' failed, the left-hand side
      (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹
    is not definitionally equal to the right-hand side
      x✝ &&& x✝² <<< x✝¹ ||| x✝³ <<< x✝¹
    case neg
    w : ℕ
    x✝³ x✝² x✝¹ x✝ : BitVec w
    h✝ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    ⊢ (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹ = x✝ &&& x✝² <<< x✝¹ ||| x✝³ <<< x✝¹"
2113,AliveStatements,97,bv_bitwise,FAIL,987.359169,internal exception #5
2114,AliveStatements,97,bv_ac,FAIL,32.098507,internal exception #5
2115,AliveStatements,97,bv_distrib,PASS,1247.087305,
2116,AliveStatements,97,bv_ring,FAIL,109.979093,internal exception #5
2117,AliveStatements,97,bv_of_bool,FAIL,23.632596,simp made no progress
2118,AliveStatements,97,bv_omega,FAIL,8.817301,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝¹.toNat
     c := ↑2 ^ w
     d := ↑(x✝ &&& x✝² <<< x✝¹ ||| x✝³ <<< x✝¹).toNat
     e := ↑((x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹).toNat"
2119,AliveStatements,97,bv_automata_classic_prop,FAIL,37.228636,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹'"
2120,AliveStatements,97,bv_automata_classic,FAIL,6.778331,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹'"
2121,AliveStatements,97,bv_normalize_automata_classic,FAIL,44.913197,internal exception #5
2122,AliveStatements,97,simp,FAIL,505.193798,internal exception #5
2123,AliveStatements,97,bv_normalize,FAIL,24.353988,internal exception #5
2124,AliveStatements,97,bv_decide,FAIL,96.909316,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [~~~(~~~(x✝ >>> x✝¹ &&& x✝²) &&&
             ~~~x✝³) <<<
         x✝¹ ==
       ~~~(~~~(x✝ &&& x✝² <<< x✝¹) &&& ~~~(x✝³ <<< x✝¹)),
     x✝¹ <ᵤ BitVec.ofNat w w]
    Consider the following assignment:
    x✝¹ <ᵤ BitVec.ofNat w w = true
    ~~~(~~~(x✝ >>> x✝¹ &&& x✝²) &&& ~~~x✝³) <<< x✝¹ == ~~~(~~~(x✝ &&& x✝² <<< x✝¹) &&& ~~~(x✝³ <<< x✝¹)) = false"
2125,AliveStatements,97,bv_auto,PASS,1963.555196,
2126,AliveStatements,97,bv_automata_circuit_lean_prop,FAIL,23.508123,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹'"
2127,AliveStatements,97,bv_automata_circuit_lean,FAIL,6.268614,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹'"
2128,AliveStatements,97,bv_normalize_automata_circuit_lean,FAIL,29.03621,internal exception #5
2129,AliveStatements,97,bv_automata_circuit_cadical_prop,FAIL,21.997931,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹'"
2130,AliveStatements,97,bv_automata_circuit_cadical,FAIL,8.069762,"expected shiftLeft by natural number, found symbolic shift amount 'x✝¹' at '
      (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹'"
2131,AliveStatements,97,bv_normalize_automata_circuit_cadical,FAIL,31.750537,internal exception #5
2132,AliveStatements,97,bv_mba,FAIL,3.906414,"unable to reflect term '
      (x✝ >>> x✝¹ &&& x✝² ||| x✝³) <<< x✝¹'.
    Expected 'int * variable'."
2133,AliveStatements,97,bv_normalize_mba,FAIL,26.954604,internal exception #5
2134,AliveStatements,98,rfl,FAIL,0.942246,"tactic 'rfl' failed, the left-hand side
      some ((x✝ ^^^ x✝¹) >>> x✝²)
    is not definitionally equal to the right-hand side
      none
    case pos
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    h✝¹ : ¬x✝² ≥ ↑w
    h✝ : x✝² ≥ ↑w ∨ x✝² ≥ ↑w
    ⊢ some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2135,AliveStatements,98,bv_bitwise,FAIL,0.100964,"applyExtTheorem only applies to equations, not
      some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2136,AliveStatements,98,bv_ac,FAIL,17.838483,internal exception #5
2137,AliveStatements,98,bv_distrib,FAIL,158.515562,internal exception #5
2138,AliveStatements,98,bv_ring,FAIL,162.265228,internal exception #5
2139,AliveStatements,98,bv_of_bool,FAIL,23.937278,simp made no progress
2140,AliveStatements,98,bv_omega,PASS,20.553944,
2141,AliveStatements,98,bv_automata_classic_prop,FAIL,23.873159,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2142,AliveStatements,98,bv_automata_classic,FAIL,11.255796,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2143,AliveStatements,98,bv_normalize_automata_classic,PASS,20.351132,
2144,AliveStatements,98,simp,FAIL,205.148919,internal exception #5
2145,AliveStatements,98,bv_normalize,PASS,21.631436,
2146,AliveStatements,98,bv_decide,PASS,17.807087,
2147,AliveStatements,98,bv_auto,PASS,430.233952,
2148,AliveStatements,98,bv_automata_circuit_lean_prop,FAIL,30.924575,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2149,AliveStatements,98,bv_automata_circuit_lean,FAIL,9.959228,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2150,AliveStatements,98,bv_normalize_automata_circuit_lean,PASS,32.349065,
2151,AliveStatements,98,bv_automata_circuit_cadical_prop,FAIL,42.147584,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2152,AliveStatements,98,bv_automata_circuit_cadical,FAIL,10.641307,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2153,AliveStatements,98,bv_normalize_automata_circuit_cadical,PASS,17.830317,
2154,AliveStatements,98,bv_mba,FAIL,0.215741,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none
    case pos
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    h✝¹ : ¬x✝² ≥ ↑w
    h✝ : x✝² ≥ ↑w ∨ x✝² ≥ ↑w
    ⊢ some ((x✝ ^^^ x✝¹) >>> x✝²) ⊑ none"
2155,AliveStatements,98,bv_normalize_mba,PASS,15.866914,
2156,AliveStatements,99,rfl,FAIL,4.468176,"tactic 'rfl' failed, the left-hand side
      (x✝ ^^^ x✝¹) >>> x✝²
    is not definitionally equal to the right-hand side
      x✝ >>> x✝² ^^^ x✝¹ >>> x✝²
    case neg
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    h✝¹ : ¬x✝² ≥ ↑w
    h✝ : ¬(x✝² ≥ ↑w ∨ x✝² ≥ ↑w)
    ⊢ (x✝ ^^^ x✝¹) >>> x✝² = x✝ >>> x✝² ^^^ x✝¹ >>> x✝²"
2157,AliveStatements,99,bv_bitwise,PASS,550.715989,
2158,AliveStatements,99,bv_ac,FAIL,35.872744,internal exception #5
2159,AliveStatements,99,bv_distrib,FAIL,320.589769,internal exception #5
2160,AliveStatements,99,bv_ring,FAIL,116.277191,internal exception #5
2161,AliveStatements,99,bv_of_bool,FAIL,19.895692,simp made no progress
2162,AliveStatements,99,bv_omega,FAIL,9.137124,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝².toNat
     c := ↑2 ^ w
     d := ↑(x✝ >>> x✝² ^^^ x✝¹ >>> x✝²).toNat
     e := ↑((x✝ ^^^ x✝¹) >>> x✝²).toNat"
2163,AliveStatements,99,bv_automata_classic_prop,FAIL,153087.79947,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                    ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                      ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                        (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 2)
                          ((Copy.Term.var 3).xor (Copy.Term.var 4))))))) =
              true)) =
        true
    is false"
2164,AliveStatements,99,bv_automata_classic,FAIL,19.94702,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                    ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                      ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                        (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 2)
                          ((Copy.Term.var 3).xor (Copy.Term.var 4))))))) =
              true)) =
        true
    is false"
2165,AliveStatements,99,bv_normalize_automata_classic,FAIL,40.478863,internal exception #5
2166,AliveStatements,99,simp,FAIL,183.72653,internal exception #5
2167,AliveStatements,99,bv_normalize,FAIL,20.82098,internal exception #5
2168,AliveStatements,99,bv_decide,FAIL,90.70756,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝² <ᵤ BitVec.ofNat w w,
     (x✝ ^^^ x✝¹) >>> x✝² == x✝ >>> x✝² ^^^ x✝¹ >>> x✝²]
    Consider the following assignment:
    x✝² <ᵤ BitVec.ofNat w w = true
    (x✝ ^^^ x✝¹) >>> x✝² == x✝ >>> x✝² ^^^ x✝¹ >>> x✝² = false"
2169,AliveStatements,99,bv_auto,PASS,309.834471,
2170,AliveStatements,99,bv_automata_circuit_lean_prop,FAIL,22.123651,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                      ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                        ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                          (Predicate.eq (Term.var 2) ((Term.var 3).xor (Term.var 4)))))).eval
                  vars w =
                false)) =
        true
    is false"
2171,AliveStatements,99,bv_automata_circuit_lean,FAIL,11.339223,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                      ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                        ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                          (Predicate.eq (Term.var 2) ((Term.var 3).xor (Term.var 4)))))).eval
                  vars w =
                false)) =
        true
    is false"
2172,AliveStatements,99,bv_normalize_automata_circuit_lean,FAIL,31.893753,internal exception #5
2173,AliveStatements,99,bv_automata_circuit_cadical_prop,FAIL,215.946158,"failed to prove goal, since decideIfZerosM established that theorem is not true."
2174,AliveStatements,99,bv_automata_circuit_cadical,FAIL,198.612939,"failed to prove goal, since decideIfZerosM established that theorem is not true."
2175,AliveStatements,99,bv_normalize_automata_circuit_cadical,FAIL,220.441627,internal exception #5
2176,AliveStatements,99,bv_mba,FAIL,3.538946,"unable to reflect term '
      (x✝ ^^^ x✝¹) >>> x✝²'.
    Expected 'int * variable'."
2177,AliveStatements,99,bv_normalize_mba,FAIL,24.695655,internal exception #5
2178,AliveStatements,100,rfl,FAIL,1.098074,"tactic 'rfl' failed, the left-hand side
      some ((x✝ + x✝¹) <<< x✝²)
    is not definitionally equal to the right-hand side
      none
    case pos
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    h✝¹ : ¬x✝² ≥ ↑w
    h✝ : x✝² ≥ ↑w ∨ x✝² ≥ ↑w
    ⊢ some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2179,AliveStatements,100,bv_bitwise,FAIL,0.143986,"applyExtTheorem only applies to equations, not
      some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2180,AliveStatements,100,bv_ac,FAIL,21.721887,internal exception #5
2181,AliveStatements,100,bv_distrib,FAIL,444.325175,internal exception #5
2182,AliveStatements,100,bv_ring,FAIL,228.165652,internal exception #5
2183,AliveStatements,100,bv_of_bool,FAIL,26.505853,simp made no progress
2184,AliveStatements,100,bv_omega,PASS,13.590361,
2185,AliveStatements,100,bv_automata_classic_prop,FAIL,21.652882,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2186,AliveStatements,100,bv_automata_classic,FAIL,6.160958,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2187,AliveStatements,100,bv_normalize_automata_classic,PASS,15.359643,
2188,AliveStatements,100,simp,FAIL,444.034122,internal exception #5
2189,AliveStatements,100,bv_normalize,PASS,23.500014,
2190,AliveStatements,100,bv_decide,PASS,15.094681,
2191,AliveStatements,100,bv_auto,PASS,737.154539,
2192,AliveStatements,100,bv_automata_circuit_lean_prop,FAIL,21.66017,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2193,AliveStatements,100,bv_automata_circuit_lean,FAIL,7.906199,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2194,AliveStatements,100,bv_normalize_automata_circuit_lean,PASS,41.125023,
2195,AliveStatements,100,bv_automata_circuit_cadical_prop,FAIL,21.340144,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2196,AliveStatements,100,bv_automata_circuit_cadical,FAIL,8.070944,"expected predicate over bitvectors (no quantification), found:  
      some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2197,AliveStatements,100,bv_normalize_automata_circuit_cadical,PASS,35.408371,
2198,AliveStatements,100,bv_mba,FAIL,0.221474,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some ((x✝ + x✝¹) <<< x✝²) ⊑ none
    case pos
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    h✝¹ : ¬x✝² ≥ ↑w
    h✝ : x✝² ≥ ↑w ∨ x✝² ≥ ↑w
    ⊢ some ((x✝ + x✝¹) <<< x✝²) ⊑ none"
2199,AliveStatements,100,bv_normalize_mba,PASS,28.936658,
2200,AliveStatements,101,rfl,FAIL,6.252899,"tactic 'rfl' failed, the left-hand side
      (x✝ + x✝¹) <<< x✝²
    is not definitionally equal to the right-hand side
      x✝ <<< x✝² + x✝¹ <<< x✝²
    case neg
    w : ℕ
    x✝² x✝¹ x✝ : BitVec w
    h✝¹ : ¬x✝² ≥ ↑w
    h✝ : ¬(x✝² ≥ ↑w ∨ x✝² ≥ ↑w)
    ⊢ (x✝ + x✝¹) <<< x✝² = x✝ <<< x✝² + x✝¹ <<< x✝²"
2201,AliveStatements,101,bv_bitwise,PASS,407.985474,
2202,AliveStatements,101,bv_ac,FAIL,23.465275,internal exception #5
2203,AliveStatements,101,bv_distrib,PASS,443.445136,
2204,AliveStatements,101,bv_ring,FAIL,155.934562,internal exception #5
2205,AliveStatements,101,bv_of_bool,FAIL,24.225739,simp made no progress
2206,AliveStatements,101,bv_omega,FAIL,11.55419,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝².toNat
     c := ↑2 ^ w
     d := ↑((x✝ <<< x✝²).toNat + (x✝¹ <<< x✝²).toNat) % ↑(2 ^ w)
     e := ↑((x✝ + x✝¹) <<< x✝²).toNat"
2207,AliveStatements,101,bv_automata_classic_prop,FAIL,22.826674,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ + x✝¹) <<< x✝²'"
2208,AliveStatements,101,bv_automata_classic,FAIL,8.976356,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ + x✝¹) <<< x✝²'"
2209,AliveStatements,101,bv_normalize_automata_classic,FAIL,40.627306,internal exception #5
2210,AliveStatements,101,simp,PASS,504.329858,
2211,AliveStatements,101,bv_normalize,FAIL,35.971187,internal exception #5
2212,AliveStatements,101,bv_decide,FAIL,107.296254,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝² <ᵤ BitVec.ofNat w w,
     (x✝ + x✝¹) <<< x✝² == x✝ <<< x✝² + x✝¹ <<< x✝²]
    Consider the following assignment:
    x✝² <ᵤ BitVec.ofNat w w = true
    (x✝ + x✝¹) <<< x✝² == x✝ <<< x✝² + x✝¹ <<< x✝² = false"
2213,AliveStatements,101,bv_auto,PASS,485.325958,
2214,AliveStatements,101,bv_automata_circuit_lean_prop,FAIL,17.817502,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ + x✝¹) <<< x✝²'"
2215,AliveStatements,101,bv_automata_circuit_lean,FAIL,5.618767,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ + x✝¹) <<< x✝²'"
2216,AliveStatements,101,bv_normalize_automata_circuit_lean,FAIL,29.054479,internal exception #5
2217,AliveStatements,101,bv_automata_circuit_cadical_prop,FAIL,20.276688,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ + x✝¹) <<< x✝²'"
2218,AliveStatements,101,bv_automata_circuit_cadical,FAIL,7.579135,"expected shiftLeft by natural number, found symbolic shift amount 'x✝²' at '
      (x✝ + x✝¹) <<< x✝²'"
2219,AliveStatements,101,bv_normalize_automata_circuit_cadical,FAIL,31.775424,internal exception #5
2220,AliveStatements,101,bv_mba,FAIL,4.37082,"unable to reflect term '
      (x✝ + x✝¹) <<< x✝²'.
    Expected 'int * variable'."
2221,AliveStatements,101,bv_normalize_mba,FAIL,31.270594,internal exception #5
2222,AliveStatements,102,rfl,FAIL,1.01375,"tactic 'rfl' failed, the left-hand side
      some (x✝ <<< x✝¹ >>> x✝¹)
    is not definitionally equal to the right-hand side
      none
    case pos
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : x✝¹ ≥ ↑w
    ⊢ some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2223,AliveStatements,102,bv_bitwise,FAIL,0.139323,"applyExtTheorem only applies to equations, not
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2224,AliveStatements,102,bv_ac,FAIL,16.961532,internal exception #5
2225,AliveStatements,102,bv_distrib,FAIL,240.724761,internal exception #5
2226,AliveStatements,102,bv_ring,FAIL,151.731234,internal exception #5
2227,AliveStatements,102,bv_of_bool,FAIL,37.812503,simp made no progress
2228,AliveStatements,102,bv_omega,PASS,10.944307,
2229,AliveStatements,102,bv_automata_classic_prop,FAIL,22.345031,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2230,AliveStatements,102,bv_automata_classic,FAIL,7.070231,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2231,AliveStatements,102,bv_normalize_automata_classic,PASS,21.759694,
2232,AliveStatements,102,simp,FAIL,236.757926,internal exception #5
2233,AliveStatements,102,bv_normalize,PASS,18.050029,
2234,AliveStatements,102,bv_decide,PASS,25.886064,
2235,AliveStatements,102,bv_auto,PASS,466.572655,
2236,AliveStatements,102,bv_automata_circuit_lean_prop,FAIL,29.120937,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2237,AliveStatements,102,bv_automata_circuit_lean,FAIL,10.078494,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2238,AliveStatements,102,bv_normalize_automata_circuit_lean,PASS,23.428413,
2239,AliveStatements,102,bv_automata_circuit_cadical_prop,FAIL,30.64667,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2240,AliveStatements,102,bv_automata_circuit_cadical,FAIL,26.937866,"expected predicate over bitvectors (no quantification), found:  
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2241,AliveStatements,102,bv_normalize_automata_circuit_cadical,PASS,23.596735,
2242,AliveStatements,102,bv_mba,FAIL,0.219236,"tactic 'apply' failed, failed to unify
      ?x = ?y
    with
      some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none
    case pos
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : x✝¹ ≥ ↑w
    ⊢ some (x✝ <<< x✝¹ >>> x✝¹) ⊑ none"
2243,AliveStatements,102,bv_normalize_mba,PASS,14.510118,
2244,AliveStatements,103,rfl,FAIL,2.727617,"tactic 'rfl' failed, the left-hand side
      x✝ <<< x✝¹ >>> x✝¹
    is not definitionally equal to the right-hand side
      x✝ &&& (-1#w) >>> x✝¹
    case neg
    w : ℕ
    x✝¹ x✝ : BitVec w
    h✝¹ : ¬(x✝¹ ≥ ↑w ∨ x✝¹ ≥ ↑w)
    h✝ : ¬x✝¹ ≥ ↑w
    ⊢ x✝ <<< x✝¹ >>> x✝¹ = x✝ &&& (-1#w) >>> x✝¹"
2245,AliveStatements,103,bv_bitwise,PASS,155842.749611,
2246,AliveStatements,103,bv_ac,FAIL,17.018406,internal exception #5
2247,AliveStatements,103,bv_distrib,FAIL,208.228073,internal exception #5
2248,AliveStatements,103,bv_ring,FAIL,135.105411,internal exception #5
2249,AliveStatements,103,bv_of_bool,FAIL,18.192077,simp made no progress
2250,AliveStatements,103,bv_omega,FAIL,8.912699,"omega could not prove the goal:
    a possible counterexample may satisfy the constraints
      e ≥ 0
      d ≥ 0
      d - e ≥ 1
      c - d ≥ 1
      c - e ≥ 1
      b ≥ 0
      b - c ≤ -1
      a ≥ 0
      a - b ≥ 1
      a - c ≤ -1
    where
     a := ↑(↑w).toNat
     b := ↑x✝¹.toNat
     c := ↑2 ^ w
     d := ↑(x✝ &&& (-1#w) >>> x✝¹).toNat
     e := ↑(x✝ <<< x✝¹ >>> x✝¹).toNat"
2251,AliveStatements,103,bv_automata_classic_prop,FAIL,30.397353,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                    ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                      ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                        (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 2)
                          ((Copy.Term.var 3).and (Copy.Term.var 4))))))) =
              true)) =
        true
    is false"
2252,AliveStatements,103,bv_automata_classic,FAIL,19.534142,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (formulaIsUniversal
                (AutoStructs.formula_of_predicate
                  ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                    ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                      ((Copy.Predicate.binary Copy.BinaryPredicate.ule (Copy.Term.var 0) (Copy.Term.var 1)).lor
                        (Copy.Predicate.binary Copy.BinaryPredicate.eq (Copy.Term.var 2)
                          ((Copy.Term.var 3).and (Copy.Term.var 4))))))) =
              true)) =
        true
    is false"
2253,AliveStatements,103,bv_normalize_automata_classic,FAIL,40.591026,internal exception #5
2254,AliveStatements,103,simp,FAIL,200.242853,internal exception #5
2255,AliveStatements,103,bv_normalize,FAIL,21.244163,internal exception #5
2256,AliveStatements,103,bv_decide,FAIL,91.252081,"The prover found a potentially spurious counterexample:
    - It abstracted the following unsupported expressions as opaque variables: [x✝ <<< x✝¹ >>> x✝¹ ==
       x✝ &&& (-1#w) >>> x✝¹,
     x✝¹ <ᵤ BitVec.ofNat w w]
    Consider the following assignment:
    x✝¹ <ᵤ BitVec.ofNat w w = true
    x✝ <<< x✝¹ >>> x✝¹ == x✝ &&& (-1#w) >>> x✝¹ = false"
2257,AliveStatements,103,bv_auto,PASS,496.776134,
2258,AliveStatements,103,bv_automata_circuit_lean_prop,FAIL,22.77492,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                      ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                        ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                          (Predicate.eq (Term.var 2) ((Term.var 3).and (Term.var 4)))))).eval
                  vars w =
                false)) =
        true
    is false"
2259,AliveStatements,103,bv_automata_circuit_lean,FAIL,11.731146,"tactic 'bv_automata_circuit' evaluated that the proposition
      Lean.reduceBool
          (decide
            (∀ (w : ℕ) (vars : List BitStream),
              ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                      ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                        ((Predicate.ule (Term.var 0) (Term.var 1)).lor
                          (Predicate.eq (Term.var 2) ((Term.var 3).and (Term.var 4)))))).eval
                  vars w =
                false)) =
        true
    is false"
2260,AliveStatements,103,bv_normalize_automata_circuit_lean,FAIL,33.325862,internal exception #5
2261,AliveStatements,103,bv_automata_circuit_cadical_prop,FAIL,214.826527,"failed to prove goal, since decideIfZerosM established that theorem is not true."
2262,AliveStatements,103,bv_automata_circuit_cadical,FAIL,198.721136,"failed to prove goal, since decideIfZerosM established that theorem is not true."
2263,AliveStatements,103,bv_normalize_automata_circuit_cadical,FAIL,220.762336,internal exception #5
2264,AliveStatements,103,bv_mba,FAIL,5.17076,"unable to reflect term '
      x✝ <<< x✝¹ >>> x✝¹'.
    Expected 'int * variable'."
2265,AliveStatements,103,bv_normalize_mba,FAIL,26.604293,internal exception #5
